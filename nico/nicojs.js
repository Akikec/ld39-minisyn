/* Generated by the Nim Compiler v0.16.1 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI3482 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI167645 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI161624 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI162018 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI161633 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI161625 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI161219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI161077 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI161413 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI161613 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI162912 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI162924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI153025 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI161039 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI161038 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI163333 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3450 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI136883 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI63004 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI136864 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI136861 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI136858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI7688 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI136834 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI136838 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI136836 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI137237 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI162073 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI162069 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI161024 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI161030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI167614 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI147002 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI147758 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI168155 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI168259 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI162014 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI167682 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI162030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI169876 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI147028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI147912 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI147849 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI153017 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI147184 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI147188 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI116 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI147186 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI146041 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI146023 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3487 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3442.node = NNI3442;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3487.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3487, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3438.base = NTI3424;
NTI3442.base = NTI3438;
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
NTI3440.base = NTI3438;
var NNI146041 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI146041.node = NNI146041;
NTI146041.base = NTI3408;
NTI146023.base = NTI146041;
NTI147186.base = NTI116;
NTI147184.base = NTI116;
NTI147188.base = NTI147184;
var NNI153017 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI153017.node = NNI153017;
NTI147849.base = NTI116;
var NNI147028 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI104, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI104, name: "Field3", sons: null}]};
NTI147028.node = NNI147028;
NTI147912.base = NTI147028;
var NNI162030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI138, name: "text", sons: null}, 
{kind: 1, offset: "step", len: 0, typ: NTI104, name: "step", sons: null}, 
{kind: 1, offset: "ttl", len: 0, typ: NTI124, name: "ttl", sons: null}]};
NTI162030.node = NNI162030;
NTI169876.base = NTI162030;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
NTI3448.base = NTI3424;
var NNI162014 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pos", len: 0, typ: NTI153017, name: "pos", sons: null}, 
{kind: 1, offset: "brightness", len: 0, typ: NTI124, name: "brightness", sons: null}]};
NTI162014.node = NNI162014;
NTI167682.base = NTI162014;
var NNI168155 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "level", len: 0, typ: NTI104, name: "level", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI153017, name: "pos", sons: null}, 
{kind: 1, offset: "z", len: 0, typ: NTI124, name: "z", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI104, name: "size", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI104, name: "color", sons: null}]};
NTI168155.node = NNI168155;
NTI168259.base = NTI168155;
var NNI147758 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI147002, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI147002, name: "Field1", sons: null}]};
NTI147758.node = NNI147758;
var NNI161024 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI161024, name: "heartParticle", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI161024, name: "crossParticle", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI161024, name: "dustParticle", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI161024, name: "bloodParticle", len: 0, sons: null}}};
NTI161024.node = NNI161024;
var NNI161030 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI161024, name: "kind", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI153017, name: "pos", sons: null}, 
{kind: 1, offset: "vel", len: 0, typ: NTI153017, name: "vel", sons: null}, 
{kind: 1, offset: "ttl", len: 0, typ: NTI124, name: "ttl", sons: null}, 
{kind: 1, offset: "maxttl", len: 0, typ: NTI124, name: "maxttl", sons: null}, 
{kind: 1, offset: "above", len: 0, typ: NTI130, name: "above", sons: null}]};
NTI161030.node = NNI161030;
NTI167614.base = NTI161030;
NTI162073.base = NTI161030;
var NNI162069 = {kind: 1, offset: "items", len: 0, typ: NTI162073, name: "items", sons: null};
NTI162069.node = NNI162069;
var NNI136834 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI136834, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI136834, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI136834, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI136834, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI136834, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI136834, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI136834, name: "JArray", len: 0, sons: null}}};
NTI136834.node = NNI136834;
var NNI136864 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI63004, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI136836, name: "Field3", sons: null}]};
NTI136864.node = NNI136864;
NTI136861.base = NTI136864;
var NNI136858 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI136861, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI136858.node = NNI136858;
NTI136883.base = NTI136836;
var NNI136838 = {kind: 3, offset: "kind", len: 7, typ: NTI136834, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI138, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI7688, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI124, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI130, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI136858, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI136883, name: "elems", sons: null}]]};
NTI136838.node = NNI136838;
NTI136836.base = NTI136838;
NTI137237.base = NTI136836;
var NNI3428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3428.node = NNI3428;
var NNI3426 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3426.node = NNI3426;
NTI3426.base = NTI3424;
NTI3428.base = NTI3426;
var NNI3450 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3450.node = NNI3450;
NTI3450.base = NTI3448;
var NNI153025 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI153025.node = NNI153025;
var NNI161039 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "killed", len: 0, typ: NTI130, name: "killed", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI138, name: "name", sons: null}, 
{kind: 1, offset: "description", len: 0, typ: NTI138, name: "description", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI153025, name: "pos", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI153025, name: "size", sons: null}]};
NTI161039.node = NNI161039;
NTI161039.base = NTI3408;
NTI161038.base = NTI161039;
NTI163333.base = NTI161038;
var NNI162912 = {kind: 2, offset: 0, typ: null, name: null, len: 9, sons: {"0": {kind: 1, offset: 0, typ: NTI162912, name: "GreenAlien", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI162912, name: "PinkAlien", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI162912, name: "OrangeAlien", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI162912, name: "BlueAlien", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI162912, name: "YellowAlien", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI162912, name: "RedAlien", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI162912, name: "BlackAlien", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI162912, name: "WhiteAlien", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI162912, name: "Tribble", len: 0, sons: null}}};
NTI162912.node = NNI162912;
var NNI162924 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI162912, name: "kind", sons: null}, 
{kind: 1, offset: "happy", len: 0, typ: NTI130, name: "happy", sons: null}, 
{kind: 1, offset: "multiplied", len: 0, typ: NTI130, name: "multiplied", sons: null}, 
{kind: 1, offset: "fed", len: 0, typ: NTI130, name: "fed", sons: null}]};
NTI162924.node = NNI162924;
var NNI161613 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "originalPos", len: 0, typ: NTI153025, name: "originalPos", sons: null}, 
{kind: 1, offset: "lastPos", len: 0, typ: NTI153025, name: "lastPos", sons: null}, 
{kind: 1, offset: "alpha", len: 0, typ: NTI124, name: "alpha", sons: null}]};
NTI161613.node = NNI161613;
NTI161613.base = NTI161039;
NTI162924.base = NTI161613;
var NNI161413 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI161413.node = NNI161413;
NTI161413.base = NTI161039;
var NNI161077 = {kind: 1, offset: "rockKind", len: 0, typ: NTI104, name: "rockKind", sons: null};
NTI161077.node = NNI161077;
NTI161077.base = NTI161039;
var NNI161219 = {kind: 1, offset: "eaten", len: 0, typ: NTI130, name: "eaten", sons: null};
NTI161219.node = NNI161219;
NTI161219.base = NTI161039;
var NNI161625 = {kind: 1, offset: "altitude", len: 0, typ: NTI124, name: "altitude", sons: null};
NTI161625.node = NNI161625;
NTI161625.base = NTI161613;
var NNI161633 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI161633.node = NNI161633;
NTI161633.base = NTI161625;
NTI161624.base = NTI161625;
var NNI162018 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "dimensions", len: 0, typ: NTI153025, name: "dimensions", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI153025, name: "offset", sons: null}, 
{kind: 1, offset: "toroidal", len: 0, typ: NTI130, name: "toroidal", sons: null}, 
{kind: 1, offset: "tension", len: 0, typ: NTI124, name: "tension", sons: null}, 
{kind: 1, offset: "ship", len: 0, typ: NTI161624, name: "ship", sons: null}, 
{kind: 1, offset: "timeout", len: 0, typ: NTI124, name: "timeout", sons: null}, 
{kind: 1, offset: "moves", len: 0, typ: NTI104, name: "moves", sons: null}, 
{kind: 1, offset: "failed", len: 0, typ: NTI130, name: "failed", sons: null}, 
{kind: 1, offset: "success", len: 0, typ: NTI130, name: "success", sons: null}, 
{kind: 1, offset: "aborted", len: 0, typ: NTI130, name: "aborted", sons: null}]};
NTI162018.node = NNI162018;
NTI167645.base = NTI153025;
var NNI3482 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3482.node = NNI3482;
NTI3482.base = NTI3426;
function makeNimstrLit(c_14003) {

    var ln = c_14003.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_14003.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function setConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_19217, src_19218, ti_19219) {

var result_19629 = null;
switch (ti_19219.kind) {
case 21: case 22: case 23: case 5: if (!(isFatPointer_19201(ti_19219))) {
result_19629 = src_19218;
}
else {
result_19629 = [src_19218[0], src_19218[1]];}


break;
case 19:       if (dest_19217 === null || dest_19217 === undefined) {
        dest_19217 = {};
      }
      else {
        for (var key in dest_19217) { delete dest_19217[key]; }
      }
      for (var key in src_19218) { dest_19217[key] = src_19218[key]; }
      result_19629 = dest_19217;
    
break;
case 18: case 17: if (!((ti_19219.base == null))) {
result_19629 = nimCopy(dest_19217, src_19218, ti_19219.base);
}
else {
if ((ti_19219.kind == 17)) {
result_19629 = (dest_19217 === null || dest_19217 === undefined) ? {m_type: ti_19219} : dest_19217;}
else {
result_19629 = (dest_19217 === null || dest_19217 === undefined) ? {} : dest_19217;}
}
nimCopyAux(result_19629, src_19218, ti_19219.node);

break;
case 24: case 4: case 27: case 16:       if (src_19218 === null) {
        result_19629 = null;
      }
      else {
        if (dest_19217 === null || dest_19217 === undefined) {
          dest_19217 = new Array(src_19218.length);
        }
        else {
          dest_19217.length = src_19218.length;
        }
        result_19629 = dest_19217;
        for (var i = 0; i < src_19218.length; ++i) {
          result_19629[i] = nimCopy(result_19629[i], src_19218[i], ti_19219.base);
        }
      }
    
break;
case 28:       if (src_19218 !== null) {
        result_19629 = src_19218.slice(0);
      }
    
break;
default: 
result_19629 = src_19218;
break;
}
return result_19629;
}
function eqStrings(a_16603, b_16604) {

    if (a_16603 == b_16604) return true;
    if ((!a_16603) || (!b_16604)) return false;
    var alen = a_16603.length;
    if (alen != b_16604.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16603[i] != b_16604[i]) return false;
    return true;
  }
function toJSStr(s_14403) {

    var len = s_14403.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_14403[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_14403[i] < 128)
        asciiPart[i] = fcc(s_14403[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_13406, ename_13407) {

e_13406.name = ename_13407;
if ((excHandler == 0)) {
unhandledException(e_13406);
}

throw e_13406;}
function arrayConstr(len_19664, value_19665, typ_19666) {

      var result = new Array(len_19664);
      for (var i = 0; i < len_19664; ++i) result[i] = nimCopy(null, value_19665, typ_19666);
      return result;
    }
function cstrToNimstr(c_14203) {

  var ln = c_14203.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_14203.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function mnewString(len_14603) {

      var result = new Array(len_14603+1);
      result[0] = 0;
      result[len_14603] = 0;
      return result;
    }
var ConstSet2 = setConstr([65, 90]);
function nimMax(a_18844, b_18845) {

var Tmp1;
var result_18846 = 0;
BeforeRet: do {
if ((b_18845 <= a_18844)) {
Tmp1 = a_18844;
}
else {
Tmp1 = b_18845;
}

result_18846 = Tmp1;
break BeforeRet;
} while (false); 
return result_18846;
}
function addInt(a_16803, b_16804) {

      var result = a_16803 + b_16804;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
var ConstSet3 = setConstr([48, 57]);
var ConstSet4 = setConstr([48, 57]);
function subInt(a_17003, b_17004) {

      var result = a_17003 - b_17004;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function mulInt(a_17203, b_17204) {

      var result = a_17203 * b_17204;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
var ConstSet5 = setConstr(32, 9, 11, 13, 10, 12);
function isObj(obj_19868, subclass_19869) {

var result_19870 = false;
BeforeRet: do {
var x_19871 = obj_19868;
if ((x_19871 == subclass_19869)) {
result_19870 = true;
break BeforeRet;
}

L1: do {
L2: while (true) {
if (!!((x_19871 == subclass_19869))) break L2;
if ((x_19871 == null)) {
result_19870 = false;
break BeforeRet;
}

x_19871 = x_19871.base;
}
} while(false);
result_19870 = true;
break BeforeRet;
} while (false); 
return result_19870;
}
function nimMin(a_18839, b_18840) {

var Tmp1;
var result_18841 = 0;
BeforeRet: do {
if ((a_18839 <= b_18840)) {
Tmp1 = a_18839;
}
else {
Tmp1 = b_18840;
}

result_18841 = Tmp1;
break BeforeRet;
} while (false); 
return result_18841;
}
var ConstSet6 = setConstr(0, 13, 10);
function addChar(x_19906, c_19907) {

    x_19906[x_19906.length-1] = c_19907; x_19906.push(0);
  }
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr(0, 125);
var ConstSet9 = setConstr([65, 90]);
var ConstSet10 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet11 = setConstr(0, 13, 10);
var nimvm_5887 = false;
var nim_program_result = 0;
var globalRaiseHook_11005 = [null];
var localRaiseHook_11010 = [null];
var outOfMemHook_11013 = [null];
function isFatPointer_19201(ti_19203) {

var result_19204 = false;
BeforeRet: do {
result_19204 = !((ConstSet1[ti_19203.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_19204;
}
function nimCopyAux(dest_19222, src_19223, n_19225) {

switch (n_19225.kind) {
case 0: 
break;
case 1:       dest_19222[n_19225.offset] = nimCopy(dest_19222[n_19225.offset], src_19223[n_19225.offset], n_19225.typ);
    
break;
case 2: L1: do {
var i_19615 = 0;
var colontmp__19617 = 0;
colontmp__19617 = (n_19225.len - 1);
var res_19620 = 0;
L2: do {
L3: while (true) {
if (!(res_19620 <= colontmp__19617)) break L3;
i_19615 = res_19620;
nimCopyAux(dest_19222, src_19223, n_19225.sons[i_19615]);
res_19620 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_19222[n_19225.offset] = nimCopy(dest_19222[n_19225.offset], src_19223[n_19225.offset], n_19225.typ);
      for (var i = 0; i < n_19225.sons.length; ++i) {
        nimCopyAux(dest_19222, src_19223, n_19225.sons[i][1]);
      }
    
break;
}
}
function add_11029(x_11032, x_11032_Idx, y_11033) {

        var len = x_11032[0].length-1;
        for (var i = 0; i < y_11033.length; ++i) {
          x_11032[0][len] = y_11033.charCodeAt(i);
          ++len;
        }
        x_11032[0][len] = 0
      }
function unhandledException(e_13253) {

var Tmp1;
var buf_13254 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_13253.message, null))) Tmp1 = false; else {Tmp1 = !((e_13253.message[0] == 0)); }if (Tmp1) {
if (buf_13254[0] != null) { buf_13254[0] = (buf_13254[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_13254[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_13254[0] != null) { buf_13254[0] = (buf_13254[0].slice(0, -1)).concat(e_13253.message); } else { buf_13254[0] = e_13253.message;};
}
else {
if (buf_13254[0] != null) { buf_13254[0] = (buf_13254[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_13254[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_13254[0] != null) { buf_13254[0] = (buf_13254[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_13254[0] = makeNimstrLit(" [");};
add_11029(buf_13254, 0, e_13253.name);
if (buf_13254[0] != null) { buf_13254[0] = (buf_13254[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_13254[0] = makeNimstrLit("]\x0A");};
var cbuf_13401 = toJSStr(buf_13254[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_13401);
  }
  else {
    throw cbuf_13401;
  }
  }
function raiseOverflow() {

var e_13840 = null;
e_13840 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null};
e_13840.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
e_13840.parent = null;
raiseException(e_13840, "OverflowError");
}
function raiseDivByZero() {

var e_13858 = null;
e_13858 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13858.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
e_13858.parent = null;
raiseException(e_13858, "DivByZeroError");
}
var state_56605 = /**/[{a0: 1773455756, a1: 4275166512}];
function getTime_59042() {

var result_61013 = null;
BeforeRet: do {
result_61013 = new Date();
break BeforeRet;
} while (false); 
return result_61013;
}
var startMilsecs_61112 = /**/[getTime_59042()];
var objectID_63232 = /**/[0];
var basePath_147078 = [null];
var swCanvas_147081 = [null];
var screenWidth_147083 = [0];
var screenHeight_147084 = [0];
var swCanvas32_147087 = [null];
var currentColor_147089 = [0];
var canvas_147091 = [null];
var mouseX_147093 = [0];
var mouseY_147094 = [0];
var mouseButtonsDown_147099 = [[false, false, false]];
var mouseButtons_147103 = [new Int32Array(3)];
var haveMouse_147105 = [false];
var sfxData_147109 = [arrayConstr(64, null, NTI146023)];
var musicData_147113 = [arrayConstr(64, null, NTI146023)];
var currentMusic_147115 = /**/[null];
var ctx_147117 = [null];
var audioContext_147119 = [null];
var sfxGain_147121 = [null];
var musicGain_147122 = [null];
var cameraX_147125 = /**/[0];
var cameraY_147126 = /**/[0];
var timeStep_147128 = /**/[1.6666666666666666e-02];
var tilemap_147129 = [{width: 0, height: 0, data: null}];
var clipRect_147134 = /**/[{Field0: 0, Field1: 0, Field2: 128, Field3: 128}];
var clipMinX_147136 = /**/[0];
var clipMinY_147137 = /**/[0];
var clipMaxX_147139 = /**/[127];
var clipMaxY_147141 = /**/[127];
var font_147142 = [{width: 0, height: 0, data: null, rects: null}];
var spritesheet_147144 = [{width: 0, height: 0, data: null, rects: null}];
var paletteTransparent_147148 = [[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]];
var paletteMapDraw_147152 = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];
L2: do {
var i_147163 = [0];
var res_147167 = 0;
L3: do {
L4: while (true) {
if (!(res_147167 <= 15)) break L4;
i_147163[0] = res_147167;
paletteTransparent_147148[0][i_147163[0]] = false;
paletteMapDraw_147152[0][i_147163[0]] = i_147163[0];
res_147167 += 1;
}
} while(false);
} while(false);
paletteTransparent_147148[0][0] = true;
var frame_147171 = /**/[0];
var initFunc_147172 = [null];
var updateFunc_147174 = [null];
var drawFunc_147176 = [null];
function makeColor_147178(r_147180, g_147181, b_147182) {

var result_147185 = new Uint8Array(3);
BeforeRet: do {
nimCopy(result_147185, [r_147180, g_147181, b_147182], NTI147186);
break BeforeRet;
} while (false); 
return result_147185;
}
var colors_147229 = /**/[nimCopy(null, [makeColor_147178(0, 0, 0), makeColor_147178(29, 43, 83), makeColor_147178(126, 37, 83), makeColor_147178(0, 135, 81), makeColor_147178(171, 82, 54), makeColor_147178(95, 87, 79), makeColor_147178(194, 195, 199), makeColor_147178(255, 241, 232), makeColor_147178(255, 0, 77), makeColor_147178(255, 163, 0), makeColor_147178(255, 240, 36), makeColor_147178(0, 231, 86), makeColor_147178(41, 173, 255), makeColor_147178(131, 118, 156), makeColor_147178(255, 119, 168), makeColor_147178(255, 204, 170)], NTI147188)];
var keysDown_147312 = [[false, false, false, false, false, false, false, false, false, false]];
var keyState_147317 = [new Int32Array(10)];
function setBtn(b_147741, down_147742) {

keysDown_147312[0][b_147741] = down_147742;
}
function mute() {

if (!((musicGain_147122[0].gain.value == 0.0))) {
musicGain_147122[0].gain.value = 0.0;
sfxGain_147121[0].gain.value = 0.0;
}
else {
musicGain_147122[0].gain.value = 1.0000000000000000e+00;
sfxGain_147121[0].gain.value = 1.0000000000000000e+00;
}

}
function clearSaveData() {

window.localStorage.clear();
}
var interval_149914 = [null];
var IDMATRIX_151058 = matrix2d_151042(1.0000000000000000e+00, 0.0, 0.0, 1.0000000000000000e+00, 0.0, 0.0);
var ORIGO_151059 = point2d_151054(0.0, 0.0);
var XAXIS_151060 = vector2d_151050(1.0000000000000000e+00, 0.0);
var YAXIS_151061 = vector2d_151050(0.0, 1.0000000000000000e+00);
var levelId_162034 = [0];
var nextLevelId_162036 = [0];
var previousLevelId_162038 = /**/[-1];
var unlockedLevel_162040 = [0.0];
var levelsCompleted_162044 = [new Int32Array(32)];
var currentLevel_162046 = [{dimensions: {Field0: 0, Field1: 0}, offset: {Field0: 0, Field1: 0}, toroidal: false, tension: 0.0, ship: null, timeout: 0.0, moves: 0, failed: false, success: false, aborted: false}];
function vec2i_153037(x_153039, y_153040) {

var result_153041 = {Field0: 0, Field1: 0};
result_153041.Field0 = x_153039;
result_153041.Field1 = y_153040;
return result_153041;
}
var lastCursor_162048 = /**/[vec2i_153037(0, 0)];
var cursor_162049 = /**/[vec2i_153037(0, 0)];
var alpha_162050 = /**/[0.0];
var cursorObject_162051 = [null];
var objects_162054 = [null];
var stars_162057 = [null];
var shake_162059 = /**/[0.0];
var time_162061 = /**/[0.0];
var scanning_162063 = [false];
var particles_162074 = [{items: null}];
var confirmAbort_162076 = [false];
var warpUnlocked_162078 = [false];
var messages_162081 = [null];
var moveBuffer_162084 = [null];
var camera_162086 = [{Field0: 0.0, Field1: 0.0}];
var dragging_166930 = /**/[false];
var dragTime_166931 = /**/[0];
var menuShip_168161 = [{pos: {Field0: 0.0, Field1: 0.0}, vel: {Field0: 0.0, Field1: 0.0}, angle: 0, warping: false}];
function vec2f_153032(x_153034, y_153035) {

var result_153036 = {Field0: 0.0, Field1: 0.0};
result_153036.Field0 = x_153034;
result_153036.Field1 = y_153035;
return result_153036;
}
nimCopy(menuShip_168161[0].pos, vec2f_153032(6.4000000000000000e+01, 6.4000000000000000e+01), NTI153017);
var quadrant_168163 = /**/[0];
var planets_168166 = [null];
var closestPlanet_168169 = [null];
var warpTimer_168171 = [0.0];
var quadrantTimer_168173 = [0.0];
var quadrantInitialized_168175 = /**/[false];
var confirmQuit_170459 = [false];
var drippiness_171763 = /**/[1000];
function rfind_49694(s_49696, sub_49697, start_49698) {

var Tmp1;
var result_49699 = 0;
BeforeRet: do {
if ((start_49698 == -1)) {
Tmp1 = ((s_49696 != null ? s_49696.length-1 : 0) - 1);
}
else {
Tmp1 = start_49698;
}

var realStart_49700 = Tmp1;
L2: do {
var i_49711 = 0;
var res_49715 = realStart_49700;
L3: do {
L4: while (true) {
if (!(0 <= res_49715)) break L4;
i_49711 = res_49715;
if ((sub_49697 == s_49696[i_49711])) {
result_49699 = i_49711;
break BeforeRet;
}

res_49715 -= 1;
}
} while(false);
} while(false);
result_49699 = -1;
break BeforeRet;
} while (false); 
return result_49699;
}
function X5BX5D__21042(s_21044, x_21054) {

var result_21055 = null;
result_21055 = nimCopy(null, (s_21044.slice(x_21054.a, (x_21054.b)+1).concat(0)), NTI138);
return result_21055;
}
function dotdot__48449(a_48453, b_48455) {

var result_48457 = {a: 0, b: 0};
result_48457.a = a_48453;
result_48457.b = b_48455;
return result_48457;
}
function dirname_147708(filename_147710) {

var result_147711 = null;
BeforeRet: do {
var index_147712 = rfind_49694(filename_147710, 47, -1);
if (!((index_147712 == -1))) {
result_147711 = nimCopy(null, X5BX5D__21042(filename_147710, dotdot__48449(0, index_147712)), NTI138);
break BeforeRet;
}

} while (false); 
return result_147711;
}
function init_147722(org_147724, appname_147725) {

var pathname_147726 = cstrToNimstr(window.location.pathname);
basePath_147078[0] = nimCopy(null, dirname_147708(pathname_147726), NTI138);
console.log("basePath: ", toJSStr(basePath_147078[0]));
audioContext_147119[0] = new AudioContext();
audioContext_147119[0].resume();
sfxGain_147121[0] = audioContext_147119[0].createGain();
sfxGain_147121[0].gain.value = 1.0000000000000000e+00;
musicGain_147122[0] = audioContext_147119[0].createGain();
musicGain_147122[0].gain.value = 1.0000000000000000e+00;
sfxGain_147121[0].connect(audioContext_147119[0].destination);
musicGain_147122[0].connect(audioContext_147119[0].destination);
console.log(audioContext_147119[0]);
}
init_147722(makeNimstrLit("impbox"), makeNimstrLit("smalltrek"));
function loadPaletteArne16_147267() {

nimCopy(colors_147229[0][0], makeColor_147178(0, 0, 0), NTI147184);
nimCopy(colors_147229[0][1], makeColor_147178(157, 157, 157), NTI147184);
nimCopy(colors_147229[0][2], makeColor_147178(255, 255, 255), NTI147184);
nimCopy(colors_147229[0][3], makeColor_147178(190, 38, 51), NTI147184);
nimCopy(colors_147229[0][4], makeColor_147178(224, 111, 139), NTI147184);
nimCopy(colors_147229[0][5], makeColor_147178(73, 60, 43), NTI147184);
nimCopy(colors_147229[0][6], makeColor_147178(164, 100, 34), NTI147184);
nimCopy(colors_147229[0][7], makeColor_147178(235, 137, 49), NTI147184);
nimCopy(colors_147229[0][8], makeColor_147178(247, 226, 107), NTI147184);
nimCopy(colors_147229[0][9], makeColor_147178(47, 72, 78), NTI147184);
nimCopy(colors_147229[0][10], makeColor_147178(68, 137, 26), NTI147184);
nimCopy(colors_147229[0][11], makeColor_147178(163, 206, 39), NTI147184);
nimCopy(colors_147229[0][12], makeColor_147178(27, 38, 50), NTI147184);
nimCopy(colors_147229[0][13], makeColor_147178(0, 87, 132), NTI147184);
nimCopy(colors_147229[0][14], makeColor_147178(49, 162, 242), NTI147184);
nimCopy(colors_147229[0][15], makeColor_147178(178, 220, 239), NTI147184);
}
loadPaletteArne16_147267();
function getContext2D_54513(c_54515) {

var result_54516 = null;
result_54516=c_54515.getContext('2d');return result_54516;
}
function newSeq_147844(len_147848) {

var result_147850 = null;
result_147850 = new Array(len_147848); for (var i=0;i<len_147848;++i) {result_147850[i]=0;}return result_147850;
}
function mapRGB_148010(r_148012, g_148013, b_148014) {

var result_148015 = 0;
BeforeRet: do {
L1: do {
var i_148048 = 0;
var v_148049 = new Uint8Array(3);
var i_148077 = 0;
if ((i_148077 <= 15)) {
L2: do {
L3: while (true) {
if (!true) break L3;
i_148048 = i_148077;
v_148049 = colors_147229[0][i_148077];
if ((((v_148049[0] == r_148012) && (v_148049[1] == g_148013)) && (v_148049[2] == b_148014))) {
result_148015 = i_148048;
break BeforeRet;
}

if ((15 <= i_148077)) {
break L2;
}

i_148077 += 1;
}
} while(false);
}

} while(false);
result_148015 = 0;
break BeforeRet;
} while (false); 
return result_148015;
}
function loadSpriteSheet_148078(filename_148080) {

function colonanonymous__148082(event_148084) {

console.log("spritesheet loaded: ", img_148081.src);
var w_148093 = img_148081.width;
var h_148094 = img_148081.height;
var canvas_148095 = document.createElement("canvas");
var ctx_148096 = getContext2D_54513(canvas_148095);
canvas_148095.width = w_148093;
canvas_148095.height = h_148094;
ctx_148096.drawImage(img_148081, 0.0, 0.0);
var imgData_148097 = ctx_148096.getImageData(0.0, 0.0, w_148093, h_148094);
spritesheet_147144[0].width = w_148093;
spritesheet_147144[0].height = h_148094;
spritesheet_147144[0].data = nimCopy(null, newSeq_147844((w_148093 * h_148094)), NTI147849);
L1: do {
var y_148133 = 0;
var i_148163 = 0;
L2: do {
L3: while (true) {
if (!(i_148163 < h_148094)) break L3;
y_148133 = i_148163;
L4: do {
var x_148143 = 0;
var i_148159 = 0;
L5: do {
L6: while (true) {
if (!(i_148159 < w_148093)) break L6;
x_148143 = i_148159;
var r_148144 = imgData_148097.data[(((y_148133 * w_148093) * 4) + (x_148143 * 4))];
var g_148145 = imgData_148097.data[((((y_148133 * w_148093) * 4) + (x_148143 * 4)) + 1)];
var b_148146 = imgData_148097.data[((((y_148133 * w_148093) * 4) + (x_148143 * 4)) + 2)];
var c_148147 = mapRGB_148010(r_148144, g_148145, b_148146);
spritesheet_147144[0].data[((y_148133 * w_148093) + x_148143)] = c_148147;
i_148159 += 1;
}
} while(false);
} while(false);
i_148163 += 1;
}
} while(false);
} while(false);
}
var img_148081 = document.createElement("img");
img_148081.onload = colonanonymous__148082;
img_148081.src = toJSStr((basePath_147078[0].slice(0,-1)).concat(makeNimstrLit("assets/").slice(0,-1),filename_148080));
}
loadSpriteSheet_148078(makeNimstrLit("spritesheet.png"));
function newSeq_147907(len_147911) {

var result_147913 = null;
result_147913 = new Array(len_147911); for (var i=0;i<len_147911;++i) {result_147913[i]={Field0: 0, Field1: 0, Field2: 0, Field3: 0};}return result_147913;
}
function loadFont_147809(filename_147811, chars_147812) {

function colonanonymous__147814(event_147816) {

var target_147817 = event_147816.target;
console.log("image loaded: ", target_147817.src);
var canvas_147826 = document.createElement("canvas");
var ctx_147827 = getContext2D_54513(canvas_147826);
var w_147828 = target_147817.width;
var h_147829 = target_147817.height;
canvas_147826.width = w_147828;
canvas_147826.height = h_147829;
ctx_147827.drawImage(target_147817, 0.0, 0.0);
var fontData32_147830 = ctx_147827.getImageData(0.0, 0.0, w_147828, h_147829);
font_147142[0].width = w_147828;
font_147142[0].height = h_147829;
font_147142[0].data = nimCopy(null, newSeq_147844((w_147828 * h_147829)), NTI147849);
L1: do {
var i_147877 = 0;
var colontmp__147993 = 0;
colontmp__147993 = (w_147828 * h_147829);
var i_147996 = 0;
L2: do {
L3: while (true) {
if (!(i_147996 < colontmp__147993)) break L3;
i_147877 = i_147996;
if ((fontData32_147830.data[((i_147877 * 4) + 3)] == 0)) {
font_147142[0].data[i_147877] = 0;
}
else {
if ((0 < fontData32_147830.data[((i_147877 * 4) + 0)])) {
font_147142[0].data[i_147877] = 2;
}
else {
font_147142[0].data[i_147877] = 1;
}
}
i_147996 += 1;
}
} while(false);
} while(false);
font_147142[0].rects = nimCopy(null, newSeq_147907(256), NTI147912);
var newChar_147932 = false;
var blankColor_147933 = font_147142[0].data[0];
var currentRect_147935 = {Field0: 0, Field1: 0, Field2: 0, Field3: 0};
var i_147936 = 0;
L4: do {
var x_147946 = 0;
var i_148008 = 0;
L5: do {
L6: while (true) {
if (!(i_148008 < w_147828)) break L6;
x_147946 = i_148008;
var color_147947 = font_147142[0].data[x_147946];
if ((color_147947 == blankColor_147933)) {
currentRect_147935.Field2 = (x_147946 - currentRect_147935.Field0);
if (!((currentRect_147935.Field2 == 0))) {
currentRect_147935.Field3 = (h_147829 - 1);
L7: do {
var y_147965 = 0;
var i_148003 = 0;
L8: do {
L9: while (true) {
if (!(i_148003 < h_147829)) break L9;
y_147965 = i_148003;
var color_147966 = font_147142[0].data[((y_147965 * w_147828) + x_147946)];
if ((color_147966 == blankColor_147933)) {
currentRect_147935.Field3 = (y_147965 - 2);
}

i_148003 += 1;
}
} while(false);
} while(false);
var charId_147975 = (chars_147812[i_147936]|0);
nimCopy(font_147142[0].rects[charId_147975], currentRect_147935, NTI147028);
i_147936 += 1;
}

newChar_147932 = true;
currentRect_147935.Field0 = (x_147946 + 1);
}

i_148008 += 1;
}
} while(false);
} while(false);
}
var img_147813 = document.createElement("img");
img_147813.onload = colonanonymous__147814;
img_147813.src = toJSStr((basePath_147078[0].slice(0,-1)).concat(makeNimstrLit("assets/").slice(0,-1),filename_147811));
}
loadFont_147809(makeNimstrLit("font.png"), makeNimstrLit(" !\"#$%&\'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{:}~"));
function createWindow_149943(title_149945, w_149946, h_149947, scale_149948) {

function colonanonymous__149975(e_149977) {

haveMouse_147105[0] = true;
var scale_149978 = (canvas_147091[0].clientWidth / screenWidth_147083[0]);
mouseX_147093[0] = ((e_149977.offsetX / scale_149978)|0);
mouseY_147094[0] = ((e_149977.offsetY / scale_149978)|0);
}
function colonanonymous__149985(e_149987) {

haveMouse_147105[0] = true;
mouseButtonsDown_147099[0][e_149987.button] = true;
e_149987.preventDefault();
}
function colonanonymous__149988(e_149990) {

mouseButtonsDown_147099[0][e_149990.button] = false;
e_149990.preventDefault();
}
function colonanonymous__149991(e_149993) {

e_149993.preventDefault();
}
function colonanonymous__149994(e_149996) {

var e_149997 = e_149996;
mouseButtonsDown_147099[0][0] = true;
var scale_149998 = (canvas_147091[0].clientWidth / screenWidth_147083[0]);
mouseX_147093[0] = (((e_149997.touches.item(0).pageX - e_149997.target.offsetLeft) / scale_149998)|0);
mouseY_147094[0] = (((e_149997.touches.item(0).pageY - e_149997.target.offsetTop) / scale_149998)|0);
e_149997.preventDefault();
}
function colonanonymous__150005(e_150007) {

var e_150008 = e_150007;
var scale_150009 = (canvas_147091[0].clientWidth / screenWidth_147083[0]);
mouseX_147093[0] = (((e_150008.touches.item(0).pageX - e_150008.target.offsetLeft) / scale_150009)|0);
mouseY_147094[0] = (((e_150008.touches.item(0).pageY - e_150008.target.offsetTop) / scale_150009)|0);
e_150008.preventDefault();
}
function colonanonymous__150016(e_150018) {

mouseButtonsDown_147099[0][0] = false;
e_150018.preventDefault();
}
function colonanonymous__150031(event_150033) {

if ((event_150033.keyCode == 27)) {
keysDown_147312[0][9] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 13)) {
keysDown_147312[0][8] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 37)) {
keysDown_147312[0][0] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 39)) {
keysDown_147312[0][1] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 38)) {
keysDown_147312[0][2] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 40)) {
keysDown_147312[0][3] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 90)) {
keysDown_147312[0][4] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 88)) {
keysDown_147312[0][6] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 16)) {
keysDown_147312[0][5] = true;
event_150033.preventDefault();
}

if ((event_150033.keyCode == 67)) {
keysDown_147312[0][7] = true;
event_150033.preventDefault();
}

}
function colonanonymous__150038(event_150040) {

if ((event_150040.keyCode == 27)) {
keysDown_147312[0][9] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 13)) {
keysDown_147312[0][8] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 37)) {
keysDown_147312[0][0] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 39)) {
keysDown_147312[0][1] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 38)) {
keysDown_147312[0][2] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 40)) {
keysDown_147312[0][3] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 90)) {
keysDown_147312[0][4] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 88)) {
keysDown_147312[0][6] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 16)) {
keysDown_147312[0][5] = false;
event_150040.preventDefault();
}

if ((event_150040.keyCode == 67)) {
keysDown_147312[0][7] = false;
event_150040.preventDefault();
}

}
swCanvas_147081[0] = nimCopy(null, newSeq_147844((w_149946 * h_149947)), NTI147849);
screenWidth_147083[0] = w_149946;
screenHeight_147084[0] = h_149947;
canvas_147091[0] = document.createElement("canvas");
canvas_147091[0].width = w_149946;
canvas_147091[0].height = h_149947;
canvas_147091[0].style.width = toJSStr((cstrToNimstr(((w_149946 * scale_149948))+"").slice(0,-1)).concat(makeNimstrLit("px")));
canvas_147091[0].style.height = toJSStr((cstrToNimstr(((h_149947 * scale_149948))+"").slice(0,-1)).concat(makeNimstrLit("px")));
canvas_147091[0].style.cursor = "none";
canvas_147091[0].onmousemove = colonanonymous__149975;
canvas_147091[0].onmousedown = colonanonymous__149985;
canvas_147091[0].onmouseup = colonanonymous__149988;
canvas_147091[0].addEventListener("contextmenu", colonanonymous__149991, false);
canvas_147091[0].addEventListener("touchstart", colonanonymous__149994, false);
canvas_147091[0].addEventListener("touchmove", colonanonymous__150005, false);
canvas_147091[0].addEventListener("touchend", colonanonymous__150016, false);
var holder_150019 = document.getElementById("nicogame");
if (!((holder_150019 == null))) {
holder_150019.appendChild(canvas_147091[0]);
}

ctx_147117[0] = getContext2D_54513(canvas_147091[0]);
swCanvas32_147087[0] = ctx_147117[0].getImageData(0.0, 0.0, w_149946, h_149947);
frame_147171[0] = 0;
window.onkeydown = colonanonymous__150031;
window.onkeyup = colonanonymous__150038;
}
createWindow_149943(makeNimstrLit("smalltrek"), 128, 128, 4);
function step_149734() {

L1: do {
var i_149784 = 0;
var k_149785 = false;
var i_149902 = 0;
if ((i_149902 <= 9)) {
L2: do {
L3: while (true) {
if (!true) break L3;
i_149784 = i_149902;
k_149785 = keysDown_147312[0][i_149902];
if (k_149785) {
keyState_147317[0][i_149784] += 1;
}
else {
keyState_147317[0][i_149784] = 0;
}

if ((9 <= i_149902)) {
break L2;
}

i_149902 += 1;
}
} while(false);
}

} while(false);
L4: do {
var i_149827 = 0;
var b_149828 = false;
var i_149906 = 0;
if ((i_149906 <= 2)) {
L5: do {
L6: while (true) {
if (!true) break L6;
i_149827 = i_149906;
b_149828 = mouseButtonsDown_147099[0][i_149906];
if (b_149828) {
mouseButtons_147103[0][i_149827] += 1;
}
else {
mouseButtons_147103[0][i_149827] = 0;
}

if ((2 <= i_149906)) {
break L5;
}

i_149906 += 1;
}
} while(false);
}

} while(false);
if (!((updateFunc_147174[0] == null))) {
updateFunc_147174[0](1.6666666666666666e-02);
}

if (!((drawFunc_147176[0] == null))) {
drawFunc_147176[0]();
}

L7: do {
var i_149887 = 0;
var v_149888 = 0;
var i_149910 = 0;
L8: do {
L9: while (true) {
if (!(i_149910 < (swCanvas_147081[0] != null ? swCanvas_147081[0].length : 0))) break L9;
i_149887 = i_149910;
v_149888 = swCanvas_147081[0][i_149910];
swCanvas32_147087[0].data[(i_149887 * 4)] = colors_147229[0][v_149888][0];
swCanvas32_147087[0].data[((i_149887 * 4) + 1)] = colors_147229[0][v_149888][1];
swCanvas32_147087[0].data[((i_149887 * 4) + 2)] = colors_147229[0][v_149888][2];
swCanvas32_147087[0].data[((i_149887 * 4) + 3)] = 255;
i_149910 += 1;
}
} while(false);
} while(false);
ctx_147117[0].putImageData(swCanvas32_147087[0], 0.0, 0.0);
frame_147171[0] += 1;
}
function run_149916(newInitFunc_149918, newUpdateFunc_149919, newDrawFunc_149920) {

initFunc_147172[0] = newInitFunc_149918;
updateFunc_147174[0] = newUpdateFunc_149919;
drawFunc_147176[0] = newDrawFunc_149920;
if (!((initFunc_147172[0] == null))) {
initFunc_147172[0]();
}

if (!((interval_149914[0] == null))) {
window.clearInterval(interval_149914[0]);
}

interval_149914[0] = window.setInterval(step_149734, 16);
}
function loadSfx_149464(sfx_149466, filename_149467) {

function colonanonymous__149477(e_149479) {

function colonanonymous__149489(buffer_149491) {

sfxData_147109[0][sfx_149466] = buffer_149491;
}
function colonanonymous__149492() {

console.log("error decoding audio: ", toJSStr(filename_149467));
}
if ((xhr_149476.readyState == 4)) {
if ((xhr_149476.status == 200)) {
audioContext_147119[0].decodeAudioData(xhr_149476.response, colonanonymous__149489, colonanonymous__149492);
console.log("loaded ok: ", toJSStr(filename_149467));
}
else {
console.log("error loading sfx:", sfx_149466, ":", toJSStr(filename_149467));
}

}

}
console.log("loadSfx", sfx_149466, ": ", toJSStr(filename_149467));
var xhr_149476 = new XMLHttpRequest();
xhr_149476.open("GET", toJSStr((basePath_147078[0].slice(0,-1)).concat(makeNimstrLit("assets/").slice(0,-1),filename_149467)), true, null, null);
xhr_149476.responseType = "arraybuffer";
xhr_149476.onreadystatechange = colonanonymous__149477;
xhr_149476.send();
}
function toInt_161018(sfx_161020) {

var result_161021 = 0;
BeforeRet: do {
result_161021 = (sfx_161020|0);
break BeforeRet;
} while (false); 
return result_161021;
}
function loadMusic_149516(music_149518, filename_149519) {

function colonanonymous__149529(e_149531) {

function colonanonymous__149541(buffer_149543) {

musicData_147113[0][music_149518] = buffer_149543;
}
function colonanonymous__149544() {

console.log("error decoding audio: ", toJSStr(filename_149519));
}
if ((xhr_149528.readyState == 4)) {
if ((xhr_149528.status == 200)) {
audioContext_147119[0].decodeAudioData(xhr_149528.response, colonanonymous__149541, colonanonymous__149544);
console.log("loaded ok: ", toJSStr(filename_149519));
}
else {
console.log("error loading music:", music_149518, ":", toJSStr(filename_149519));
}

}

}
console.log("music", music_149518, ": ", toJSStr(filename_149519));
var xhr_149528 = new XMLHttpRequest();
xhr_149528.open("GET", toJSStr((basePath_147078[0].slice(0,-1)).concat(makeNimstrLit("assets/").slice(0,-1),filename_149519)), true, null, null);
xhr_149528.responseType = "arraybuffer";
xhr_149528.onreadystatechange = colonanonymous__149529;
xhr_149528.send();
}
function musicVol_149568(vol_149570) {

musicGain_147122[0].gain.value = (vol_149570 / 2.5600000000000000e+02);
}
function introInit_171755() {

frame_147171[0] = 0;
loadSfx_149464(toInt_161018(0), makeNimstrLit("sfx/smalltrek_0.ogg"));
loadSfx_149464(toInt_161018(1), makeNimstrLit("sfx/smalltrek_1.ogg"));
loadSfx_149464(toInt_161018(2), makeNimstrLit("sfx/smalltrek_2.ogg"));
loadSfx_149464(toInt_161018(3), makeNimstrLit("sfx/smalltrek_3.ogg"));
loadSfx_149464(toInt_161018(4), makeNimstrLit("sfx/smalltrek_4.ogg"));
loadSfx_149464(toInt_161018(5), makeNimstrLit("sfx/smalltrek_5.ogg"));
loadSfx_149464(toInt_161018(6), makeNimstrLit("sfx/smalltrek_6.ogg"));
loadSfx_149464(toInt_161018(7), makeNimstrLit("sfx/smalltrek_7.ogg"));
loadSfx_149464(toInt_161018(9), makeNimstrLit("sfx/smalltrek_8.ogg"));
loadSfx_149464(toInt_161018(8), makeNimstrLit("sfx/smalltrek_9.ogg"));
loadSfx_149464(toInt_161018(12), makeNimstrLit("sfx/smalltrek_10.ogg"));
loadSfx_149464(toInt_161018(10), makeNimstrLit("sfx/smalltrek_11.ogg"));
loadSfx_149464(toInt_161018(13), makeNimstrLit("sfx/smalltrek_12.ogg"));
loadSfx_149464(toInt_161018(14), makeNimstrLit("sfx/smalltrek_13.ogg"));
loadMusic_149516(0, makeNimstrLit("music/overworld.ogg"));
loadMusic_149516(1, makeNimstrLit("music/underworld.ogg"));
musicVol_149568(64);
frame_147171[0] = 0;
}
function btnp_147747(b_147749) {

var result_147750 = false;
BeforeRet: do {
result_147750 = (keyState_147317[0][b_147749] == 1);
break BeforeRet;
} while (false); 
return result_147750;
}
function loadConfig_149653() {

}
function newSeq_169871(len_169875) {

var result_169877 = null;
result_169877 = new Array(len_169875); for (var i=0;i<len_169875;++i) {result_169877[i]={text: null, step: 0, ttl: 0.0};}return result_169877;
}
function music_149591(music_149593) {

if (!((currentMusic_147115[0] == null))) {
currentMusic_147115[0].stop();
}

var source_149605 = audioContext_147119[0].createBufferSource();
source_149605.buffer = musicData_147113[0][music_149593];
source_149605.loop = true;
source_149605.connect(musicGain_147122[0]);
source_149605.start();
currentMusic_147115[0] = source_149605;
}
function nsuNormalize(s_45961) {

var result_45962 = null;
result_45962 = nimCopy(null, mnewString((s_45961 != null ? s_45961.length-1 : 0)), NTI138);
var j_45963 = 0;
L1: do {
var i_45973 = 0;
var colontmp__46027 = 0;
colontmp__46027 = ((s_45961 != null ? s_45961.length-1 : 0) - 1);
var res_46030 = 0;
L2: do {
L3: while (true) {
if (!(res_46030 <= colontmp__46027)) break L3;
i_45973 = res_46030;
if ((ConstSet2[s_45961[i_45973]] != undefined)) {
result_45962[j_45963] = (s_45961[i_45973] + 32);
j_45963 += 1;
}
else {
if (!((s_45961[i_45973] == 95))) {
result_45962[j_45963] = s_45961[i_45973];
j_45963 += 1;
}
}
res_46030 += 1;
}
} while(false);
} while(false);
if (!((j_45963 == (s_45961 != null ? s_45961.length-1 : 0)))) {
result_45962.length = j_45963+1; result_45962[result_45962.length-1] = 0;
}

return result_45962;
}
function parseBool_47924(s_47926) {

var result_47927 = false;
switch (toJSStr(nsuNormalize(s_47926))) {
case "y": case "yes": case "true": case "1": case "on": result_47927 = true;

break;
case "n": case "no": case "false": case "0": case "off": result_47927 = false;

break;
default: 
var e_47934 = null;
e_47934 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
e_47934.message = nimCopy(null, (makeNimstrLit("cannot interpret as a bool: ").slice(0,-1)).concat(s_47926), NTI138);
e_47934.parent = null;
raiseException(e_47934, "ValueError");
break;
}
return result_47927;
}
function getConfigValue_149644(section_149646, key_149647) {

var result_149648 = null;
BeforeRet: do {
result_149648 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr((section_149646.slice(0,-1)).concat(makeNimstrLit(":").slice(0,-1),key_149647)))), NTI138);
break BeforeRet;
} while (false); 
return result_149648;
}
function rotl_56802(x_56804, k_56805) {

var result_56806 = 0;
result_56806 = ((x_56804 << k_56805) | ((x_56804 >>> 0) >>> ((64 - k_56805) >>> 0)));
return result_56806;
}
function next_56842(s_56845) {

var result_56846 = 0;
var s0_56847 = s_56845.a0;
var s1_56848 = s_56845.a1;
result_56846 = ((s0_56847 + s1_56848) >>> 0);
s1_56848 = (s1_56848 ^ s0_56847);
s_56845.a0 = ((rotl_56802(s0_56847, 55) ^ s1_56848) ^ (s1_56848 << 14));
s_56845.a1 = rotl_56802(s1_56848, 36);
return result_56846;
}
function randomize_57427(seed_57429) {

state_56605[0].a0 = ((seed_57429 >>> 0) >>> 16);
state_56605[0].a1 = (seed_57429 & 65535);
next_56842(state_56605[0]);
}
function srand_147780(seed_147782) {

randomize_57427((seed_147782 + 1));
}
function newSeq_167677(len_167681) {

var result_167683 = null;
result_167683 = new Array(len_167681); for (var i=0;i<len_167681;++i) {result_167683[i]={pos: {Field0: 0.0, Field1: 0.0}, brightness: 0.0};}return result_167683;
}
function plus__163207(a_163212, s_163214) {

var result_163216 = {Field0: 0.0, Field1: 0.0};
result_163216.Field0 = (a_163212.Field0 + s_163214);
result_163216.Field1 = (a_163212.Field1 + s_163214);
return result_163216;
}
function random_57318(max_57320) {

var result_57321 = 0.0;
var x_57323 = next_56842(state_56605[0]);
result_57321 = ((x_57323 / 4294967295) * max_57320);
return result_57321;
}
function rnd_147791(x_147793) {

var result_147794 = 0.0;
BeforeRet: do {
result_147794 = random_57318(x_147793);
break BeforeRet;
} while (false); 
return result_147794;
}
function rndVec_154065(mag_154067) {

var result_154068 = {Field0: 0.0, Field1: 0.0};
var hm_154069 = (mag_154067 / 2.0000000000000000e+00);
nimCopy(result_154068, vec2f_153032((rnd_147791(mag_154067) - hm_154069), (rnd_147791(mag_154067) - hm_154069)), NTI153017);
return result_154068;
}
function newSeq_168254(len_168258) {

var result_168260 = null;
result_168260 = new Array(len_168258); for (var i=0;i<len_168258;++i) {result_168260[i]={level: 0, pos: {Field0: 0.0, Field1: 0.0}, z: 0.0, size: 0, color: 0};}return result_168260;
}
function random_57277(max_57279) {

var result_57280 = 0;
BeforeRet: do {
L1: do {
L2: while (true) {
if (!true) break L2;
var x_57282 = next_56842(state_56605[0]);
if ((x_57282 < ((4294967295 - (4294967295 % max_57279)) >>> 0))) {
result_57280 = ((x_57282 % max_57279)|0);
break BeforeRet;
}

}
} while(false);
} while (false); 
return result_57280;
}
function rnd_155167(x_155171) {

var result_155172 = 0;
BeforeRet: do {
if ((x_155171 == 0)) {
result_155172 = 0;
break BeforeRet;
}

result_155172 = random_57277(x_155171);
break BeforeRet;
} while (false); 
return result_155172;
}
function random_168346(x_168351) {

var result_168352 = 0;
result_168352 = (random_57277((x_168351.b - x_168351.a)) + x_168351.a);
return result_168352;
}
function random_168317(a_168322) {

var result_168323 = 0;
result_168323 = a_168322[random_168346(dotdot__48449(0, (a_168322 != null ? a_168322.length : 0)))];
return result_168323;
}
function rnd_168309(a_168314) {

var result_168315 = 0;
BeforeRet: do {
result_168315 = random_168317(a_168314);
break BeforeRet;
} while (false); 
return result_168315;
}
function star__43008(x_43010, order_43011) {

var result_43012 = 0;
var y_43021 = (order_43011 - 1);
result_43012 = ((x_43010 ^ y_43021) - y_43021);
return result_43012;
}
function merge_168445(a_168451, b_168455, lo_168457, m_168459, hi_168461, cmp_168468, order_168470) {

BeforeRet: do {
if ((star__43008(cmp_168468(a_168451[m_168459], a_168451[(m_168459 + 1)]), order_168470) <= 0)) {
break BeforeRet;
}

var j_168471 = lo_168457;
var bb_168801 = 0;
L1: do {
L2: while (true) {
if (!(j_168471 <= m_168459)) break L2;
b_168455[bb_168801] = a_168451[j_168471];
bb_168801 += 1;
j_168471 += 1;
}
} while(false);
var i_169019 = 0;
var k_169020 = lo_168457;
L3: do {
L4: while (true) {
if (!((k_169020 < j_168471) && (j_168471 <= hi_168461))) break L4;
if ((star__43008(cmp_168468(b_168455[i_169019], a_168451[j_168471]), order_168470) <= 0)) {
a_168451[k_169020] = b_168455[i_169019];
i_169019 += 1;
}
else {
a_168451[k_169020] = a_168451[j_168471];
j_168471 += 1;
}

k_169020 += 1;
}
} while(false);
L5: do {
L6: while (true) {
if (!(k_169020 < j_168471)) break L6;
a_168451[k_169020] = b_168455[i_169019];
k_169020 += 1;
i_169019 += 1;
}
} while(false);
} while (false); 
}
function sort_168405(a_168411, cmp_168418, order_168420) {

var n_168427 = (a_168411 != null ? a_168411.length : 0);
var b_168429 = null;
b_168429 = new Array(Math.floor(n_168427 / 2)); for (var i=0;i<Math.floor(n_168427 / 2);++i) {b_168429[i]={level: 0, pos: {Field0: 0.0, Field1: 0.0}, z: 0.0, size: 0, color: 0};}var s_168440 = 1;
L1: do {
L2: while (true) {
if (!(s_168440 < n_168427)) break L2;
var m_168441 = ((n_168427 - 1) - s_168440);
L3: do {
L4: while (true) {
if (!(0 <= m_168441)) break L4;
merge_168445(a_168411, b_168429, nimMax(((m_168441 - s_168440) + 1), 0), m_168441, (m_168441 + s_168440), cmp_168418, order_168420);
m_168441 -= (s_168440 * 2);
}
} while(false);
s_168440 = (s_168440 * 2);
}
} while(false);
}
function sfx_149586(sfx_149588, channel_149589) {

var source_149590 = audioContext_147119[0].createBufferSource();
source_149590.buffer = sfxData_147109[0][sfx_149588];
source_149590.connect(sfxGain_147121[0]);
source_149590.start();
}
function setQuadrant_168176(quadrant_168179, jump_168180) {

function colonanonymous__168394(a_168396, b_168397) {

var result_168398 = 0;
BeforeRet: do {
if ((a_168396.z < b_168397.z)) {
result_168398 = -1;
break BeforeRet;
}

result_168398 = 1;
break BeforeRet;
} while (false); 
return result_168398;
}
srand_147780(quadrant_168179);
stars_162057[0] = nimCopy(null, newSeq_167677(0), NTI167682);
L1: do {
var i_168217 = 0;
var res_169839 = 0;
L2: do {
L3: while (true) {
if (!(res_169839 <= 100)) break L3;
i_168217 = res_169839;
if (stars_162057[0] != null) { stars_162057[0].push({pos: plus__163207(rndVec_154065(1.9200000000000000e+02), 6.4000000000000000e+01), brightness: rnd_147791(2.0000000000000000e+00)}); } else { stars_162057[0] = [{pos: plus__163207(rndVec_154065(1.9200000000000000e+02), 6.4000000000000000e+01), brightness: rnd_147791(2.0000000000000000e+00)}]; };
res_169839 += 1;
}
} while(false);
} while(false);
planets_168166[0] = nimCopy(null, newSeq_168254(0), NTI168259);
L4: do {
var i_168287 = 0;
var res_169847 = 0;
L5: do {
L6: while (true) {
if (!(res_169847 <= 7)) break L6;
i_168287 = res_169847;
if (planets_168166[0] != null) { planets_168166[0].push({level: ((quadrant_168179 * 8) + i_168287), pos: plus__163207(rndVec_154065(7.2000000000000000e+01), 6.4000000000000000e+01), z: rnd_147791(1.0000000000000000e+00), size: (2 + rnd_155167(4)), color: rnd_168309([1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15])}); } else { planets_168166[0] = [{level: ((quadrant_168179 * 8) + i_168287), pos: plus__163207(rndVec_154065(7.2000000000000000e+01), 6.4000000000000000e+01), z: rnd_147791(1.0000000000000000e+00), size: (2 + rnd_155167(4)), color: rnd_168309([1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15])}]; };
res_169847 += 1;
}
} while(false);
} while(false);
if ((quadrant_168179 == 0)) {
if (planets_168166[0] != null) { planets_168166[0].push({level: -1, pos: plus__163207(rndVec_154065(7.2000000000000000e+01), 6.4000000000000000e+01), z: rnd_147791(1.0000000000000000e+00), size: (2 + rnd_155167(4)), color: -1}); } else { planets_168166[0] = [{level: -1, pos: plus__163207(rndVec_154065(7.2000000000000000e+01), 6.4000000000000000e+01), z: rnd_147791(1.0000000000000000e+00), size: (2 + rnd_155167(4)), color: -1}]; };
}

sort_168405(planets_168166[0], colonanonymous__168394, 1);
closestPlanet_168169[0] = null;
quadrantTimer_168173[0] = 3.0000000000000000e+00;
if (jump_168180) {
warpTimer_168171[0] = 5.0000000000000000e-01;
sfx_149586(toInt_161018(9), -1);
}

}
function rawParseInt_37166(s_37168, b_37170, b_37170_Idx, start_37171) {

var result_37172 = 0;
var sign_37173 = -1;
var i_37174 = start_37171;
if ((s_37168[i_37174] == 43)) {
i_37174 = addInt(i_37174, 1);
}
else {
if ((s_37168[i_37174] == 45)) {
i_37174 = addInt(i_37174, 1);
sign_37173 = 1;
}
}
if ((ConstSet3[s_37168[i_37174]] != undefined)) {
b_37170[b_37170_Idx] = 0;
L1: do {
L2: while (true) {
if (!(ConstSet4[s_37168[i_37174]] != undefined)) break L2;
b_37170[b_37170_Idx] = subInt(mulInt(b_37170[b_37170_Idx], 10), subInt(s_37168[i_37174], 48));
i_37174 = addInt(i_37174, 1);
L3: do {
L4: while (true) {
if (!(s_37168[i_37174] == 95)) break L4;
i_37174 = addInt(i_37174, 1);
}
} while(false);
}
} while(false);
b_37170[b_37170_Idx] = mulInt(b_37170[b_37170_Idx], sign_37173);
result_37172 = subInt(i_37174, start_37171);
}

return result_37172;
}
function npuParseBiggestInt(s_37251, number_37253, number_37253_Idx, start_37254) {

var result_37255 = 0;
var res_37256 = [0];
result_37255 = rawParseInt_37166(s_37251, res_37256, 0, start_37254);
number_37253[number_37253_Idx] = res_37256[0];
return result_37255;
}
function npuParseInt(s_37261, number_37263, number_37263_Idx, start_37264) {

var Tmp1;
var Tmp2;
var result_37265 = 0;
var res_37266 = [0];
result_37265 = npuParseBiggestInt(s_37261, res_37266, 0, start_37264);
if (!true) Tmp1 = false; else {if ((res_37266[0] < -2147483648)) Tmp2 = true; else {Tmp2 = (2147483647 < res_37266[0]); }Tmp1 = Tmp2; }if (Tmp1) {
var e_37279 = null;
e_37279 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null};
e_37279.message = nimCopy(null, makeNimstrLit("overflow"), NTI138);
e_37279.parent = null;
raiseException(e_37279, "OverflowError");
}
else {
if (!((result_37265 == 0))) {
number_37263[number_37263_Idx] = res_37266[0];
}
}
return result_37265;
}
function nsuParseInt(s_47667) {

var Tmp1;
var result_47668 = [0];
var L_47670 = npuParseInt(s_47667, result_47668, 0, 0);
if (!((L_47670 == (s_47667 != null ? s_47667.length-1 : 0)))) Tmp1 = true; else {Tmp1 = (L_47670 == 0); }if (Tmp1) {
var e_47677 = null;
e_47677 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
e_47677.message = nimCopy(null, (makeNimstrLit("invalid integer: ").slice(0,-1)).concat(s_47667), NTI138);
e_47677.parent = null;
raiseException(e_47677, "ValueError");
}

return result_47668[0];
}
function pluseq__51495(x_51500, x_51500_Idx, y_51502) {

x_51500[x_51500_Idx] = (x_51500[x_51500_Idx] + y_51502);
}
function menuInit_161055() {

var Tmp1;
var Tmp3;
var Tmp7;
var Tmp9;
var Tmp13;
loadConfig_149653();
messages_162081[0] = nimCopy(null, newSeq_169871(0), NTI169876);
unlockedLevel_162040[0] = 0.0;
music_149591(0);
++excHandler;
Tmp3 = framePtr;
try {
Tmp1 = parseBool_47924(getConfigValue_149644(makeNimstrLit("Unlocks"), makeNimstrLit("warp")));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
framePtr = Tmp3;
Tmp1 = false;
lastJSError = prevJSError;
} finally {
framePtr = Tmp3;
}
warpUnlocked_162078[0] = Tmp1;
if (!(quadrantInitialized_168175[0])) {
setQuadrant_168176(0, false);
quadrantInitialized_168175[0] = true;
}

L4: do {
var i_169912 = 0;
var i_170407 = 0;
L5: do {
L6: while (true) {
if (!(i_170407 < 32)) break L6;
i_169912 = i_170407;
++excHandler;
Tmp9 = framePtr;
try {
Tmp7 = nsuParseInt(getConfigValue_149644(makeNimstrLit("Levels"), cstrToNimstr((i_169912)+"")));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
framePtr = Tmp9;
Tmp7 = 0;
lastJSError = prevJSError;
} finally {
framePtr = Tmp9;
}
levelsCompleted_162044[0][i_169912] = Tmp7;
if ((0 < levelsCompleted_162044[0][i_169912])) {
pluseq__51495(unlockedLevel_162040, 0, 1.2500000000000000e+00);
}

i_170407 += 1;
}
} while(false);
} while(false);
nextLevelId_162036[0] = 33;
L10: do {
var i_169941 = 0;
var i_170412 = 0;
L11: do {
L12: while (true) {
if (!(i_170412 < 32)) break L12;
i_169941 = i_170412;
if ((levelsCompleted_162044[0][i_169941] == 0)) {
nextLevelId_162036[0] = i_169941;
break L10;
}

i_170412 += 1;
}
} while(false);
} while(false);
if ((nextLevelId_162036[0] == 0)) {
setQuadrant_168176(0, false);
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Welcome to Smalltrek commander!\x0AThere\'s a distress beacon\x0Acoming from that planet.\x0AReports say Botarni are feuding\x0Awith Rotans over access to\x0Aresources.\x0AHead over there and investigate.\x0A"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Welcome to Smalltrek commander!\x0AThere\'s a distress beacon\x0Acoming from that planet.\x0AReports say Botarni are feuding\x0Awith Rotans over access to\x0Aresources.\x0AHead over there and investigate.\x0A"), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Use the arrow keys to navigate\x0Aand [X] to land."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Use the arrow keys to navigate\x0Aand [X] to land."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 1)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Congratulations on completing\x0Ayour first assignment!\x0AThe quadrant is full of unrest.\x0AFollow the distress beacons and\x0Aquell the tension."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Congratulations on completing\x0Ayour first assignment!\x0AThe quadrant is full of unrest.\x0AFollow the distress beacons and\x0Aquell the tension."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 2)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("We\'ve had reports of Chrysornaks\x0Afighting with Botarni and\x0ARotans over access to crystals.\x0AGo see if you can sort it out.\x0A"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("We\'ve had reports of Chrysornaks\x0Afighting with Botarni and\x0ARotans over access to crystals.\x0AGo see if you can sort it out.\x0A"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 3)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Great work resolving that\x0Aconflict.\x0AChryrsornaks seem to be\x0Acausing more issues in alpha\x0Aquadrant.\x0AKeen an eye out."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Great work resolving that\x0Aconflict.\x0AChryrsornaks seem to be\x0Acausing more issues in alpha\x0Aquadrant.\x0AKeen an eye out."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 4)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("We\'ve had a report of a Partari\x0Aconflict with the Botarni in\x0Athis sector.\x0AThey\'re quite the social\x0Acreatures.\x0AI hope you\'re using the\x0AINFO button! [X]"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("We\'ve had a report of a Partari\x0Aconflict with the Botarni in\x0Athis sector.\x0AThey\'re quite the social\x0Acreatures.\x0AI hope you\'re using the\x0AINFO button! [X]"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 5)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Alert! There\'s a 4 way\x0Aconflict now that Partari\x0Aare advancing in\x0Athe region.\x0ABut I trust you can solve\x0Atheir disputes."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Alert! There\'s a 4 way\x0Aconflict now that Partari\x0Aare advancing in\x0Athe region.\x0ABut I trust you can solve\x0Atheir disputes."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 6)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("We\'ve had sightings of a strange\x0Anew species in this system.\x0AGo check it out and report!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("We\'ve had sightings of a strange\x0Anew species in this system.\x0AGo check it out and report!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 7)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Oh dear, these adorable things\x0Ahave encountered the\x0ABotarni. I hope it\'ll\x0Awork out ok."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Oh dear, these adorable things\x0Ahave encountered the\x0ABotarni. I hope it\'ll\x0Awork out ok."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 8)) {
if ((quadrant_168163[0] == 0)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Wonderful, you\'ve managed to\x0Asolve all the disputes in\x0Athis quadrant. But we\'re\x0Agetting reports from\x0ABeta quadrant now."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Wonderful, you\'ve managed to\x0Asolve all the disputes in\x0Athis quadrant. But we\'re\x0Agetting reports from\x0ABeta quadrant now."), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Engage your warp drive\x0Aand get over there\x0AASAP! Fly towards the beacon\x0Aas fast as you can."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Engage your warp drive\x0Aand get over there\x0AASAP! Fly towards the beacon\x0Aas fast as you can."), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Remember to disengage your\x0Awarp drive once you\x0Aarrive. Otherwise you might\x0Aend up in Delta\x0Aquadrant."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Remember to disengage your\x0Awarp drive once you\x0Aarrive. Otherwise you might\x0Aend up in Delta\x0Aquadrant."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

}

if ((nextLevelId_162036[0] == 9)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Looks like these cute\x0Acritters are causing\x0Aa ruckus over Beta quadrant\x0Atoo."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Looks like these cute\x0Acritters are causing\x0Aa ruckus over Beta quadrant\x0Atoo."), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Chrysornaks really seem\x0Ato hate them though.\x0AI wonder why..."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Chrysornaks really seem\x0Ato hate them though.\x0AI wonder why..."), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("How could anyone\x0Ahate something so CUTE?"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("How could anyone\x0Ahate something so CUTE?"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 10)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Botarni in this quadrant\x0Ahave reported their\x0Aplants being eaten by Omnatrus.\x0AGo see what you can do."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Botarni in this quadrant\x0Ahave reported their\x0Aplants being eaten by Omnatrus.\x0AGo see what you can do."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 11)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("We\'ve had a report of\x0Acreatures snatching Cuwudles.\x0AThey don\'t seem to be doing\x0Aany harm. They just\x0Areally love them."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("We\'ve had a report of\x0Acreatures snatching Cuwudles.\x0AThey don\'t seem to be doing\x0Aany harm. They just\x0Areally love them."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 12)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Some new friends have\x0Amoved in from another quadrant.\x0AThey claim they don\'t have\x0Aenough space.\x0ASee if you can help\x0Athe Sordax out."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Some new friends have\x0Amoved in from another quadrant.\x0AThey claim they don\'t have\x0Aenough space.\x0ASee if you can help\x0Athe Sordax out."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 13)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Hopefulyl these new\x0ASordax will get along\x0Awith the Cuwudles\x0Abetter than the Chrysornaks do."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Hopefulyl these new\x0ASordax will get along\x0Awith the Cuwudles\x0Abetter than the Chrysornaks do."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 14)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Sordax, Cuwudles, Rotans\x0Aand Chrysornaks.\x0AThis will be a challenge!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Sordax, Cuwudles, Rotans\x0Aand Chrysornaks.\x0AThis will be a challenge!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 15)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Ack! Botarni and Omnatrus!\x0ANot a good match.\x0ALook after those plants.\x0AAnd those Cuwudles of course!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Ack! Botarni and Omnatrus!\x0ANot a good match.\x0ALook after those plants.\x0AAnd those Cuwudles of course!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 16)) {
if (!((quadrant_168163[0] == 2))) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Lots of new faces in the\x0ABeta quadrant. But they all\x0Aseem to be settled now.\x0AHead on over to the\x0ADelta quadrant."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Lots of new faces in the\x0ABeta quadrant. But they all\x0Aseem to be settled now.\x0AHead on over to the\x0ADelta quadrant."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Reports of Mookarin facing\x0Aoff with Chrysornaks.\x0APresumably something to do\x0Awith Cuwudles."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Reports of Mookarin facing\x0Aoff with Chrysornaks.\x0APresumably something to do\x0Awith Cuwudles."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 17)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Things are getting messy!\x0AYou\'re on your own here.\x0AGood luck Commander!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Things are getting messy!\x0AYou\'re on your own here.\x0AGood luck Commander!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 19)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("What!?!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("What!?!"), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("What are Cardaks doing in the\x0ADelta quadrant?!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("What are Cardaks doing in the\x0ADelta quadrant?!"), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Be super careful!\x0ALook after those Cuwudles!\x0AI love them so!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Be super careful!\x0ALook after those Cuwudles!\x0AI love them so!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 20)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Cardaks are only happy\x0Awhen they\'re formed up\x0Acorrectly.\x0AMake sure they\'re spaced out\x0Aand aligned with another\x0Asoldier!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Cardaks are only happy\x0Awhen they\'re formed up\x0Acorrectly.\x0AMake sure they\'re spaced out\x0Aand aligned with another\x0Asoldier!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 23)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("I used to think there\x0Acould never be too many\x0ACuwudles...\x0AMaybe I need to reconsider."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("I used to think there\x0Acould never be too many\x0ACuwudles...\x0AMaybe I need to reconsider."), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Cardaks sure have a way\x0Awith them...."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Cardaks sure have a way\x0Awith them...."), step: 0, ttl: 5.0000000000000000e+00}]; };
}

if ((nextLevelId_162036[0] == 24)) {
if (!((quadrant_168163[0] == 3))) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Delta quadrant is clear!\x0ALet\'s head to the Gamma\x0Aquadrant!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Delta quadrant is clear!\x0ALet\'s head to the Gamma\x0Aquadrant!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

}

if ((nextLevelId_162036[0] == 33)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Congratulations! You\'ve\x0Amade the whole world a\x0Ahappy place!\x0AEven if it is a small world!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Congratulations! You\'ve\x0Amade the whole world a\x0Ahappy place!\x0AEven if it is a small world!"), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Thanks for playing commander!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Thanks for playing commander!"), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("This game was made by Impbox\x0AFor Ludum Dare 38:\x0A\'A Small World\'."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("This game was made by Impbox\x0AFor Ludum Dare 38:\x0A\'A Small World\'."), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("It was made entirely\x0Ain 48 hours."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("It was made entirely\x0Ain 48 hours."), step: 0, ttl: 5.0000000000000000e+00}]; };
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Now it\'s time to have\x0Aa nap!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Now it\'s time to have\x0Aa nap!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

nimCopy(menuShip_168161[0].vel, vec2f_153032(0.0, 0.0), NTI153017);
if (!!(warpUnlocked_162078[0])) Tmp13 = false; else {Tmp13 = (8.0000000000000000e+00 <= unlockedLevel_162040[0]); }if (Tmp13) {
nextLevelId_162036[0] = -1;
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Report to StarBase LD38\x0Acommander!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Report to StarBase LD38\x0Acommander!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}

L14: do {
var planet_170402 = {level: 0, pos: {Field0: 0.0, Field1: 0.0}, z: 0.0, size: 0, color: 0};
var i_170456 = 0;
var L_170458 = (planets_168166[0] != null ? planets_168166[0].length : 0);
L15: do {
L16: while (true) {
if (!(i_170456 < L_170458)) break L16;
planet_170402 = planets_168166[0][i_170456];
if ((planet_170402.level == previousLevelId_162038[0])) {
nimCopy(menuShip_168161[0].pos, planet_170402.pos, NTI153017);
break L14;
}

i_170456 += 1;
}
} while(false);
} while(false);
}
function shutdown_149941() {

window.clearInterval(interval_149914[0]);
}
function btn_147743(b_147745) {

var result_147746 = false;
BeforeRet: do {
result_147746 = (0 < keyState_147317[0][b_147745]);
break BeforeRet;
} while (false); 
return result_147746;
}
function mousebtn_147761(b_147764) {

var result_147765 = false;
BeforeRet: do {
result_147765 = (0 < mouseButtons_147103[0][b_147764]);
break BeforeRet;
} while (false); 
return result_147765;
}
function nsuIsSpaceAsciiChar(c_45672) {

var result_45673 = false;
BeforeRet: do {
result_45673 = (ConstSet5[c_45672] != undefined);
break BeforeRet;
} while (false); 
return result_45673;
}
function mousebtnp_147766(b_147769) {

var result_147770 = false;
BeforeRet: do {
result_147770 = (mouseButtons_147103[0][b_147769] == 1);
break BeforeRet;
} while (false); 
return result_147770;
}
function minuseq__59185(x_59190, x_59190_Idx, y_59192) {

x_59190[x_59190_Idx] = (x_59190[x_59190_Idx] - y_59192);
}
function mouse_147756() {

var result_147759 = {Field0: 0, Field1: 0};
BeforeRet: do {
nimCopy(result_147759, {Field0: mouseX_147093[0], Field1: mouseY_147094[0]}, NTI147758);
break BeforeRet;
} while (false); 
return result_147759;
}
function minus__162099(a_162104, b_162107) {

var result_162109 = {Field0: 0.0, Field1: 0.0};
result_162109.Field0 = (a_162104.Field0 - b_162107.Field0);
result_162109.Field1 = (a_162104.Field1 - b_162107.Field1);
return result_162109;
}
function lengthSqr_170555(a_170560) {

var result_170561 = 0.0;
BeforeRet: do {
result_170561 = ((a_170560.Field0 * a_170560.Field0) + (a_170560.Field1 * a_170560.Field1));
break BeforeRet;
} while (false); 
return result_170561;
}
function length_170575(a_170580) {

var result_170581 = 0.0;
BeforeRet: do {
result_170581 = Math.sqrt(((a_170580.Field0 * a_170580.Field0) + (a_170580.Field1 * a_170580.Field1)));
break BeforeRet;
} while (false); 
return result_170581;
}
function normalize_170565(a_170570) {

var result_170572 = {Field0: 0.0, Field1: 0.0};
var length_170582 = length_170575(a_170570);
result_170572.Field0 = (a_170570.Field0 / length_170582);
result_170572.Field1 = (a_170570.Field1 / length_170582);
return result_170572;
}
function pluseq__167489(a_167495, b_167498) {

pluseq__51495(a_167495, "Field0", b_167498.Field0);
pluseq__51495(a_167495, "Field1", b_167498.Field1);
}
function star__162126(a_162131, s_162133) {

var result_162135 = {Field0: 0.0, Field1: 0.0};
result_162135.Field0 = (a_162131.Field0 * s_162133);
result_162135.Field1 = (a_162131.Field1 * s_162133);
return result_162135;
}
function clamp_151076(x_151080, a_151082, b_151084) {

var result_151085 = 0.0;
BeforeRet: do {
if ((x_151080 < a_151082)) {
result_151085 = a_151082;
break BeforeRet;
}

if ((b_151084 < x_151080)) {
result_151085 = b_151084;
break BeforeRet;
}

result_151085 = x_151080;
break BeforeRet;
} while (false); 
return result_151085;
}
function stareq__51485(x_51490, x_51490_Idx, y_51492) {

x_51490[x_51490_Idx] = (x_51490[x_51490_Idx] * y_51492);
}
function stareq__167523(a_167529, s_167531) {

stareq__51485(a_167529, "Field0", s_167531);
stareq__51485(a_167529, "Field1", s_167531);
}
function mod_143305(x_143309, y_143311) {

var Tmp1;
var result_143312 = 0.0;
if ((y_143311 == 0.0)) {
Tmp1 = x_143309;
}
else {
Tmp1 = (x_143309 - (y_143311 * Math.floor((x_143309 / y_143311))));
}

result_143312 = Tmp1;
return result_143312;
}
function fadeMusicOut_149606(ms_149608) {

}
function newSeq_167609(len_167613) {

var result_167615 = null;
result_167615 = new Array(len_167613); for (var i=0;i<len_167613;++i) {result_167615[i]={kind: 0, pos: {Field0: 0.0, Field1: 0.0}, vel: {Field0: 0.0, Field1: 0.0}, ttl: 0.0, maxttl: 0.0, above: false};}return result_167615;
}
function initPool_167601(size_167605) {

var result_167607 = {items: null};
result_167607.items = nimCopy(null, newSeq_167609(0), NTI167614);
return result_167607;
}
function getVarType_143297(x_143299) {

var result_143300 = 0;
BeforeRet: do {
result_143300 = 0;
switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_143299)))) {
case "[object Array]": result_143300 = 6;
break BeforeRet;

break;
case "[object Object]": result_143300 = 5;
break BeforeRet;

break;
case "[object Number]": if ((mod_143305(x_143299, 1.0000000000000000e+00) == 0.0)) {
result_143300 = 2;
break BeforeRet;
}
else {
result_143300 = 3;
break BeforeRet;
}


break;
case "[object Boolean]": result_143300 = 1;
break BeforeRet;

break;
case "[object Null]": result_143300 = 0;
break BeforeRet;

break;
case "[object String]": result_143300 = 4;
break BeforeRet;

break;
default: 
break;
}
} while (false); 
return result_143300;
}
function newJArray_137211() {

var result_137213 = null;
result_137213 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_137213.kind = 6;
result_137213.elems = nimCopy(null, [], NTI137237);
return result_137213;
}
function len_143403(x_143405) {

var result_143406 = 0;
      result_143406 = x_143405.length;
    return result_143406;
}
function add_140424(father_140426, child_140427) {

if (father_140426.elems != null) { father_140426.elems.push(child_140427); } else { father_140426.elems = [child_140427]; };
}
function X5BX5D__143801(x_143803, y_143804) {

var result_143805 = {};
      result_143805 = x_143803[y_143804];
    return result_143805;
}
function initOrderedTable_137003(initialSize_137008) {

var result_137010 = {data: null, counter: 0, first: 0, last: 0};
result_137010.counter = 0;
result_137010.first = -1;
result_137010.last = -1;
result_137010.data = new Array(initialSize_137008); for (var i=0;i<initialSize_137008;++i) {result_137010.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}return result_137010;
}
function newJObject_136990() {

var result_136992 = null;
result_136992 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_136992.kind = 5;
nimCopy(result_136992.fields, initOrderedTable_137003(4), NTI136858);
return result_136992;
}
function emarkamp__63007(h_63009, val_63010) {

var result_63011 = 0;
result_63011 = ((h_63009 + val_63010) >>> 0);
result_63011 = ((result_63011 + (result_63011 << 10)) >>> 0);
result_63011 = (result_63011 ^ ((result_63011 >>> 0) >>> 6));
return result_63011;
}
function emarkdollar__63044(h_63046) {

var result_63047 = 0;
result_63047 = ((h_63046 + (h_63046 << 3)) >>> 0);
result_63047 = (result_63047 ^ ((result_63047 >>> 0) >>> 11));
result_63047 = ((result_63047 + (result_63047 << 15)) >>> 0);
return result_63047;
}
function hash_63836(x_63838) {

var result_63839 = 0;
var h_63840 = 0;
L1: do {
var i_63850 = 0;
var colontmp__63860 = 0;
colontmp__63860 = ((x_63838 != null ? x_63838.length-1 : 0) - 1);
var res_63863 = 0;
L2: do {
L3: while (true) {
if (!(res_63863 <= colontmp__63860)) break L3;
i_63850 = res_63863;
h_63840 = emarkamp__63007(h_63840, x_63838[i_63850]);
res_63863 += 1;
}
} while(false);
} while(false);
result_63839 = emarkdollar__63044(h_63840);
return result_63839;
}
function isFilled_66464(hcode_66466) {

var result_66467 = false;
result_66467 = !((hcode_66466 == 0));
return result_66467;
}
function nextTry_66601(h_66603, maxHash_66604) {

var result_66605 = 0;
result_66605 = ((h_66603 + 1) & maxHash_66604);
return result_66605;
}
function rawGet_137500(t_137506, key_137508, hc_137510, hc_137510_Idx) {

var Tmp3;
var result_137511 = 0;
BeforeRet: do {
hc_137510[hc_137510_Idx] = hash_63836(key_137508);
if ((hc_137510[hc_137510_Idx] == 0)) {
hc_137510[hc_137510_Idx] = 314159265;
}

var h_137515 = (hc_137510[hc_137510_Idx] & (t_137506.data != null ? (t_137506.data.length-1) : -1));
L1: do {
L2: while (true) {
if (!isFilled_66464(t_137506.data[h_137515].Field0)) break L2;
if (!(t_137506.data[h_137515].Field0 == hc_137510[hc_137510_Idx])) Tmp3 = false; else {Tmp3 = eqStrings(t_137506.data[h_137515].Field2, key_137508); }if (Tmp3) {
result_137511 = h_137515;
break BeforeRet;
}

h_137515 = nextTry_66601(h_137515, (t_137506.data != null ? (t_137506.data.length-1) : -1));
}
} while(false);
result_137511 = (-1 - h_137515);
} while (false); 
return result_137511;
}
function mustRehash_66469(length_66471, counter_66472) {

var result_66473 = false;
result_66473 = (((length_66471 * 2) < (counter_66472 * 3)) || ((length_66471 - counter_66472) < 4));
return result_66473;
}
function rawGetKnownHC_137570(t_137576, key_137578, hc_137580) {

var result_137581 = 0;
BeforeRet: do {
var h_137582 = (hc_137580 & (t_137576.data != null ? (t_137576.data.length-1) : -1));
L1: do {
L2: while (true) {
if (!isFilled_66464(t_137576.data[h_137582].Field0)) break L2;
if (((t_137576.data[h_137582].Field0 == hc_137580) && eqStrings(t_137576.data[h_137582].Field2, key_137578))) {
result_137581 = h_137582;
break BeforeRet;
}

h_137582 = nextTry_66601(h_137582, (t_137576.data != null ? (t_137576.data.length-1) : -1));
}
} while(false);
result_137581 = (-1 - h_137582);
} while (false); 
return result_137581;
}
function rawInsert_137587(t_137594, data_137598, data_137598_Idx, key_137600, val_137602, hc_137604, h_137606) {

data_137598[data_137598_Idx][h_137606].Field2 = nimCopy(null, key_137600, NTI138);
data_137598[data_137598_Idx][h_137606].Field3 = val_137602;
data_137598[data_137598_Idx][h_137606].Field0 = hc_137604;
data_137598[data_137598_Idx][h_137606].Field1 = -1;
if ((t_137594.first < 0)) {
t_137594.first = h_137606;
}

if ((0 <= t_137594.last)) {
data_137598[data_137598_Idx][t_137594.last].Field1 = h_137606;
}

t_137594.last = h_137606;
}
function enlarge_137528(t_137535) {

var n_137539 = null;
n_137539 = new Array(((t_137535.data != null ? t_137535.data.length : 0) * 2)); for (var i=0;i<((t_137535.data != null ? t_137535.data.length : 0) * 2);++i) {n_137539[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}var h_137557 = t_137535.first;
t_137535.first = -1;
t_137535.last = -1;
var Tmp1 = t_137535.data; t_137535.data = n_137539; n_137539 = Tmp1;L2: do {
L3: while (true) {
if (!(0 <= h_137557)) break L3;
var nxt_137568 = n_137539[h_137557].Field1;
if (isFilled_66464(n_137539[h_137557].Field0)) {
var j_137585 = (-1 - rawGetKnownHC_137570(t_137535, n_137539[h_137557].Field2, n_137539[h_137557].Field0));
rawInsert_137587(t_137535, t_137535, "data", n_137539[h_137557].Field2, n_137539[h_137557].Field3, n_137539[h_137557].Field0, j_137585);
}

h_137557 = nxt_137568;
}
} while(false);
}
function X5BX5Deq__137486(t_137493, key_137495, val_137497) {

var hc_137498 = [0];
var index_137519 = rawGet_137500(t_137493, key_137495, hc_137498, 0);
if ((0 <= index_137519)) {
t_137493.data[index_137519].Field3 = val_137497;
}
else {
if (mustRehash_66469((t_137493.data != null ? t_137493.data.length : 0), t_137493.counter)) {
enlarge_137528(t_137493);
index_137519 = rawGetKnownHC_137570(t_137493, key_137495, hc_137498[0]);
}

index_137519 = (-1 - index_137519);
rawInsert_137587(t_137493, t_137493, "data", key_137495, val_137497, hc_137498[0], index_137519);
t_137493.counter += 1;
}

}
function X5BX5Deq__140816(obj_140818, key_140819, val_140820) {

X5BX5Deq__137486(obj_140818.fields, key_140819, val_140820);
}
function newJInt_136940(n_136942) {

var result_136943 = null;
result_136943 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_136943.kind = 2;
result_136943.num = n_136942;
return result_136943;
}
function newJFloat_136953(n_136955) {

var result_136956 = null;
result_136956 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_136956.kind = 3;
result_136956.fnum = n_136955;
return result_136956;
}
function newJString_136914(s_136916) {

var result_136917 = null;
result_136917 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_136917.kind = 4;
result_136917.str = nimCopy(null, s_136916, NTI138);
return result_136917;
}
function newJBool_136966(b_136968) {

var result_136969 = null;
result_136969 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
result_136969.kind = 1;
result_136969.bval = b_136968;
return result_136969;
}
function newJNull_136979() {

var result_136981 = null;
result_136981 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
return result_136981;
}
function convertObject_144001(x_144003) {

var result_144004 = null;
switch (getVarType_143297(x_144003)) {
case 6: result_144004 = newJArray_137211();
L1: do {
var i_144021 = 0;
var colontmp__144026 = 0;
colontmp__144026 = len_143403(x_144003) - 1;
var res_144029 = 0;
L2: do {
L3: while (true) {
if (!(res_144029 <= colontmp__144026)) break L3;
i_144021 = res_144029;
add_140424(result_144004, convertObject_144001(X5BX5D__143801(x_144003, i_144021)));
res_144029 += 1;
}
} while(false);
} while(false);

break;
case 5: result_144004 = newJObject_136990();
for (property in x_144003) {
        if (x_144003.hasOwnProperty(property)) {
      var nimProperty_144023 = null;
var nimValue_144024 = {};
nimProperty_144023 = property; nimValue_144024 = x_144003[property];X5BX5Deq__140816(result_144004, cstrToNimstr(nimProperty_144023), convertObject_144001(nimValue_144024));
}}
break;
case 2: result_144004 = newJInt_136940(x_144003);

break;
case 3: result_144004 = newJFloat_136953(x_144003);

break;
case 4: result_144004 = newJString_136914(cstrToNimstr(x_144003));

break;
case 1: result_144004 = newJBool_136966(x_144003);

break;
case 0: result_144004 = newJNull_136979();

break;
}
return result_144004;
}
function parseJson_144039(buffer_144041) {

var result_144042 = null;
BeforeRet: do {
result_144042 = convertObject_144001(JSON.parse(toJSStr(buffer_144041)));
break BeforeRet;
} while (false); 
return result_144042;
}
function parseFile_149613(filename_149615) {

var result_149616 = null;
BeforeRet: do {
console.log("parseFile: ", toJSStr(filename_149615));
var xhr_149619 = new XMLHttpRequest();
xhr_149619.open("GET", toJSStr(filename_149615), false, null, null);
xhr_149619.send();
if ((xhr_149619.status == 200)) {
result_149616 = parseJson_144039(cstrToNimstr(xhr_149619.responseText));
break BeforeRet;
}
else {
var e_149627 = null;
e_149627 = {m_type: NTI3428, parent: null, name: null, message: null, trace: null};
e_149627.message = nimCopy(null, makeNimstrLit("unable to open file"), NTI138);
e_149627.parent = null;
raiseException(e_149627, "IOError");
}

} while (false); 
return result_149616;
}
function rawGet_138533(t_138538, key_138540, hc_138542, hc_138542_Idx) {

var Tmp3;
var result_138543 = 0;
BeforeRet: do {
hc_138542[hc_138542_Idx] = hash_63836(key_138540);
if ((hc_138542[hc_138542_Idx] == 0)) {
hc_138542[hc_138542_Idx] = 314159265;
}

var h_138547 = (hc_138542[hc_138542_Idx] & (t_138538.data != null ? (t_138538.data.length-1) : -1));
L1: do {
L2: while (true) {
if (!isFilled_66464(t_138538.data[h_138547].Field0)) break L2;
if (!(t_138538.data[h_138547].Field0 == hc_138542[hc_138542_Idx])) Tmp3 = false; else {Tmp3 = eqStrings(t_138538.data[h_138547].Field2, key_138540); }if (Tmp3) {
result_138543 = h_138547;
break BeforeRet;
}

h_138547 = nextTry_66601(h_138547, (t_138538.data != null ? (t_138538.data.length-1) : -1));
}
} while(false);
result_138543 = (-1 - h_138547);
} while (false); 
return result_138543;
}
function X5BX5D__138518(t_138525, key_138527) {

var result_138529 = [null, 0];
var result_138529_Idx = 0;
var hc_138531 = [0];
var index_138552 = rawGet_138533(t_138525, key_138527, hc_138531, 0);
if ((0 <= index_138552)) {
result_138529 = t_138525.data[index_138552]; result_138529_Idx = "Field3";
}
else {
var e_138606 = null;
e_138606 = {m_type: NTI3450, parent: null, name: null, message: null, trace: null};
e_138606.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(key_138527), NTI138);
e_138606.parent = null;
raiseException(e_138606, "KeyError");
}

return [result_138529, result_138529_Idx];
}
function X5BX5D__138731(node_138733, name_138734) {

var Tmp1;
var result_138735 = null;
result_138735 = (Tmp1 = X5BX5D__138518(node_138733.fields, name_138734), Tmp1[0])[Tmp1[1]];
return result_138735;
}
function keepIf_163249(seq1_163255, seq1_163255_Idx, pred_163260) {

var pos_163261 = 0;
L1: do {
var i_163285 = 0;
var colontmp__163306 = 0;
colontmp__163306 = (seq1_163255[seq1_163255_Idx] != null ? seq1_163255[seq1_163255_Idx].length : 0) - 1;
var res_163309 = 0;
L2: do {
L3: while (true) {
if (!(res_163309 <= colontmp__163306)) break L3;
i_163285 = res_163309;
if (pred_163260(seq1_163255[seq1_163255_Idx][i_163285])) {
if (!((pos_163261 == i_163285))) {
seq1_163255[seq1_163255_Idx][pos_163261] = seq1_163255[seq1_163255_Idx][i_163285];
}

pos_163261 += 1;
}

res_163309 += 1;
}
} while(false);
} while(false);
seq1_163255[seq1_163255_Idx].length = pos_163261;
}
function keepIf_163236(self_163242, test_163247) {

keepIf_163249(self_163242, "items", test_163247);
}
function newSeq_163328(len_163332) {

var result_163334 = null;
result_163334 = new Array(len_163332); for (var i=0;i<len_163332;++i) {result_163334[i]=null;}return result_163334;
}
function new_162943() {

var result_162948 = null;
BeforeRet: do {
var r_163001 = null;
r_163001 = {m_type: NTI162924, kind: 0, happy: false, multiplied: false, fed: false, originalPos: {Field0: 0, Field1: 0}, lastPos: {Field0: 0, Field1: 0}, alpha: 0.0, killed: false, name: null, description: null, pos: {Field0: 0, Field1: 0}, size: {Field0: 0, Field1: 0}};
result_162948 = r_163001;
break BeforeRet;
} while (false); 
return result_162948;
}
function newAlien_162936(kind_162938, pos_162939) {

var result_162940 = null;
result_162940 = new_162943();
nimCopy(result_162940.size, vec2i_153037(1, 1), NTI153025);
result_162940.kind = kind_162938;
nimCopy(result_162940.pos, pos_162939, NTI153025);
nimCopy(result_162940.lastPos, pos_162939, NTI153025);
switch (kind_162938) {
case 0: result_162940.name = nimCopy(null, makeNimstrLit("BOTARNI"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("A mostly friendly PLANT loving\x0Ahumanoid.\x0AGets aggressive when deprived\x0Aof flora."), NTI138);

break;
case 2: result_162940.name = nimCopy(null, makeNimstrLit("ROTAN"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("An intelligent, ROCK dwelling\x0Ahumanoid.\x0AProne to violence when not near\x0AROCKS."), NTI138);

break;
case 3: result_162940.name = nimCopy(null, makeNimstrLit("CHRYSORNAK"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("They gather their power from\x0ACRYSTALS and can channel it\x0Athrough themselves to others.\x0AHates CUWUDLES."), NTI138);

break;
case 1: result_162940.name = nimCopy(null, makeNimstrLit("PARTARI"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("A most friendly creature,\x0Athrives on diversity,\x0ANeeds the company of\x0AOTHER SPECIES."), NTI138);

break;
case 4: result_162940.name = nimCopy(null, makeNimstrLit("OMNATRUS"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("Eats PLANTS.\x0ADestroys ecosystems.\x0ALike their own company."), NTI138);

break;
case 5: result_162940.name = nimCopy(null, makeNimstrLit("MOOKARIN"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("Loves CUWUDLES SOOO MUCH!\x0ANo Cuwudle, no nice."), NTI138);

break;
case 6: result_162940.name = nimCopy(null, makeNimstrLit("SORDAX"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("Solitary creatures by nature.\x0ANeed some SPACE to themself."), NTI138);

break;
case 7: result_162940.name = nimCopy(null, makeNimstrLit("CARDAK"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("Mighty regimented warriors.\x0AHappy when ALIGNED on a grid.\x0ABut not TOO CLOSE.\x0AViolent when displeased."), NTI138);

break;
case 8: result_162940.name = nimCopy(null, makeNimstrLit("CUWUDLE"), NTI138);
result_162940.description = nimCopy(null, makeNimstrLit("A violently fertile and\x0Aadorably CUTE fluffy creature.\x0ANeeds to reproduce to be happy."), NTI138);

break;
default: 
break;
}
return result_162940;
}
function new_161426() {

var result_161431 = null;
BeforeRet: do {
var r_161601 = null;
r_161601 = {m_type: NTI161413, killed: false, name: null, description: null, pos: {Field0: 0, Field1: 0}, size: {Field0: 0, Field1: 0}};
result_161431 = r_161601;
break BeforeRet;
} while (false); 
return result_161431;
}
function newCrystal_161420(pos_161422) {

var result_161423 = null;
result_161423 = new_161426();
nimCopy(result_161423.size, vec2i_153037(1, 1), NTI153025);
nimCopy(result_161423.pos, pos_161422, NTI153025);
result_161423.name = nimCopy(null, makeNimstrLit("CRYSTAL"), NTI138);
result_161423.description = nimCopy(null, makeNimstrLit("A shiny crystal, a source\x0Aof power for the CHRYSORNAK."), NTI138);
return result_161423;
}
function new_161093() {

var result_161098 = null;
BeforeRet: do {
var r_161201 = null;
r_161201 = {m_type: NTI161077, rockKind: 0, killed: false, name: null, description: null, pos: {Field0: 0, Field1: 0}, size: {Field0: 0, Field1: 0}};
result_161098 = r_161201;
break BeforeRet;
} while (false); 
return result_161098;
}
function newRock_161087(pos_161089) {

var result_161090 = null;
result_161090 = new_161093();
nimCopy(result_161090.pos, pos_161089, NTI153025);
nimCopy(result_161090.size, vec2i_153037(1, 1), NTI153025);
result_161090.rockKind = rnd_155167(2);
result_161090.name = nimCopy(null, makeNimstrLit("ROCK"), NTI138);
result_161090.description = nimCopy(null, makeNimstrLit("A boring rock, full of\x0Adelicious minerals.\x0Abeloved by ROTANS."), NTI138);
return result_161090;
}
function new_161236() {

var result_161241 = null;
BeforeRet: do {
var r_161401 = null;
r_161401 = {m_type: NTI161219, eaten: false, killed: false, name: null, description: null, pos: {Field0: 0, Field1: 0}, size: {Field0: 0, Field1: 0}};
result_161241 = r_161401;
break BeforeRet;
} while (false); 
return result_161241;
}
function newPlant_161230(pos_161232) {

var result_161233 = null;
result_161233 = new_161236();
nimCopy(result_161233.size, vec2i_153037(1, 1), NTI153025);
nimCopy(result_161233.pos, pos_161232, NTI153025);
result_161233.name = nimCopy(null, makeNimstrLit("PLANT"), NTI138);
result_161233.description = nimCopy(null, makeNimstrLit("A nutritious edible plant.\x0ARequires plenty of sunlight.\x0ARequired by the BOTARNI."), NTI138);
result_161233.eaten = false;
return result_161233;
}
function new_161643() {

var result_161648 = null;
BeforeRet: do {
var r_161801 = null;
r_161801 = {m_type: NTI161625, altitude: 0.0, originalPos: {Field0: 0, Field1: 0}, lastPos: {Field0: 0, Field1: 0}, alpha: 0.0, killed: false, name: null, description: null, pos: {Field0: 0, Field1: 0}, size: {Field0: 0, Field1: 0}};
result_161648 = r_161801;
break BeforeRet;
} while (false); 
return result_161648;
}
function newShip_161637(pos_161639) {

var result_161640 = null;
result_161640 = new_161643();
nimCopy(result_161640.size, vec2i_153037(2, 2), NTI153025);
nimCopy(result_161640.pos, pos_161639, NTI153025);
nimCopy(result_161640.lastPos, pos_161639, NTI153025);
result_161640.altitude = 1.2800000000000000e+02;
return result_161640;
}
function new_161819() {

var result_161824 = null;
BeforeRet: do {
var r_162001 = null;
r_162001 = {m_type: NTI161633, altitude: 0.0, originalPos: {Field0: 0, Field1: 0}, lastPos: {Field0: 0, Field1: 0}, alpha: 0.0, killed: false, name: null, description: null, pos: {Field0: 0, Field1: 0}, size: {Field0: 0, Field1: 0}};
result_161824 = r_162001;
break BeforeRet;
} while (false); 
return result_161824;
}
function newSmallShip_161813(pos_161815) {

var result_161816 = null;
result_161816 = new_161819();
nimCopy(result_161816.size, vec2i_153037(1, 1), NTI153025);
nimCopy(result_161816.pos, pos_161815, NTI153025);
nimCopy(result_161816.lastPos, pos_161815, NTI153025);
result_161816.altitude = 1.2800000000000000e+02;
result_161816.name = nimCopy(null, makeNimstrLit("SMALL SHIP"), NTI138);
result_161816.description = nimCopy(null, makeNimstrLit("A small ship for small\x0Aadventures, easily moved."), NTI138);
return result_161816;
}
function loadLevel_163011(level_163013) {

function colonanonymous__163228(a_163230) {

var result_163231 = false;
result_163231 = (0.0 < a_163230.ttl);
return result_163231;
}
var result_163014 = {dimensions: {Field0: 0, Field1: 0}, offset: {Field0: 0, Field1: 0}, toroidal: false, tension: 0.0, ship: null, timeout: 0.0, moves: 0, failed: false, success: false, aborted: false};
levelId_162034[0] = level_163013;
var map_163015 = parseFile_149613((basePath_147078[0].slice(0,-1)).concat(makeNimstrLit("assets/map").slice(0,-1),cstrToNimstr(((level_163013 + 1))+"").slice(0,-1),makeNimstrLit(".json")));
result_163014.dimensions.Field0 = X5BX5D__138731(map_163015, makeNimstrLit("width")).num;
result_163014.dimensions.Field1 = X5BX5D__138731(map_163015, makeNimstrLit("width")).num;
result_163014.offset.Field0 = (64 - (result_163014.dimensions.Field0 * 8));
result_163014.offset.Field1 = (64 - (result_163014.dimensions.Field1 * 8));
result_163014.tension = 1.0000000000000000e+00;
result_163014.timeout = 2.0000000000000000e+00;
result_163014.moves = 0;
result_163014.success = false;
scanning_162063[0] = false;
confirmAbort_162076[0] = false;
L1: do {
var s_163203 = null;
var i_163472 = 0;
var L_163474 = (stars_162057[0] != null ? stars_162057[0].length : 0);
L2: do {
L3: while (true) {
if (!(i_163472 < L_163474)) break L3;
s_163203 = stars_162057[0][i_163472];
nimCopy(s_163203.pos, plus__163207(rndVec_154065(1.2800000000000000e+02), 6.4000000000000000e+01), NTI153017);
i_163472 += 1;
}
} while(false);
} while(false);
L4: do {
var p_163227 = null;
L5: do {
var i_163480 = null;
var i_163482 = 0;
var L_163484 = (particles_162074[0].items != null ? particles_162074[0].items.length : 0);
L6: do {
L7: while (true) {
if (!(i_163482 < L_163484)) break L7;
i_163480 = particles_162074[0].items[i_163482];
p_163227 = i_163480;
p_163227.ttl = 0.0;
i_163482 += 1;
}
} while(false);
} while(false);
} while(false);
keepIf_163236(particles_162074[0], colonanonymous__163228);
objects_162054[0] = nimCopy(null, newSeq_163328(0), NTI163333);
cursorObject_162051[0] = null;
L8: do {
var layer_163361 = null;
var colontmp__163493 = null;
colontmp__163493 = X5BX5D__138731(map_163015, makeNimstrLit("layers")).elems;
var i_163496 = 0;
var L_163498 = (colontmp__163493 != null ? colontmp__163493.length : 0);
L9: do {
L10: while (true) {
if (!(i_163496 < L_163498)) break L10;
layer_163361 = colontmp__163493[i_163496];
var i_163362 = 0;
L11: do {
var t_163372 = null;
var colontmp__163487 = null;
colontmp__163487 = X5BX5D__138731(layer_163361, makeNimstrLit("data")).elems;
var i_163490 = 0;
var L_163492 = (colontmp__163487 != null ? colontmp__163487.length : 0);
L12: do {
L13: while (true) {
if (!(i_163490 < L_163492)) break L13;
t_163372 = colontmp__163487[i_163490];
var pos_163373 = vec2i_153037(Math.floor(i_163362 % result_163014.dimensions.Field0), Math.floor(i_163362 / result_163014.dimensions.Field0));
var tn_163375 = (t_163372.num - 1);
switch (tn_163375) {
case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7: if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(tn_163375, pos_163373)); } else { objects_162054[0] = [newAlien_162936(tn_163375, pos_163373)]; };

break;
case 20: if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, pos_163373)); } else { objects_162054[0] = [newAlien_162936(8, pos_163373)]; };

break;
case 16: case 17: if (objects_162054[0] != null) { objects_162054[0].push(newCrystal_161420(pos_163373)); } else { objects_162054[0] = [newCrystal_161420(pos_163373)]; };

break;
case 18: case 19: if (objects_162054[0] != null) { objects_162054[0].push(newRock_161087(pos_163373)); } else { objects_162054[0] = [newRock_161087(pos_163373)]; };

break;
case 24: if (objects_162054[0] != null) { objects_162054[0].push(newPlant_161230(pos_163373)); } else { objects_162054[0] = [newPlant_161230(pos_163373)]; };

break;
case 48: result_163014.ship = newShip_161637(pos_163373);
if (objects_162054[0] != null) { objects_162054[0].push(result_163014.ship); } else { objects_162054[0] = [result_163014.ship]; };

break;
case 58: result_163014.ship = newSmallShip_161813(pos_163373);
if (objects_162054[0] != null) { objects_162054[0].push(result_163014.ship); } else { objects_162054[0] = [result_163014.ship]; };

break;
default: 
break;
}
i_163362 += 1;
i_163490 += 1;
}
} while(false);
} while(false);
i_163496 += 1;
}
} while(false);
} while(false);
if (!((result_163014.ship == null))) {
nimCopy(cursor_162049[0], result_163014.ship.pos, NTI153025);
nimCopy(lastCursor_162048[0], cursor_162049[0], NTI153025);
}

sfx_149586(toInt_161018(3), 3);
return result_163014;
}
function newSeq_167640(len_167644) {

var result_167646 = null;
result_167646 = new Array(len_167644); for (var i=0;i<len_167644;++i) {result_167646[i]={Field0: 0, Field1: 0};}return result_167646;
}
function gameInit_167598() {

nimCopy(particles_162074[0], initPool_167601(512), NTI162069);
nimCopy(currentLevel_162046[0], loadLevel_163011(levelId_162034[0]), NTI162018);
moveBuffer_162084[0] = nimCopy(null, newSeq_167640(0), NTI167645);
stars_162057[0] = nimCopy(null, newSeq_167677(0), NTI167682);
L1: do {
var i_167711 = 0;
var res_167726 = 0;
L2: do {
L3: while (true) {
if (!(res_167726 <= 100)) break L3;
i_167711 = res_167726;
if (stars_162057[0] != null) { stars_162057[0].push({pos: vec2f_153032(rnd_147791(1.2800000000000000e+02), rnd_147791(1.2800000000000000e+02)), brightness: rnd_147791(2.0000000000000000e+00)}); } else { stars_162057[0] = [{pos: vec2f_153032(rnd_147791(1.2800000000000000e+02), rnd_147791(1.2800000000000000e+02)), brightness: rnd_147791(2.0000000000000000e+00)}]; };
res_167726 += 1;
}
} while(false);
} while(false);
time_162061[0] = 0.0;
}
function clamp_167001(x_167005, a_167007, b_167009) {

var result_167010 = 0;
BeforeRet: do {
if ((x_167005 < a_167007)) {
result_167010 = a_167007;
break BeforeRet;
}

if ((b_167009 < x_167005)) {
result_167010 = b_167009;
break BeforeRet;
}

result_167010 = x_167005;
break BeforeRet;
} while (false); 
return result_167010;
}
function toPint_150050(x_150052) {

var result_150053 = 0;
result_150053 = (x_150052|0);
return result_150053;
}
function eqeq__163605(x_163609, y_163611) {

var result_163612 = false;
BeforeRet: do {
if (!((x_163609["Field0"] == y_163611["Field0"]))) {
result_163612 = false;
break BeforeRet;
}

if (!((x_163609["Field1"] == y_163611["Field1"]))) {
result_163612 = false;
break BeforeRet;
}

result_163612 = true;
break BeforeRet;
} while (false); 
return result_163612;
}
function pop_167150(s_167156, s_167156_Idx) {

var result_167157 = {Field0: 0, Field1: 0};
var L_167165 = ((s_167156[s_167156_Idx] != null ? s_167156[s_167156_Idx].length : 0) - 1);
nimCopy(result_167157, s_167156[s_167156_Idx][L_167165], NTI153025);
s_167156[s_167156_Idx].length = L_167165;
return result_167157;
}
function objectAtPos_163499(pos_163501) {

var Tmp4;
var Tmp5;
var Tmp6;
var result_163502 = null;
BeforeRet: do {
L1: do {
var obj_163603 = [null, 0];
var obj_163603_Idx = 0;
var i_163625 = 0;
var L_163627 = (objects_162054[0] != null ? objects_162054[0].length : 0);
L2: do {
L3: while (true) {
if (!(i_163625 < L_163627)) break L3;
obj_163603 = objects_162054[0]; obj_163603_Idx = i_163625;
if (eqeq__163605(obj_163603[obj_163603_Idx].pos, pos_163501)) {
result_163502 = obj_163603[obj_163603_Idx];
break BeforeRet;
}
else {
if (!(obj_163603[obj_163603_Idx].pos.Field0 <= pos_163501.Field0)) Tmp6 = false; else {Tmp6 = (pos_163501.Field0 < (obj_163603[obj_163603_Idx].pos.Field0 + obj_163603[obj_163603_Idx].size.Field0)); }if (!Tmp6) Tmp5 = false; else {Tmp5 = (obj_163603[obj_163603_Idx].pos.Field1 <= pos_163501.Field1); }if (!Tmp5) Tmp4 = false; else {Tmp4 = (pos_163501.Field1 < (obj_163603[obj_163603_Idx].pos.Field1 + obj_163603[obj_163603_Idx].size.Field1)); }if (Tmp4) {
result_163502 = obj_163603[obj_163603_Idx];
break BeforeRet;
}
}
i_163625 += 1;
}
} while(false);
} while(false);
result_163502 = null;
break BeforeRet;
} while (false); 
return result_163502;
}
function add_164062(self_164068, item_164070, force_164072) {

if (self_164068.items != null) { self_164068.items.push(item_164070); } else { self_164068.items = [item_164070]; };
}
function plus__162140(a_162145, b_162148) {

var result_162150 = {Field0: 0.0, Field1: 0.0};
result_162150.Field0 = (a_162145.Field0 + b_162148.Field0);
result_162150.Field1 = (a_162145.Field1 + b_162148.Field1);
return result_162150;
}
function vec2f_153048(v_153050) {

var result_153051 = {Field0: 0.0, Field1: 0.0};
result_153051.Field0 = v_153050.Field0;
result_153051.Field1 = v_153050.Field1;
return result_153051;
}
function star__162457(a_162462, s_162464) {

var result_162466 = {Field0: 0, Field1: 0};
result_162466.Field0 = (a_162462.Field0 * s_162464);
result_162466.Field1 = (a_162462.Field1 * s_162464);
return result_162466;
}
function drop_162444(self_162447) {

var Tmp4;
if (!((cursorObject_162051[0] == null))) {
sfx_149586(toInt_161018(0), 2);
L1: do {
var i_166863 = 0;
var res_166925 = 0;
L2: do {
L3: while (true) {
if (!(res_166925 <= 10)) break L3;
i_166863 = res_166925;
add_164062(particles_162074[0], {kind: 2, pos: plus__162140(vec2f_153048(star__162457(cursorObject_162051[0].pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), vel: rndVec_154065(1.0000000000000000e+00), ttl: 2.5000000000000000e-01, maxttl: 2.5000000000000000e-01, above: false}, false);
res_166925 += 1;
}
} while(false);
} while(false);
if (!isObj(cursorObject_162051[0].m_type, NTI161613)) Tmp4 = false; else {Tmp4 = !(eqeq__163605(cursorObject_162051[0].pos, cursorObject_162051[0].originalPos)); }if (Tmp4) {
currentLevel_162046[0].moves += 1;
}

cursorObject_162051[0] = null;
}

}
function plus__162166(a_162171, b_162174) {

var result_162176 = {Field0: 0, Field1: 0};
result_162176.Field0 = (a_162171.Field0 + b_162174.Field0);
result_162176.Field1 = (a_162171.Field1 + b_162174.Field1);
return result_162176;
}
function pluseq__167231(a_167237, b_167240) {

a_167237.Field0 += b_167240.Field0;
a_167237.Field1 += b_167240.Field1;
}
function keepIf_167344(seq1_167350, seq1_167350_Idx, pred_167355) {

var pos_167356 = 0;
L1: do {
var i_167380 = 0;
var colontmp__167401 = 0;
colontmp__167401 = (seq1_167350[seq1_167350_Idx] != null ? seq1_167350[seq1_167350_Idx].length : 0) - 1;
var res_167404 = 0;
L2: do {
L3: while (true) {
if (!(res_167404 <= colontmp__167401)) break L3;
i_167380 = res_167404;
if (pred_167355(seq1_167350[seq1_167350_Idx][i_167380])) {
if (!((pos_167356 == i_167380))) {
seq1_167350[seq1_167350_Idx][pos_167356] = seq1_167350[seq1_167350_Idx][i_167380];
}

pos_167356 += 1;
}

res_167404 += 1;
}
} while(false);
} while(false);
seq1_167350[seq1_167350_Idx].length = pos_167356;
}
function updateConfigValue_149639(section_149641, key_149642, value_149643) {

window.localStorage.setItem(toJSStr((section_149641.slice(0,-1)).concat(makeNimstrLit(":").slice(0,-1),key_149642)), toJSStr(value_149643));
}
function saveConfig_149651() {

}
function cls_147538() {

L1: do {
var i_147556 = 0;
var colontmp__147558 = 0;
colontmp__147558 = (swCanvas_147081[0] != null ? swCanvas_147081[0].length : 0);
var i_147561 = 0;
L2: do {
L3: while (true) {
if (!(i_147561 < colontmp__147558)) break L3;
i_147556 = i_147561;
swCanvas_147081[0][i_147556] = 0;
i_147561 += 1;
}
} while(false);
} while(false);
}
function setColor_147374(c_147376) {

currentColor_147089[0] = c_147376;
}
function getColor_147377() {

var result_147379 = 0;
BeforeRet: do {
result_147379 = currentColor_147089[0];
break BeforeRet;
} while (false); 
return result_147379;
}
function seqToPtr_148609(x_148614) {

return x_148614}
function eqeq__148306(x_148311, y_148314) {

var result_148315 = false;
BeforeRet: do {
if ((seqToPtr_148609(x_148311) == seqToPtr_148609(y_148314))) {
result_148315 = true;
break BeforeRet;
}

if (((x_148311 === null) || (y_148314 === null))) {
result_148315 = false;
break BeforeRet;
}

if (!(((x_148311 != null ? x_148311.length : 0) == (y_148314 != null ? y_148314.length : 0)))) {
result_148315 = false;
break BeforeRet;
}

L1: do {
var i_148845 = 0;
var colontmp__148855 = 0;
colontmp__148855 = ((x_148311 != null ? x_148311.length : 0) - 1);
var res_148858 = 0;
L2: do {
L3: while (true) {
if (!(res_148858 <= colontmp__148855)) break L3;
i_148845 = res_148858;
if (!((x_148311[i_148845] == y_148314[i_148845]))) {
result_148315 = false;
break BeforeRet;
}

res_148858 += 1;
}
} while(false);
} while(false);
result_148315 = true;
break BeforeRet;
} while (false); 
return result_148315;
}
function textWidth_148908(text_148910, scale_148911) {

var result_148912 = 0;
BeforeRet: do {
if (eqeq__148306(font_147142[0].data, null)) {
result_148912 = 0;
break BeforeRet;
}

L1: do {
var c_148925 = 0;
var i_148940 = 0;
var L_148942 = (text_148910 != null ? text_148910.length-1 : 0);
L2: do {
L3: while (true) {
if (!(i_148940 < L_148942)) break L3;
c_148925 = text_148910[i_148940];
var src_148926 = nimCopy(null, font_147142[0].rects[c_148925], NTI147028);
result_148912 += ((src_148926.Field2 * scale_148911) + scale_148911);
i_148940 += 1;
}
} while(false);
} while(false);
} while (false); 
return result_148912;
}
function fontBlit_148165(font_148167, srcRect_148168, dstRect_148169, color_148170) {

var Tmp8;
var Tmp9;
var Tmp10;
var Tmp11;
var Tmp12;
var Tmp13;
var dPitch_148171 = screenWidth_147083[0];
var dx_148172 = /**/[dstRect_148169.Field0];
var dy_148173 = /**/[dstRect_148169.Field1];
var sx_148174 = /**/[srcRect_148168.Field0];
var sy_148175 = /**/[srcRect_148168.Field1];
var dw_148176 = dstRect_148169.Field2;
var dh_148177 = dstRect_148169.Field3;
var sw_148178 = srcRect_148168.Field2;
var sh_148179 = srcRect_148168.Field3;
L1: do {
var y_148189 = 0;
var colontmp__148280 = 0;
colontmp__148280 = (dstRect_148169.Field3 - 1);
var res_148283 = 0;
L2: do {
L3: while (true) {
if (!(res_148283 <= colontmp__148280)) break L3;
y_148189 = res_148283;
dx_148172[0] = dstRect_148169.Field0;
sx_148174[0] = srcRect_148168.Field0;
L4: do {
var x_148199 = 0;
var colontmp__148273 = 0;
colontmp__148273 = (dstRect_148169.Field2 - 1);
var res_148276 = 0;
L5: do {
L6: while (true) {
if (!(res_148276 <= colontmp__148273)) break L6;
x_148199 = res_148276;
L7: do {
if (((sx_148174[0]|0) < 0)) Tmp10 = true; else {Tmp10 = ((sy_148175[0]|0) < 0); }if (Tmp10) Tmp9 = true; else {Tmp9 = (font_148167.width < (sx_148174[0]|0)); }if (Tmp9) Tmp8 = true; else {Tmp8 = (font_148167.height < (sy_148175[0]|0)); }if (Tmp8) {
break L7;
}

if (((dx_148172[0]|0) < clipMinX_147136[0])) Tmp13 = true; else {Tmp13 = ((dy_148173[0]|0) < clipMinY_147137[0]); }if (Tmp13) Tmp12 = true; else {Tmp12 = (nimMin(screenWidth_147083[0], clipMaxX_147139[0]) < (dx_148172[0]|0)); }if (Tmp12) Tmp11 = true; else {Tmp11 = (nimMin(screenHeight_147084[0], clipMaxY_147141[0]) < (dy_148173[0]|0)); }if (Tmp11) {
break L7;
}

if ((font_148167.data[(((sy_148175[0]|0) * font_148167.width) + (sx_148174[0]|0))] == 1)) {
swCanvas_147081[0][(((dy_148173[0]|0) * dPitch_148171) + (dx_148172[0]|0))] = currentColor_147089[0];
}

pluseq__51495(sx_148174, 0, (1.0000000000000000e+00 * (sw_148178 / dw_148176)));
pluseq__51495(dx_148172, 0, 1.0000000000000000e+00);
} while(false);
res_148276 += 1;
}
} while(false);
} while(false);
pluseq__51495(sy_148175, 0, (1.0000000000000000e+00 * (sh_148179 / dh_148177)));
pluseq__51495(dy_148173, 0, 1.0000000000000000e+00);
res_148283 += 1;
}
} while(false);
} while(false);
}
function glyph_148287(c_148289, x_148290, y_148291, scale_148292) {

var result_148293 = 0;
BeforeRet: do {
var src_148294 = nimCopy(null, font_147142[0].rects[c_148289], NTI147028);
var dst_148296 = nimCopy(null, {Field0: x_148290, Field1: y_148291, Field2: (src_148294.Field2 * scale_148292), Field3: (src_148294.Field3 * scale_148292)}, NTI147028);
fontBlit_148165(font_147142[0], src_148294, dst_148296, currentColor_147089[0]);
result_148293 = ((src_148294.Field2 * scale_148292) + scale_148292);
break BeforeRet;
} while (false); 
return result_148293;
}
function print_148298(text_148300, x_148301, y_148302, scale_148303) {

if (!(eqeq__148306(font_147142[0].data, null))) {
var x_148862 = (x_148301 - cameraX_147125[0]);
var y_148863 = (y_148302 - cameraY_147126[0]);
L1: do {
var c_148865 = 0;
var i_148878 = 0;
var L_148880 = (text_148300 != null ? text_148300.length-1 : 0);
L2: do {
L3: while (true) {
if (!(i_148878 < L_148880)) break L3;
c_148865 = text_148300[i_148878];
x_148862 += glyph_148287(c_148865, x_148862, y_148863, scale_148303);
i_148878 += 1;
}
} while(false);
} while(false);
}

}
function printc_148950(text_148952, x_148953, y_148954, scale_148955) {

var width_148956 = textWidth_148908(text_148952, scale_148955);
print_148298(text_148952, (x_148953 - Math.floor(width_148956 / 2)), y_148954, scale_148955);
}
function printShadowC_154510(text_154512, x_154513, y_154514, scale_154515) {

var oldColor_154516 = getColor_147377();
setColor_147374(0);
printc_148950(text_154512, (x_154513 - scale_154515), y_154514, scale_154515);
printc_148950(text_154512, (x_154513 + scale_154515), y_154514, scale_154515);
printc_148950(text_154512, x_154513, (y_154514 - scale_154515), scale_154515);
printc_148950(text_154512, x_154513, (y_154514 + scale_154515), scale_154515);
printc_148950(text_154512, (x_154513 + scale_154515), (y_154514 + scale_154515), scale_154515);
printc_148950(text_154512, (x_154513 - scale_154515), (y_154514 - scale_154515), scale_154515);
printc_148950(text_154512, (x_154513 + scale_154515), (y_154514 - scale_154515), scale_154515);
printc_148950(text_154512, (x_154513 - scale_154515), (y_154514 + scale_154515), scale_154515);
setColor_147374(oldColor_154516);
printc_148950(text_154512, x_154513, y_154514, scale_154515);
}
function pset_147380(x_147382, y_147383) {

var Tmp1;
var Tmp2;
var Tmp3;
BeforeRet: do {
var x_147384 = (x_147382 - cameraX_147125[0]);
var y_147385 = (y_147383 - cameraY_147126[0]);
if ((x_147384 < 0)) Tmp3 = true; else {Tmp3 = ((screenWidth_147083[0] - 1) < x_147384); }if (Tmp3) Tmp2 = true; else {Tmp2 = (y_147385 < 0); }if (Tmp2) Tmp1 = true; else {Tmp1 = ((screenHeight_147084[0] - 1) < y_147385); }if (Tmp1) {
break BeforeRet;
}

swCanvas_147081[0][((y_147385 * screenWidth_147083[0]) + x_147384)] = currentColor_147089[0];
} while (false); 
}
function hline_147470(x0_147472, y_147473, x1_147474) {

var x0_147475 = x0_147472;
var x1_147476 = x1_147474;
if ((x1_147476 < x0_147475)) {
var Tmp1 = x1_147476; x1_147476 = x0_147475; x0_147475 = Tmp1;}

L2: do {
var x_147496 = 0;
var res_147500 = x0_147475;
L3: do {
L4: while (true) {
if (!(res_147500 <= x1_147476)) break L4;
x_147496 = res_147500;
pset_147380(x_147496, y_147473);
res_147500 += 1;
}
} while(false);
} while(false);
}
function rectfill_147563(x_147565, y_147566, w_147567, h_147568) {

L1: do {
var y_147578 = 0;
var colontmp__147580 = 0;
colontmp__147580 = (y_147566 + h_147568);
var i_147583 = y_147566;
L2: do {
L3: while (true) {
if (!(i_147583 < colontmp__147580)) break L3;
y_147578 = i_147583;
hline_147470(x_147565, y_147578, ((x_147565 + w_147567) - 1));
i_147583 += 1;
}
} while(false);
} while(false);
}
function setCamera_147803(x_147805, y_147806) {

cameraX_147125[0] = x_147805;
cameraY_147126[0] = y_147806;
}
function plot4pointsfill_147591(cx_147593, cy_147594, x_147595, y_147596) {

var Tmp1;
hline_147470((cx_147593 - x_147595), (cy_147594 + y_147596), (cx_147593 + x_147595));
if (!!((x_147595 == 0))) Tmp1 = false; else {Tmp1 = !((y_147596 == 0)); }if (Tmp1) {
hline_147470((cx_147593 - x_147595), (cy_147594 - y_147596), (cx_147593 + x_147595));
}

}
function circfill_147597(cx_147599, cy_147600, r_147601) {

BeforeRet: do {
if ((r_147601 == 1)) {
pset_147380(cx_147599, cy_147600);
pset_147380((cx_147599 - 1), cy_147600);
pset_147380((cx_147599 + 1), cy_147600);
pset_147380(cx_147599, (cy_147600 - 1));
pset_147380(cx_147599, (cy_147600 + 1));
break BeforeRet;
}

var err_147602 = -(r_147601);
var x_147603 = r_147601;
var y_147604 = 0;
L1: do {
L2: while (true) {
if (!(y_147604 <= x_147603)) break L2;
var lasty_147605 = y_147604;
err_147602 += y_147604;
y_147604 += 1;
err_147602 += y_147604;
plot4pointsfill_147591(cx_147599, cy_147600, x_147603, lasty_147605);
if ((0 < err_147602)) {
if (!((x_147603 == lasty_147605))) {
plot4pointsfill_147591(cx_147599, cy_147600, lasty_147605, x_147603);
}

err_147602 -= x_147603;
x_147603 -= 1;
err_147602 -= x_147603;
}

}
} while(false);
} while (false); 
}
function getSprRect_149219(spr_149223, w_149224, h_149225) {

var result_149226 = {Field0: 0, Field1: 0, Field2: 0, Field3: 0};
result_149226.Field0 = ((spr_149223 % 16) * 8);
result_149226.Field1 = (Math.floor(spr_149223 / 16) * 8);
result_149226.Field2 = (w_149224 * 8);
result_149226.Field3 = (h_149225 * 8);
return result_149226;
}
function blitFast_148957(sx_148959, sy_148960, dx_148961, dy_148962, w_148963, h_148964) {

var Tmp4;
var Tmp5;
var Tmp6;
var Tmp10;
var Tmp11;
var Tmp12;
BeforeRet: do {
if (eqeq__148306(spritesheet_147144[0].data, null)) {
break BeforeRet;
}

var sxi_148976 = sx_148959;
var syi_148977 = sy_148960;
var dxi_148978 = dx_148961;
var dyi_148979 = dy_148962;
L1: do {
L2: while (true) {
if (!(dyi_148979 < (dy_148962 + h_148964))) break L2;
L3: do {
if ((syi_148977 < 0)) Tmp6 = true; else {Tmp6 = ((spritesheet_147144[0].height - 1) < syi_148977); }if (Tmp6) Tmp5 = true; else {Tmp5 = (dyi_148979 < clipMinY_147137[0]); }if (Tmp5) Tmp4 = true; else {Tmp4 = (nimMin((screenHeight_147084[0] - 1), clipMaxY_147141[0]) < dyi_148979); }if (Tmp4) {
syi_148977 += 1;
dyi_148979 += 1;
sxi_148976 = sx_148959;
dxi_148978 = dx_148961;
break L3;
}

L7: do {
L8: while (true) {
if (!(dxi_148978 < (dx_148961 + w_148963))) break L8;
L9: do {
if ((sxi_148976 < 0)) Tmp12 = true; else {Tmp12 = ((spritesheet_147144[0].width - 1) < sxi_148976); }if (Tmp12) Tmp11 = true; else {Tmp11 = (dxi_148978 < clipMinX_147136[0]); }if (Tmp11) Tmp10 = true; else {Tmp10 = (nimMin((screenWidth_147083[0] - 1), clipMaxX_147139[0]) < dxi_148978); }if (Tmp10) {
dxi_148978 += 1;
sxi_148976 += 1;
break L9;
}

var srcCol_149016 = spritesheet_147144[0].data[((syi_148977 * spritesheet_147144[0].width) + sxi_148976)];
if (!(paletteTransparent_147148[0][srcCol_149016])) {
swCanvas_147081[0][((dyi_148979 * screenWidth_147083[0]) + dxi_148978)] = paletteMapDraw_147152[0][srcCol_149016];
}

sxi_148976 += 1;
dxi_148978 += 1;
} while(false);
}
} while(false);
syi_148977 += 1;
dyi_148979 += 1;
sxi_148976 = sx_148959;
dxi_148978 = dx_148961;
} while(false);
}
} while(false);
} while (false); 
}
function spr_149239(spr_149243, x_149244, y_149245, w_149246, h_149247, hflip_149248, vflip_149249) {

var src_149250 = getSprRect_149219(spr_149243, w_149246, h_149247);
var dst_149252 = nimCopy(null, {Field0: (x_149244 - cameraX_147125[0]), Field1: (y_149245 - cameraY_147126[0]), Field2: src_149250.Field2, Field3: src_149250.Field3}, NTI147028);
blitFast_148957(src_149250.Field0, src_149250.Field1, (x_149244 - cameraX_147125[0]), (y_149245 - cameraY_147126[0]), src_149250.Field2, src_149250.Field3);
}
function circ_147662(cx_147664, cy_147665, r_147666) {

BeforeRet: do {
if ((r_147666 == 1)) {
pset_147380((cx_147664 - 1), cy_147665);
pset_147380((cx_147664 + 1), cy_147665);
pset_147380(cx_147664, (cy_147665 - 1));
pset_147380(cx_147664, (cy_147665 + 1));
break BeforeRet;
}

var err_147667 = -(r_147666);
var x_147668 = r_147666;
var y_147669 = 0;
L1: do {
L2: while (true) {
if (!(y_147669 <= x_147668)) break L2;
pset_147380((cx_147664 + x_147668), (cy_147665 + y_147669));
pset_147380((cx_147664 + y_147669), (cy_147665 + x_147668));
pset_147380((cx_147664 - y_147669), (cy_147665 + x_147668));
pset_147380((cx_147664 - x_147668), (cy_147665 + y_147669));
pset_147380((cx_147664 - x_147668), (cy_147665 - y_147669));
pset_147380((cx_147664 - y_147669), (cy_147665 - x_147668));
pset_147380((cx_147664 + y_147669), (cy_147665 - x_147668));
pset_147380((cx_147664 + x_147668), (cy_147665 - y_147669));
y_147669 += 1;
err_147667 += (1 + (2 * y_147669));
if ((0 < ((2 * (err_147667 - x_147668)) + 1))) {
x_147668 -= 1;
err_147667 += (1 - (2 * x_147668));
}

}
} while(false);
} while (false); 
}
function palt_147342(a_147344, trans_147345) {

paletteTransparent_147148[0][a_147344] = trans_147345;
}
function pal_147319(a_147321, b_147322) {

paletteMapDraw_147152[0][a_147321] = b_147322;
}
function pal_147323() {

L1: do {
var i_147334 = 0;
var res_147338 = 0;
L2: do {
L3: while (true) {
if (!(res_147338 <= 15)) break L3;
i_147334 = res_147338;
paletteMapDraw_147152[0][i_147334] = i_147334;
res_147338 += 1;
}
} while(false);
} while(false);
}
function printShadow_154524(text_154526, x_154527, y_154528, scale_154529) {

var oldColor_154530 = getColor_147377();
setColor_147374(0);
print_148298(text_154526, (x_154527 - scale_154529), y_154528, scale_154529);
print_148298(text_154526, (x_154527 + scale_154529), y_154528, scale_154529);
print_148298(text_154526, x_154527, (y_154528 - scale_154529), scale_154529);
print_148298(text_154526, x_154527, (y_154528 + scale_154529), scale_154529);
print_148298(text_154526, (x_154527 + scale_154529), (y_154528 + scale_154529), scale_154529);
print_148298(text_154526, (x_154527 - scale_154529), (y_154528 - scale_154529), scale_154529);
print_148298(text_154526, (x_154527 + scale_154529), (y_154528 - scale_154529), scale_154529);
print_148298(text_154526, (x_154527 - scale_154529), (y_154528 + scale_154529), scale_154529);
setColor_147374(oldColor_154530);
print_148298(text_154526, x_154527, y_154528, scale_154529);
}
function keepIf_171524(seq1_171530, seq1_171530_Idx, pred_171535) {

var pos_171536 = 0;
L1: do {
var i_171560 = 0;
var colontmp__171581 = 0;
colontmp__171581 = (seq1_171530[seq1_171530_Idx] != null ? seq1_171530[seq1_171530_Idx].length : 0) - 1;
var res_171584 = 0;
L2: do {
L3: while (true) {
if (!(res_171584 <= colontmp__171581)) break L3;
i_171560 = res_171584;
if (pred_171535(seq1_171530[seq1_171530_Idx][i_171560])) {
if (!((pos_171536 == i_171560))) {
seq1_171530[seq1_171530_Idx][pos_171536] = seq1_171530[seq1_171530_Idx][i_171560];
}

pos_171536 += 1;
}

res_171584 += 1;
}
} while(false);
} while(false);
seq1_171530[seq1_171530_Idx].length = pos_171536;
}
function hasMouse_147777() {

var result_147779 = false;
BeforeRet: do {
result_147779 = haveMouse_147105[0];
break BeforeRet;
} while (false); 
return result_147779;
}
function copy_149373(sx_149375, sy_149376, dx_149377, dy_149378, w_149379, h_149380) {

var Tmp4;
var Tmp5;
var Tmp6;
var Tmp10;
var Tmp11;
var Tmp12;
var sPitch_149381 = screenWidth_147083[0];
var dPitch_149382 = screenWidth_147083[0];
var sxi_149383 = sx_149375;
var syi_149384 = sy_149376;
var dxi_149385 = dx_149377;
var dyi_149386 = dy_149378;
L1: do {
L2: while (true) {
if (!(dyi_149386 < (dy_149378 + h_149380))) break L2;
L3: do {
if ((syi_149384 < 0)) Tmp6 = true; else {Tmp6 = ((screenHeight_147084[0] - 1) < syi_149384); }if (Tmp6) Tmp5 = true; else {Tmp5 = (dyi_149386 < clipMinY_147137[0]); }if (Tmp5) Tmp4 = true; else {Tmp4 = (nimMin((screenHeight_147084[0] - 1), clipMaxY_147141[0]) < dyi_149386); }if (Tmp4) {
syi_149384 += 1;
dyi_149386 += 1;
sxi_149383 = sx_149375;
dxi_149385 = dx_149377;
break L3;
}

L7: do {
L8: while (true) {
if (!(dxi_149385 < (dx_149377 + w_149379))) break L8;
L9: do {
if ((sxi_149383 < 0)) Tmp12 = true; else {Tmp12 = ((screenWidth_147083[0] - 1) < sxi_149383); }if (Tmp12) Tmp11 = true; else {Tmp11 = (dxi_149385 < clipMinX_147136[0]); }if (Tmp11) Tmp10 = true; else {Tmp10 = (nimMin((screenWidth_147083[0] - 1), clipMaxX_147139[0]) < dxi_149385); }if (Tmp10) {
dxi_149385 += 1;
sxi_149383 += 1;
break L9;
}

var srcCol_149423 = swCanvas_147081[0][((syi_149384 * sPitch_149381) + sxi_149383)];
swCanvas_147081[0][((dyi_149386 * dPitch_149382) + dxi_149385)] = srcCol_149423;
sxi_149383 += 1;
dxi_149385 += 1;
} while(false);
}
} while(false);
syi_149384 += 1;
dyi_149386 += 1;
sxi_149383 = sx_149375;
dxi_149385 = dx_149377;
} while(false);
}
} while(false);
}
function glitch_155149(x_155151, y_155152, w_155153, h_155154, i_155155) {

L1: do {
var j_155165 = 0;
var i_155208 = 0;
L2: do {
L3: while (true) {
if (!(i_155208 < i_155155)) break L3;
j_155165 = i_155208;
var fxw_155175 = rnd_155167((w_155153 - 1));
var fxh_155176 = 2;
var sx_155183 = (x_155151 + rnd_155167((w_155153 - 1)));
var sy_155190 = (y_155152 + rnd_155167((h_155154 - 1)));
var dx_155197 = (x_155151 + rnd_155167((w_155153 - 1)));
var dy_155204 = (y_155152 + rnd_155167((h_155154 - 1)));
copy_149373(sx_155183, sy_155190, dx_155197, dy_155204, fxw_155175, fxh_155176);
i_155208 += 1;
}
} while(false);
} while(false);
}
function menuDraw_161060() {

var Tmp1;
var Tmp5;
var Tmp6;
var Tmp7;
var Tmp11;
var Tmp12;
var Tmp13;
var Tmp14;
var Tmp15;
function colonanonymous__171516(a_171518) {

var result_171519 = false;
result_171519 = (0.0 < a_171518.ttl);
return result_171519;
}
var Tmp21;
var Tmp22;
var Tmp23;
var Tmp24;
var Tmp25;
var Tmp26;
var Tmp27;
BeforeRet: do {
cls_147538();
if (confirmQuit_170459[0]) {
setColor_147374(3);
printShadowC_154510(makeNimstrLit("QUIT?"), 64, 60, 1);
printShadowC_154510(makeNimstrLit("[ESC] YES [Z] NO"), 64, 70, 1);
break BeforeRet;
}

if ((0.0 < warpTimer_168171[0])) {
setColor_147374(2);
rectfill_147563(0, 0, 128, 128);
}

if ((5.0000000000000000e-01 < shake_162059[0])) Tmp1 = true; else {Tmp1 = (0.0 < warpTimer_168171[0]); }if (Tmp1) {
minuseq__59185(shake_162059, 0, 5.0000000000000000e-01);
setCamera_147803((rnd_155167(2) - 1), (rnd_155167(2) - 1));
}
else {
setCamera_147803(0, 0);
}

L2: do {
var star_171325 = {pos: {Field0: 0.0, Field1: 0.0}, brightness: 0.0};
var i_171694 = 0;
var L_171696 = (stars_162057[0] != null ? stars_162057[0].length : 0);
L3: do {
L4: while (true) {
if (!(i_171694 < L_171696)) break L4;
star_171325 = stars_162057[0][i_171694];
if ((star_171325.brightness < 1.0000000000000000e+00)) {
Tmp5 = 1;
}
else {
Tmp5 = 2;
}

setColor_147374(Tmp5);
pset_147380((star_171325.pos.Field0|0), (star_171325.pos.Field1|0));
i_171694 += 1;
}
} while(false);
} while(false);
switch (quadrant_168163[0]) {
case 0: Tmp6 = 16;

break;
case 1: Tmp6 = 12;

break;
case 2: Tmp6 = 20;

break;
case 3: Tmp6 = 24;

break;
default: 
Tmp6 = 0;
break;
}
var sunsize_171326 = Tmp6;
switch (quadrant_168163[0]) {
case 0: Tmp7 = 8;

break;
case 1: Tmp7 = 7;

break;
case 2: Tmp7 = 14;

break;
case 3: Tmp7 = 3;

break;
default: 
Tmp7 = 0;
break;
}
setColor_147374(Tmp7);
circfill_147597(64, 64, sunsize_171326);
setColor_147374(2);
circfill_147597(64, 64, (((sunsize_171326 * 7.5000000000000000e-01)|0) + ((Math.sin((frame_147171[0] / 1.0000000000000000e+02)) * 3.0000000000000000e+00)|0)));
L8: do {
var planet_171339 = null;
var i_171714 = 0;
var L_171716 = (planets_168166[0] != null ? planets_168166[0].length : 0);
L9: do {
L10: while (true) {
if (!(i_171714 < L_171716)) break L10;
planet_171339 = planets_168166[0][i_171714];
if ((planet_171339.level == -1)) {
spr_149239(232, ((planet_171339.pos.Field0|0) - 8), ((planet_171339.pos.Field1|0) - 8), 2, 2, false, false);
}
else {
setColor_147374(0);
circfill_147597((planet_171339.pos.Field0|0), (planet_171339.pos.Field1|0), (planet_171339.size + 1));
if ((planet_171339.level <= (unlockedLevel_162040[0]|0))) {
Tmp11 = planet_171339.color;
}
else {
Tmp11 = 12;
}

setColor_147374(Tmp11);
circfill_147597((planet_171339.pos.Field0|0), (planet_171339.pos.Field1|0), planet_171339.size);
}

if ((planet_171339.level == nextLevelId_162036[0])) {
setColor_147374(3);
circ_147662((planet_171339.pos.Field0|0), (planet_171339.pos.Field1|0), ((planet_171339.size + toPint_150050(1.0000000000000000e+00)) + toPint_150050(((mod_143305(frame_147171[0], 1.0000000000000000e+02) / 1.0000000000000000e+02) * 1.0000000000000000e+01))));
}

i_171714 += 1;
}
} while(false);
} while(false);
if (!!((closestPlanet_168169[0] == null))) Tmp12 = false; else {Tmp12 = (length_170575(minus__162099(closestPlanet_168169[0].pos, menuShip_168161[0].pos)) < 1.0000000000000000e+01); }if (Tmp12) {
var planet_171385 = nimCopy(null, closestPlanet_168169[0], NTI168155);
setColor_147374(14);
circ_147662((planet_171385.pos.Field0|0), (planet_171385.pos.Field1|0), ((planet_171385.size + 5) - toPint_150050(((mod_143305(frame_147171[0], 3.0000000000000000e+01) / 3.0000000000000000e+01) * 5.0000000000000000e+00))));
}

if ((((quadrant_168163[0] + 1) * 8) <= nextLevelId_162036[0])) {
setColor_147374(3);
circ_147662(160, 64, toPint_150050(((mod_143305(frame_147171[0], 1.0000000000000000e+02) / 1.0000000000000000e+02) * 6.4000000000000000e+01)));
}
else {
if ((nextLevelId_162036[0] < (quadrant_168163[0] * 8))) {
setColor_147374(3);
circ_147662(-32, 64, toPint_150050(((mod_143305(frame_147171[0], 1.0000000000000000e+02) / 1.0000000000000000e+02) * 6.4000000000000000e+01)));
}
}
palt_147342(5, true);
palt_147342(0, false);
var boost_171413 = (warpUnlocked_162078[0] && menuShip_168161[0].warping);
if (boost_171413) {
Tmp13 = (5 + rnd_155167(3));
}
else {
Tmp13 = (2 + rnd_155167(2));
}

var engineSize_171426 = Tmp13;
if ((menuShip_168161[0].angle == 3)) {
setColor_147374(14);
circfill_147597(((menuShip_168161[0].pos.Field0|0) - rnd_155167(2)), ((menuShip_168161[0].pos.Field1|0) - 3), engineSize_171426);
setColor_147374(2);
circfill_147597(((menuShip_168161[0].pos.Field0|0) - rnd_155167(2)), ((menuShip_168161[0].pos.Field1|0) - 3), Math.floor(engineSize_171426 / 2));
}
else {
if ((menuShip_168161[0].angle == 0)) {
setColor_147374(14);
circfill_147597(((menuShip_168161[0].pos.Field0|0) + 4), (menuShip_168161[0].pos.Field1|0), engineSize_171426);
setColor_147374(2);
circfill_147597(((menuShip_168161[0].pos.Field0|0) + 4), (menuShip_168161[0].pos.Field1|0), Math.floor(engineSize_171426 / 2));
}
else {
if ((menuShip_168161[0].angle == 2)) {
setColor_147374(14);
circfill_147597(((menuShip_168161[0].pos.Field0|0) - 4), (menuShip_168161[0].pos.Field1|0), engineSize_171426);
setColor_147374(2);
circfill_147597(((menuShip_168161[0].pos.Field0|0) - 4), (menuShip_168161[0].pos.Field1|0), Math.floor(engineSize_171426 / 2));
}
}}
if ((Math.floor(frame_147171[0] % 4) < 2)) {
pal_147319(14, 15);
}

switch (menuShip_168161[0].angle) {
case 0: Tmp14 = 215;

break;
case 1: Tmp14 = 212;

break;
case 2: Tmp14 = 213;

break;
case 3: Tmp14 = 214;

break;
}
spr_149239(Tmp14, ((menuShip_168161[0].pos.Field0|0) - 4), ((menuShip_168161[0].pos.Field1|0) - 4), 1, 1, false, false);
pal_147323();
if ((menuShip_168161[0].angle == 1)) {
setColor_147374(14);
circfill_147597(((menuShip_168161[0].pos.Field0|0) - rnd_155167(2)), ((menuShip_168161[0].pos.Field1|0) + 4), engineSize_171426);
setColor_147374(2);
circfill_147597(((menuShip_168161[0].pos.Field0|0) - rnd_155167(2)), ((menuShip_168161[0].pos.Field1|0) + 4), Math.floor(engineSize_171426 / 2));
}

if ((0 < (messages_162081[0] != null ? messages_162081[0].length : 0))) {
if (!(Math.floor(frame_147171[0] % 4) == 0)) Tmp15 = false; else {Tmp15 = (messages_162081[0][0].step < (messages_162081[0][0].text != null ? messages_162081[0][0].text.length-1 : 0)); }if (Tmp15) {
messages_162081[0][0].step += 1;
if (!(nsuIsSpaceAsciiChar(messages_162081[0][0].text[messages_162081[0][0].step]))) {
sfx_149586(toInt_161018(13), -1);
}
else {
messages_162081[0][0].step += 1;
}

}

if (((messages_162081[0][0].text != null ? (messages_162081[0][0].text.length-2) : -1) <= messages_162081[0][0].step)) {
minuseq__59185(messages_162081[0][0], "ttl", timeStep_147128[0]);
}

setColor_147374(8);
var text_171504 = X5BX5D__21042(messages_162081[0][0].text, dotdot__48449(0, messages_162081[0][0].step));
var yv_171505 = 2;
L16: do {
var line_171506 = null;
var first_171744 = 0;
var last_171746 = 0;
L17: do {
L18: while (true) {
if (!true) break L18;
L19: do {
L20: while (true) {
if (!!((ConstSet6[text_171504[last_171746]] != undefined))) break L20;
last_171746 += 1;
}
} while(false);
line_171506 = (text_171504.slice(first_171744, ((last_171746 - 1))+1).concat(0));
printShadow_154524(line_171506, 2, yv_171505, 1);
yv_171505 += 10;
if ((text_171504[last_171746] == 10)) {
last_171746 += 1;
}
else {
if ((text_171504[last_171746] == 13)) {
last_171746 += 1;
if ((text_171504[last_171746] == 10)) {
last_171746 += 1;
}

}
else {
break L17;
}
}
first_171744 = last_171746;
}
} while(false);
} while(false);
}

keepIf_171524(messages_162081, 0, colonanonymous__171516);
if (((messages_162081[0] != null ? messages_162081[0].length : 0) == 0)) {
if (!(0.0 < quadrantTimer_168173[0])) Tmp21 = false; else {Tmp21 = ((messages_162081[0] != null ? messages_162081[0].length : 0) == 0); }if (Tmp21) {
setColor_147374(2);
minuseq__59185(quadrantTimer_168173, 0, timeStep_147128[0]);
switch (quadrant_168163[0]) {
case 0: printShadowC_154510(makeNimstrLit("alpha quadrant"), 64, 2, 1);

break;
case 1: printShadowC_154510(makeNimstrLit("beta quadrant"), 64, 2, 1);

break;
case 2: printShadowC_154510(makeNimstrLit("delta quadrant"), 64, 2, 1);

break;
case 3: printShadowC_154510(makeNimstrLit("gamma quadrant"), 64, 2, 1);

break;
default: 
break;
}
}

if (!warpUnlocked_162078[0]) Tmp22 = false; else {Tmp22 = (5.0000000000000000e-01 < Math.abs(menuShip_168161[0].vel.Field0)); }if (Tmp22) {
if ((Math.floor(frame_147171[0] % 30) < 15)) {
Tmp23 = 2;
}
else {
Tmp23 = 14;
}

setColor_147374(Tmp23);
printShadowC_154510(makeNimstrLit("hold <- [Z] -> to WARP"), 64, 121, 1);
}

if (!!((closestPlanet_168169[0] == null))) Tmp24 = false; else {Tmp24 = (length_170575(minus__162099(closestPlanet_168169[0].pos, menuShip_168161[0].pos)) < 1.0000000000000000e+01); }if (Tmp24) {
if ((closestPlanet_168169[0].level == -1)) {
setColor_147374(2);
printShadowC_154510(makeNimstrLit("StarBase LD38"), 64, 90, 1);
if ((length_170575(menuShip_168161[0].vel) < 2.5000000000000000e-01)) {
setColor_147374(14);
printShadowC_154510(makeNimstrLit("press [X] to report in"), 64, 100, 1);
}

}
else {
if ((closestPlanet_168169[0].level == nextLevelId_162036[0])) {
Tmp25 = 3;
}
else {
Tmp25 = 2;
}

setColor_147374(Tmp25);
if ((0 < levelsCompleted_162044[0][closestPlanet_168169[0].level])) {
printShadowC_154510((makeNimstrLit("replay episode ").slice(0,-1)).concat(cstrToNimstr(((closestPlanet_168169[0].level + 1))+"")), 64, 90, 1);
}
else {
printShadowC_154510((makeNimstrLit("episode ").slice(0,-1)).concat(cstrToNimstr(((closestPlanet_168169[0].level + 1))+"")), 64, 90, 1);
}

if ((length_170575(menuShip_168161[0].vel) < 2.5000000000000000e-01)) {
setColor_147374(14);
printShadowC_154510(makeNimstrLit("press [X] to land"), 64, 100, 1);
}

}

}

}

if (hasMouse_147777()) {
var colontmp__171826 = {Field0: 0, Field1: 0};
var mx_171670 = 0;
var my_171671 = 0;
nimCopy(colontmp__171826, mouse_147756(), NTI147758);
mx_171670 = colontmp__171826["Field0"];
my_171671 = colontmp__171826["Field1"];
if (mousebtn_147761(0)) {
Tmp26 = 1;
}
else {
Tmp26 = 0;
}

spr_149239(93, mx_171670, (my_171671 + Tmp26), 1, 1, false, false);
}

if ((nimMax(0, Math.floor(nextLevelId_162036[0] / 8)) < quadrant_168163[0])) Tmp27 = true; else {Tmp27 = (0.0 < warpTimer_168171[0]); }if (Tmp27) {
L28: do {
var i_171688 = 0;
var colontmp__171748 = 0;
colontmp__171748 = rnd_155167(40);
var res_171751 = 0;
L29: do {
L30: while (true) {
if (!(res_171751 <= colontmp__171748)) break L30;
i_171688 = res_171751;
glitch_155149(0, 0, screenWidth_147083[0], screenHeight_147084[0], 1);
res_171751 += 1;
}
} while(false);
} while(false);
}

} while (false); 
}
function update_166932(self_166935, dt_166936) {

var Tmp1;
var Tmp2;
var Tmp3;
var Tmp4;
var Tmp8;
function colonanonymous__167336(obj_167338) {

var result_167339 = false;
BeforeRet: do {
result_167339 = !(obj_167338.killed);
break BeforeRet;
} while (false); 
return result_167339;
}
var Tmp12;
var Tmp13;
var Tmp14;
var Tmp15;
var Tmp16;
function colonanonymous__167553(a_167555) {

var result_167556 = false;
result_167556 = (0.0 < a_167555.ttl);
return result_167556;
}
BeforeRet: do {
if (confirmAbort_162076[0]) {
if (btnp_147747(4)) {
confirmAbort_162076[0] = false;
break BeforeRet;
}
else {
if (btnp_147747(7)) {
nimCopy(currentLevel_162046[0], loadLevel_163011(levelId_162034[0]), NTI162018);
break BeforeRet;
}
else {
if (btnp_147747(6)) {
confirmAbort_162076[0] = false;
self_166935.aborted = true;
self_166935.timeout = 5.0000000000000000e-01;
sfx_149586(toInt_161018(14), -1);
break BeforeRet;
}
}}
break BeforeRet;
}

if (self_166935.success) Tmp3 = true; else {Tmp3 = self_166935.failed; }if (Tmp3) Tmp2 = true; else {Tmp2 = self_166935.aborted; }if (!!(Tmp2)) Tmp1 = false; else {Tmp1 = (self_166935.ship.altitude == 0.0); }if (Tmp1) {
if (btnp_147747(0)) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(-1, 0)); } else { moveBuffer_162084[0] = [vec2i_153037(-1, 0)]; };
}

if (btnp_147747(1)) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(1, 0)); } else { moveBuffer_162084[0] = [vec2i_153037(1, 0)]; };
}

if (btnp_147747(2)) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(0, -1)); } else { moveBuffer_162084[0] = [vec2i_153037(0, -1)]; };
}

if (btnp_147747(3)) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(0, 1)); } else { moveBuffer_162084[0] = [vec2i_153037(0, 1)]; };
}

if (btnp_147747(7)) {
confirmAbort_162076[0] = true;
break BeforeRet;
}

if ((!(scanning_162063[0]) && btnp_147747(4))) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(0, 0)); } else { moveBuffer_162084[0] = [vec2i_153037(0, 0)]; };
}

if ((!(scanning_162063[0]) && mousebtnp_147766(0))) {
dragging_166930[0] = true;
dragTime_166931[0] = 0;
if ((cursorObject_162051[0] == null)) {
var colontmp__171823 = {Field0: 0, Field1: 0};
var mx_166998 = 0;
var my_166999 = 0;
nimCopy(colontmp__171823, mouse_147756(), NTI147758);
mx_166998 = colontmp__171823["Field0"];
my_166999 = colontmp__171823["Field1"];
cursor_162049[0].Field0 = Math.floor((mx_166998 - self_166935.offset.Field0) / 16);
cursor_162049[0].Field1 = Math.floor((my_166999 - self_166935.offset.Field1) / 16);
cursor_162049[0].Field0 = clamp_167001(cursor_162049[0].Field0, 0, (self_166935.dimensions.Field0 - 1));
cursor_162049[0].Field1 = clamp_167001(cursor_162049[0].Field1, 0, (self_166935.dimensions.Field1 - 1));
nimCopy(lastCursor_162048[0], cursor_162049[0], NTI153025);
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(0, 0)); } else { moveBuffer_162084[0] = [vec2i_153037(0, 0)]; };
}

}
else {
if ((dragging_166930[0] && !(mousebtn_147761(0)))) {
dragging_166930[0] = false;
dragTime_166931[0] = 0;
if (!((cursorObject_162051[0] == null))) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(0, 0)); } else { moveBuffer_162084[0] = [vec2i_153037(0, 0)]; };
}

}
else {
if (dragging_166930[0]) {
if ((Math.floor(dragTime_166931[0] % 10) == 0)) {
var colontmp__171824 = {Field0: 0, Field1: 0};
var mx_167053 = 0;
var my_167054 = 0;
nimCopy(colontmp__171824, mouse_147756(), NTI147758);
mx_167053 = colontmp__171824["Field0"];
my_167054 = colontmp__171824["Field1"];
var mxs_167055 = (mx_167053 - self_166935.offset.Field0);
var mys_167056 = (my_167054 - self_166935.offset.Field1);
var cxs_167057 = ((cursor_162049[0].Field0 * 16) + 8);
var cys_167058 = ((cursor_162049[0].Field1 * 16) + 8);
var dx_167059 = (mxs_167055 - cxs_167057);
var dy_167060 = (mys_167056 - cys_167058);
if ((dx_167059 < -8)) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(-1, 0)); } else { moveBuffer_162084[0] = [vec2i_153037(-1, 0)]; };
}
else {
if ((8 < dx_167059)) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(1, 0)); } else { moveBuffer_162084[0] = [vec2i_153037(1, 0)]; };
}
}
if ((dy_167060 < -8)) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(0, -1)); } else { moveBuffer_162084[0] = [vec2i_153037(0, -1)]; };
}
else {
if ((8 < dy_167060)) {
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(0, 1)); } else { moveBuffer_162084[0] = [vec2i_153037(0, 1)]; };
}
}
}

dragTime_166931[0] += 1;
}
}}
if (mousebtnp_147766(2)) {
scanning_162063[0] = !(scanning_162063[0]);
}

if (((scanning_162063[0] && mousebtnp_147766(0)) || mousebtnp_147766(2))) {
var colontmp__171825 = {Field0: 0, Field1: 0};
var mx_167112 = 0;
var my_167113 = 0;
nimCopy(colontmp__171825, mouse_147756(), NTI147758);
mx_167112 = colontmp__171825["Field0"];
my_167113 = colontmp__171825["Field1"];
cursor_162049[0].Field0 = Math.floor((mx_167112 - toPint_150050(camera_162086[0].Field0)) / 16);
cursor_162049[0].Field1 = Math.floor((my_167113 - toPint_150050(camera_162086[0].Field1)) / 16);
cursor_162049[0].Field0 = clamp_167001(cursor_162049[0].Field0, 0, (self_166935.dimensions.Field0 - 1));
cursor_162049[0].Field1 = clamp_167001(cursor_162049[0].Field1, 0, (self_166935.dimensions.Field1 - 1));
}

if (!eqeq__163605(cursor_162049[0], lastCursor_162048[0])) Tmp4 = false; else {Tmp4 = (0 < (moveBuffer_162084[0] != null ? moveBuffer_162084[0].length : 0)); }if (Tmp4) {
var move_167177 = pop_167150(moveBuffer_162084, 0);
if (((move_167177.Field0 == 0) && (move_167177.Field1 == 0))) {
if ((cursorObject_162051[0] == null)) {
var obj_167189 = objectAtPos_163499(cursor_162049[0]);
cursorObject_162051[0] = obj_167189;
if (!((cursorObject_162051[0] == null))) {
sfx_149586(toInt_161018(2), 2);
if (isObj(cursorObject_162051[0].m_type, NTI161613)) {
nimCopy(cursorObject_162051[0].originalPos, obj_167189.pos, NTI153025);
}

}

}
else {
drop_162444(self_166935);
}

}
else {
if (!((cursorObject_162051[0] == null))) {
move_165307(cursorObject_162051[0], plus__162166(cursor_162049[0], move_167177));
nimCopy(cursor_162049[0], cursorObject_162051[0].pos, NTI153025);
alpha_162050[0] = 0.0;
}
else {
sfx_149586(toInt_161018(13), 2);
pluseq__167231(cursor_162049[0], move_167177);
cursor_162049[0].Field0 = clamp_167001(cursor_162049[0].Field0, 0, (self_166935.dimensions.Field0 - 1));
cursor_162049[0].Field1 = clamp_167001(cursor_162049[0].Field1, 0, (self_166935.dimensions.Field1 - 1));
alpha_162050[0] = 0.0;
}
}
}

if (!(eqeq__163605(cursor_162049[0], lastCursor_162048[0]))) {
pluseq__51495(alpha_162050, 0, (dt_166936 * 8.0000000000000000e+00));
if ((1.0000000000000000e+00 <= alpha_162050[0])) {
nimCopy(lastCursor_162048[0], cursor_162049[0], NTI153025);
}

}

if ((btnp_147747(6) && (cursorObject_162051[0] == null))) {
scanning_162063[0] = !(scanning_162063[0]);
}

}

var hasTribbles_167309 = false;
L5: do {
var i_167326 = 0;
var colontmp__167577 = 0;
colontmp__167577 = (objects_162054[0] != null ? objects_162054[0].length : 0);
var i_167580 = 0;
L6: do {
L7: while (true) {
if (!(i_167580 < colontmp__167577)) break L7;
i_167326 = i_167580;
if (!isObj(objects_162054[0][i_167326].m_type, NTI162924)) Tmp8 = false; else {Tmp8 = (objects_162054[0][i_167326].kind == 8); }if (Tmp8) {
hasTribbles_167309 = true;
}

update_161073(objects_162054[0][i_167326], dt_166936);
i_167580 += 1;
}
} while(false);
} while(false);
keepIf_167344(objects_162054, 0, colonanonymous__167336);
if (hasTribbles_167309) {
var stillHasTribbles_167409 = false;
L9: do {
var i_167426 = 0;
var colontmp__167584 = 0;
colontmp__167584 = (objects_162054[0] != null ? objects_162054[0].length : 0);
var i_167587 = 0;
L10: do {
L11: while (true) {
if (!(i_167587 < colontmp__167584)) break L11;
i_167426 = i_167587;
if (isObj(objects_162054[0][i_167426].m_type, NTI162924)) {
if ((objects_162054[0][i_167426].kind == 8)) {
stillHasTribbles_167409 = true;
break L9;
}

if (!(objects_162054[0][i_167426].kind == 5)) Tmp12 = false; else {Tmp12 = objects_162054[0][i_167426].fed; }if (Tmp12) {
stillHasTribbles_167409 = true;
}

}

i_167587 += 1;
}
} while(false);
} while(false);
if (!(stillHasTribbles_167409)) {
currentLevel_162046[0].failed = true;
}

}

if (!(self_166935.tension <= 0.0)) Tmp13 = false; else {Tmp13 = !(self_166935.failed); }if (Tmp13) {
if (!(self_166935.success)) {
drop_162444(self_166935);
self_166935.success = true;
sfx_149586(toInt_161018(7), -1);
}

minuseq__59185(self_166935, "timeout", dt_166936);
if (!(self_166935.timeout < 0.0)) Tmp14 = false; else {Tmp14 = (1.2000000000000000e+02 < self_166935.ship.altitude); }if (Tmp14) {
levelsCompleted_162044[0][levelId_162034[0]] = self_166935.moves;
updateConfigValue_149639(makeNimstrLit("Levels"), cstrToNimstr((levelId_162034[0])+""), cstrToNimstr((self_166935.moves)+""));
saveConfig_149651();
previousLevelId_162038[0] = levelId_162034[0];
run_149916(menuInit_161055, menuUpdate_161057, menuDraw_161060);
break BeforeRet;
}

}

if (self_166935.aborted) Tmp15 = true; else {Tmp15 = self_166935.failed; }if (Tmp15) {
minuseq__59185(self_166935, "timeout", dt_166936);
if (!(self_166935.timeout < 0.0)) Tmp16 = false; else {Tmp16 = (1.2000000000000000e+02 < self_166935.ship.altitude); }if (Tmp16) {
previousLevelId_162038[0] = levelId_162034[0];
run_149916(menuInit_161055, menuUpdate_161057, menuDraw_161060);
break BeforeRet;
}

}

L17: do {
var p_167474 = null;
L18: do {
var i_167593 = null;
var i_167595 = 0;
var L_167597 = (particles_162074[0].items != null ? particles_162074[0].items.length : 0);
L19: do {
L20: while (true) {
if (!(i_167595 < L_167597)) break L20;
i_167593 = particles_162074[0].items[i_167595];
p_167474 = i_167593;
minuseq__59185(p_167474, "ttl", dt_166936);
pluseq__167489(p_167474.pos, p_167474.vel);
stareq__167523(p_167474.vel, 9.7999999999999998e-01);
i_167595 += 1;
}
} while(false);
} while(false);
} while(false);
keepIf_163236(particles_162074[0], colonanonymous__167553);
} while (false); 
}
function gameUpdate_167730(dt_167732) {

pluseq__51495(time_162061, 0, dt_167732);
L1: do {
var star_167755 = null;
var i_167782 = 0;
var L_167784 = (stars_162057[0] != null ? stars_162057[0].length : 0);
L2: do {
L3: while (true) {
if (!(i_167782 < L_167784)) break L3;
star_167755 = stars_162057[0][i_167782];
pluseq__51495(star_167755.pos, "Field0", (Math.cos((frame_147171[0] / 1.0000000000000000e+02)) * dt_167732));
pluseq__51495(star_167755.pos, "Field1", (Math.sin((frame_147171[0] / 1.1000000000000000e+02)) * dt_167732));
i_167782 += 1;
}
} while(false);
} while(false);
update_166932(currentLevel_162046[0], dt_167732);
}
function setCamera_147807() {

cameraX_147125[0] = 0;
cameraY_147126[0] = 0;
}
function vec2i_153042(v_153044) {

var result_153045 = {Field0: 0, Field1: 0};
result_153045.Field0 = (v_153044.Field0|0);
result_153045.Field1 = (v_153044.Field1|0);
return result_153045;
}
function easeOutCubic_162111(t_162116, b_162118, c_162120) {

var result_162121 = {Field0: 0.0, Field1: 0.0};
BeforeRet: do {
var t_162122 = (t_162116 - 1.0000000000000000e+00);
nimCopy(result_162121, plus__162140(star__162126(c_162120, (((t_162122 * t_162122) * t_162122) + 1.0000000000000000e+00)), b_162118), NTI153017);
break BeforeRet;
} while (false); 
return result_162121;
}
function getViewPos_162088(self_162090) {

var Tmp1;
var result_162091 = {Field0: 0, Field1: 0};
BeforeRet: do {
var currentPos_162092 = vec2f_153032((self_162090.pos.Field0 * 16), (self_162090.pos.Field1 * 16));
var lastPos_162093 = vec2f_153032((self_162090.lastPos.Field0 * 16), (self_162090.lastPos.Field1 * 16));
if ((self_162090 == cursorObject_162051[0])) {
Tmp1 = vec2i_153037(0, -4);
}
else {
Tmp1 = vec2i_153037(0, 0);
}

nimCopy(result_162091, plus__162166(vec2i_153042(easeOutCubic_162111(self_162090.alpha, lastPos_162093, minus__162099(currentPos_162092, lastPos_162093))), Tmp1), NTI153025);
break BeforeRet;
} while (false); 
return result_162091;
}
function minus__162484(a_162489) {

var result_162491 = {Field0: 0.0, Field1: 0.0};
result_162491.Field0 = -(a_162489.Field0);
result_162491.Field1 = -(a_162489.Field1);
return result_162491;
}
function plus__162470(a_162475, s_162477) {

var result_162479 = {Field0: 0, Field1: 0};
result_162479.Field0 = (a_162475.Field0 + s_162477);
result_162479.Field1 = (a_162475.Field1 + s_162477);
return result_162479;
}
function lerp_162509(a_162513, b_162515, t_162517) {

var result_162518 = {Field0: 0.0, Field1: 0.0};
BeforeRet: do {
nimCopy(result_162518, plus__162140(a_162513, star__162126(minus__162099(b_162515, a_162513), t_162517)), NTI153017);
break BeforeRet;
} while (false); 
return result_162518;
}
function drawParticles_162192(above_162194) {

palt_147342(5, true);
palt_147342(0, false);
L1: do {
var p_162411 = null;
L2: do {
var i_162439 = null;
var i_162441 = 0;
var L_162443 = (particles_162074[0].items != null ? particles_162074[0].items.length : 0);
L3: do {
L4: while (true) {
if (!(i_162441 < L_162443)) break L4;
i_162439 = particles_162074[0].items[i_162441];
p_162411 = i_162439;
if ((0.0 < p_162411.ttl)) {
if ((above_162194 == p_162411.above)) {
switch (p_162411.kind) {
case 0: if (((p_162411.maxttl * 5.0000000000000000e-01) < p_162411.ttl)) {
spr_149239(76, ((p_162411.pos.Field0|0) - 4), ((p_162411.pos.Field1|0) - 4), 1, 1, false, false);
}
else {
spr_149239(92, ((p_162411.pos.Field0|0) - 4), ((p_162411.pos.Field1|0) - 4), 1, 1, false, false);
}


break;
case 1: spr_149239(77, ((p_162411.pos.Field0|0) - 4), ((p_162411.pos.Field1|0) - 4), 1, 1, false, false);

break;
case 2: if (((p_162411.maxttl / 2.0000000000000000e+00) < p_162411.ttl)) {
spr_149239(78, ((p_162411.pos.Field0|0) - 4), ((p_162411.pos.Field1|0) - 4), 1, 1, false, false);
}
else {
spr_149239(79, ((p_162411.pos.Field0|0) - 4), ((p_162411.pos.Field1|0) - 4), 1, 1, false, false);
}


break;
case 3: if (((p_162411.maxttl / 2.0000000000000000e+00) < p_162411.ttl)) {
spr_149239(94, ((p_162411.pos.Field0|0) - 4), ((p_162411.pos.Field1|0) - 4), 1, 1, false, false);
}
else {
spr_149239(95, ((p_162411.pos.Field0|0) - 4), ((p_162411.pos.Field1|0) - 4), 1, 1, false, false);
}


break;
}
}

}

i_162441 += 1;
}
} while(false);
} while(false);
} while(false);
}
function palt_147346() {

var Tmp4;
L1: do {
var i_147357 = 0;
var res_147361 = 0;
L2: do {
L3: while (true) {
if (!(res_147361 <= 15)) break L3;
i_147357 = res_147361;
if ((i_147357 == 0)) {
Tmp4 = true;
}
else {
Tmp4 = false;
}

paletteTransparent_147148[0][i_147357] = Tmp4;
res_147361 += 1;
}
} while(false);
} while(false);
}
function easeOutCubic_162819(t_162824, b_162826, c_162828) {

var result_162829 = 0.0;
BeforeRet: do {
var t_162830 = (t_162824 - 1.0000000000000000e+00);
result_162829 = ((c_162828 * (((t_162830 * t_162830) * t_162830) + 1.0000000000000000e+00)) + b_162826);
break BeforeRet;
} while (false); 
return result_162829;
}
function innerLine_147399(x0_147401, y0_147402, x1_147403, y1_147404) {

var Tmp1;
var Tmp2;
var Tmp3;
var x_147405 = x0_147401;
var y_147406 = y0_147402;
var dx_147407 = Math.abs((x1_147403 - x0_147401));
if ((x0_147401 < x1_147403)) {
Tmp1 = 1;
}
else {
Tmp1 = -1;
}

var sx_147408 = Tmp1;
var dy_147409 = Math.abs((y1_147404 - y0_147402));
if ((y0_147402 < y1_147404)) {
Tmp2 = 1;
}
else {
Tmp2 = -1;
}

var sy_147410 = Tmp2;
if ((dy_147409 < dx_147407)) {
Tmp3 = dx_147407;
}
else {
Tmp3 = -(dy_147409);
}

var err_147411 = /**/[(Tmp3 / 2.0000000000000000e+00)];
var e2_147412 = 0.0;
L4: do {
L5: while (true) {
if (!true) break L5;
pset_147380(x_147405, y_147406);
if (((x_147405 == x1_147403) && (y_147406 == y1_147404))) {
break L4;
}

e2_147412 = err_147411[0];
if ((-(dx_147407) < e2_147412)) {
minuseq__59185(err_147411, 0, dy_147409);
x_147405 += sx_147408;
}

if ((e2_147412 < dy_147409)) {
pluseq__51495(err_147411, 0, dx_147407);
y_147406 += sy_147410;
}

}
} while(false);
}
function line_147464(x0_147466, y0_147467, x1_147468, y1_147469) {

if (((x0_147466 == x1_147468) && (y0_147467 == y1_147469))) {
pset_147380(x0_147466, y0_147467);
}
else {
innerLine_147399(x0_147466, y0_147467, x1_147468, y1_147469);
}

}
function rectCorners_155143(x0_155145, y0_155146, x1_155147, y1_155148) {

pset_147380(x0_155145, y0_155146);
pset_147380((x0_155145 + 1), y0_155146);
pset_147380(x0_155145, (y0_155146 + 1));
pset_147380(x1_155147, y0_155146);
pset_147380((x1_155147 - 1), y0_155146);
pset_147380(x1_155147, (y0_155146 + 1));
pset_147380(x1_155147, y1_155148);
pset_147380((x1_155147 - 1), y1_155148);
pset_147380(x1_155147, (y1_155148 - 1));
pset_147380(x0_155145, y1_155148);
pset_147380((x0_155145 + 1), y1_155148);
pset_147380(x0_155145, (y1_155148 - 1));
}
function draw_162448(self_162450) {

var Tmp1;
var Tmp2;
var Tmp18;
var Tmp19;
var Tmp20;
var altitude_162451 = self_162450.ship.altitude;
var shipCamera_162452 = vec2f_153048(vec2i_153037(((-(getViewPos_162088(self_162450.ship).Field0) + 64) - 8), ((-(getViewPos_162088(self_162450.ship).Field1) + 64) + (altitude_162451|0))));
var planetCamera_162453 = vec2f_153048(vec2i_153037((64 - Math.floor((self_162450.dimensions.Field0 * 16) / 2)), (64 - Math.floor((self_162450.dimensions.Field1 * 16) / 2))));
var scanningCamera_162507 = plus__162140(minus__162484(vec2f_153048(plus__162470(star__162457(cursor_162049[0], 16), 8))), vec2f_153032(6.4000000000000000e+01, 4.0000000000000000e+01));
if (scanning_162063[0]) {
nimCopy(camera_162086[0], lerp_162509(camera_162086[0], lerp_162509(scanningCamera_162507, shipCamera_162452, (self_162450.ship.altitude / 1.2800000000000000e+02)), 2.0000000000000001e-01), NTI153017);
}
else {
nimCopy(camera_162086[0], lerp_162509(camera_162086[0], lerp_162509(planetCamera_162453, shipCamera_162452, (self_162450.ship.altitude / 1.2800000000000000e+02)), 2.0000000000000001e-01), NTI153017);
}

if ((0.0 < shake_162059[0])) {
Tmp1 = (rnd_155167(2) - 1);
}
else {
Tmp1 = 0;
}

if ((0.0 < shake_162059[0])) {
Tmp2 = (rnd_155167(2) - 1);
}
else {
Tmp2 = 0;
}

setCamera_147803((-((camera_162086[0].Field0|0)) + Tmp1), (-((camera_162086[0].Field1|0)) + Tmp2));
if ((0.0 < shake_162059[0])) {
minuseq__59185(shake_162059, 0, 5.0000000000000000e-01);
}

setColor_147374(5);
var center_162612 = Math.floor((self_162450.dimensions.Field0 * 16) / 2);
circfill_147597(center_162612, center_162612, ((Math.floor(self_162450.dimensions.Field0 / 2) * 16) + 10));
L3: do {
var y_162622 = 0;
var colontmp__162876 = 0;
colontmp__162876 = self_162450.dimensions.Field1;
var i_162879 = 1;
L4: do {
L5: while (true) {
if (!(i_162879 < colontmp__162876)) break L5;
y_162622 = i_162879;
L6: do {
var x_162632 = 0;
var colontmp__162871 = 0;
colontmp__162871 = self_162450.dimensions.Field0;
var i_162874 = 1;
L7: do {
L8: while (true) {
if (!(i_162874 < colontmp__162871)) break L8;
x_162632 = i_162874;
circfill_147597((x_162632 * 16), (y_162622 * 16), 23);
i_162874 += 1;
}
} while(false);
} while(false);
i_162879 += 1;
}
} while(false);
} while(false);
setColor_147374(6);
L9: do {
var y_162642 = 0;
var colontmp__162890 = 0;
colontmp__162890 = self_162450.dimensions.Field1;
var res_162893 = 0;
L10: do {
L11: while (true) {
if (!(res_162893 <= colontmp__162890)) break L11;
y_162642 = res_162893;
L12: do {
var x_162652 = 0;
var colontmp__162883 = 0;
colontmp__162883 = self_162450.dimensions.Field0;
var res_162886 = 0;
L13: do {
L14: while (true) {
if (!(res_162886 <= colontmp__162883)) break L14;
x_162652 = res_162886;
pset_147380((x_162652 * 16), (y_162642 * 16));
res_162886 += 1;
}
} while(false);
} while(false);
res_162893 += 1;
}
} while(false);
} while(false);
drawParticles_162192(false);
palt_147342(5, true);
palt_147342(0, false);
L15: do {
var obj_162802 = null;
var i_162900 = 0;
var L_162902 = (objects_162054[0] != null ? objects_162054[0].length : 0);
L16: do {
L17: while (true) {
if (!(i_162900 < L_162902)) break L17;
obj_162802 = objects_162054[0][i_162900];
draw_161066(obj_162802);
i_162900 += 1;
}
} while(false);
} while(false);
palt_147346();
if ((0.0 < self_162450.tension)) {
if ((cursorObject_162051[0] == null)) {
setColor_147374(8);
}
else {
setColor_147374(11);
}

var cx_162814 = (cursor_162049[0].Field0 * 16);
var cy_162815 = (cursor_162049[0].Field1 * 16);
var lastX_162816 = (lastCursor_162048[0].Field0 * 16);
var lastY_162817 = (lastCursor_162048[0].Field1 * 16);
var x_162831 = (easeOutCubic_162819(alpha_162050[0], lastX_162816, (cx_162814 - lastX_162816))|0);
var y_162843 = (easeOutCubic_162819(alpha_162050[0], lastY_162817, (cy_162815 - lastY_162817))|0);
if (scanning_162063[0]) {
if ((Math.floor(frame_147171[0] % 2) < 1)) {
Tmp18 = 2;
}
else {
Tmp18 = 14;
}

setColor_147374(Tmp18);
var y2_162847 = (y_162843 + Math.floor(Math.floor(frame_147171[0] % 32) / 2));
line_147464(x_162831, y2_162847, (x_162831 + 16), y2_162847);
}

if (!(cursorObject_162051[0] == null)) Tmp19 = false; else {Tmp19 = (Math.floor(frame_147171[0] % 60) < 30); }if (Tmp19) {
rectCorners_155143((x_162831 - 1), (y_162843 - 1), (x_162831 + 17), (y_162843 + 17));
}
else {
rectCorners_155143((x_162831 + 1), (y_162843 + 1), (x_162831 + 15), (y_162843 + 15));
}

}

drawParticles_162192(true);
if ((1.0000000000000000e+02 < self_162450.ship.altitude)) {
var viewpos_162861 = getViewPos_162088(self_162450.ship);
setColor_147374(14);
var s_162862 = (self_162450.ship.altitude - 1.0000000000000000e+02);
circfill_147597((viewpos_162861.Field0 + 8), ((viewpos_162861.Field1 - toPint_150050(altitude_162451)) + 16), toPint_150050((s_162862 * s_162862)));
setColor_147374(2);
circfill_147597((viewpos_162861.Field0 + 8), ((viewpos_162861.Field1 - toPint_150050(altitude_162451)) + 16), toPint_150050(((s_162862 * s_162862) * 5.0000000000000000e-01)));
}

setCamera_147807();
if (confirmAbort_162076[0]) {
if ((Math.floor(frame_147171[0] % 30) < 15)) {
Tmp20 = 3;
}
else {
Tmp20 = 2;
}

setColor_147374(Tmp20);
printShadowC_154510(makeNimstrLit("REALLY ABORT MISSION?"), 64, 60, 1);
setColor_147374(2);
printShadowC_154510(makeNimstrLit("[Z] cancel [X] abort"), 64, 80, 1);
printShadowC_154510(makeNimstrLit("[C] restart"), 64, 90, 1);
}

}
function printr_148943(text_148945, x_148946, y_148947, scale_148948) {

var width_148949 = textWidth_148908(text_148945, scale_148948);
print_148298(text_148945, (x_148946 - width_148949), y_148947, scale_148948);
}
function printShadowR_154517(text_154519, x_154520, y_154521, scale_154522) {

var oldColor_154523 = getColor_147377();
setColor_147374(0);
printr_148943(text_154519, (x_154520 - scale_154522), y_154521, scale_154522);
printr_148943(text_154519, (x_154520 + scale_154522), y_154521, scale_154522);
printr_148943(text_154519, x_154520, (y_154521 - scale_154522), scale_154522);
printr_148943(text_154519, x_154520, (y_154521 + scale_154522), scale_154522);
printr_148943(text_154519, (x_154520 + scale_154522), (y_154521 + scale_154522), scale_154522);
printr_148943(text_154519, (x_154520 - scale_154522), (y_154521 - scale_154522), scale_154522);
printr_148943(text_154519, (x_154520 + scale_154522), (y_154521 - scale_154522), scale_154522);
printr_148943(text_154519, (x_154520 - scale_154522), (y_154521 + scale_154522), scale_154522);
setColor_147374(oldColor_154523);
printr_148943(text_154519, x_154520, y_154521, scale_154522);
}
function lerp_165185(a_165189, b_165191, t_165193) {

var result_165194 = 0.0;
BeforeRet: do {
result_165194 = (a_165189 + ((b_165191 - a_165189) * t_165193));
break BeforeRet;
} while (false); 
return result_165194;
}
function invalidFormatString_51538() {

var e_51546 = null;
e_51546 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null};
e_51546.message = nimCopy(null, makeNimstrLit("invalid format string"), NTI138);
e_51546.parent = null;
raiseException(e_51546, "ValueError");
}
function nsuToLowerAsciiChar(c_45785) {

var result_45786 = 0;
if ((ConstSet9[c_45785] != undefined)) {
result_45786 = (c_45785 + 32);
}
else {
result_45786 = c_45785;
}

return result_45786;
}
function nsuCmpIgnoreStyle(a_46067, b_46068) {

var Tmp7;
var result_46069 = 0;
var i_46070 = 0;
var j_46071 = 0;
L1: do {
L2: while (true) {
if (!true) break L2;
L3: do {
L4: while (true) {
if (!(a_46067[i_46070] == 95)) break L4;
i_46070 += 1;
}
} while(false);
L5: do {
L6: while (true) {
if (!(b_46068[j_46071] == 95)) break L6;
j_46071 += 1;
}
} while(false);
var aa_46090 = nsuToLowerAsciiChar(a_46067[i_46070]);
var bb_46091 = nsuToLowerAsciiChar(b_46068[j_46071]);
result_46069 = (aa_46090 - bb_46091);
if (!((result_46069 == 0))) Tmp7 = true; else {Tmp7 = (aa_46090 == 0); }if (Tmp7) {
break L1;
}

i_46070 += 1;
j_46071 += 1;
}
} while(false);
return result_46069;
}
function findNormalized_51521(x_51523, inArray_51525) {

var result_51526 = 0;
BeforeRet: do {
var i_51527 = 0;
L1: do {
L2: while (true) {
if (!(i_51527 < (inArray_51525 != null ? (inArray_51525.length-1) : -1))) break L2;
if ((nsuCmpIgnoreStyle(x_51523, inArray_51525[i_51527]) == 0)) {
result_51526 = i_51527;
break BeforeRet;
}

i_51527 += 2;
}
} while(false);
result_51526 = -1;
break BeforeRet;
} while (false); 
return result_51526;
}
function nsuAddf(s_51559, s_51559_Idx, formatstr_51560, a_51562) {

var Tmp5;
var Tmp8;
var Tmp11;
var i_51565 = 0;
var num_51566 = 0;
L1: do {
L2: while (true) {
if (!(i_51565 < (formatstr_51560 != null ? formatstr_51560.length-1 : 0))) break L2;
if ((formatstr_51560[i_51565] == 36)) {
switch (formatstr_51560[(i_51565 + 1)]) {
case 35: if (((a_51562 != null ? (a_51562.length-1) : -1) < num_51566)) {
invalidFormatString_51538();
}

if (s_51559[s_51559_Idx] != null) { s_51559[s_51559_Idx] = (s_51559[s_51559_Idx].slice(0, -1)).concat(a_51562[num_51566]); } else { s_51559[s_51559_Idx] = a_51562[num_51566];};
i_51565 += 2;
num_51566 += 1;

break;
case 36: if (s_51559[s_51559_Idx] != null) { addChar(s_51559[s_51559_Idx], 36); } else { s_51559[s_51559_Idx] = [36, 0]; };
i_51565 += 2;

break;
case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: case 45: var j_51602 = 0;
i_51565 += 1;
var negative_51612 = (formatstr_51560[i_51565] == 45);
if (negative_51612) {
i_51565 += 1;
}

L3: do {
L4: while (true) {
if (!(ConstSet7[formatstr_51560[i_51565]] != undefined)) break L4;
j_51602 = (((j_51602 * 10) + formatstr_51560[i_51565]) - 48);
i_51565 += 1;
}
} while(false);
if (!(negative_51612)) {
Tmp5 = (j_51602 - 1);
}
else {
Tmp5 = ((a_51562 != null ? a_51562.length : 0) - j_51602);
}

var idx_51660 = Tmp5;
if (((a_51562 != null ? (a_51562.length-1) : -1) < idx_51660)) {
invalidFormatString_51538();
}

if (s_51559[s_51559_Idx] != null) { s_51559[s_51559_Idx] = (s_51559[s_51559_Idx].slice(0, -1)).concat(a_51562[idx_51660]); } else { s_51559[s_51559_Idx] = a_51562[idx_51660];};

break;
case 123: var j_51669 = (i_51565 + 1);
L6: do {
L7: while (true) {
if (!!((ConstSet8[formatstr_51560[j_51669]] != undefined))) break L7;
j_51669 += 1;
}
} while(false);
var x_51689 = findNormalized_51521((formatstr_51560.slice((i_51565 + 2), ((j_51669 - 1))+1).concat(0)), a_51562);
if (!(0 <= x_51689)) Tmp8 = false; else {Tmp8 = (x_51689 < (a_51562 != null ? (a_51562.length-1) : -1)); }if (Tmp8) {
if (s_51559[s_51559_Idx] != null) { s_51559[s_51559_Idx] = (s_51559[s_51559_Idx].slice(0, -1)).concat(a_51562[(x_51689 + 1)]); } else { s_51559[s_51559_Idx] = a_51562[(x_51689 + 1)];};
}
else {
invalidFormatString_51538();
}

i_51565 = (j_51669 + 1);

break;
case 97: case 98: case 99: case 100: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122: case 65: case 66: case 67: case 68: case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76: case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84: case 85: case 86: case 87: case 88: case 89: case 90: case 128: case 129: case 130: case 131: case 132: case 133: case 134: case 135: case 136: case 137: case 138: case 139: case 140: case 141: case 142: case 143: case 144: case 145: case 146: case 147: case 148: case 149: case 150: case 151: case 152: case 153: case 154: case 155: case 156: case 157: case 158: case 159: case 160: case 161: case 162: case 163: case 164: case 165: case 166: case 167: case 168: case 169: case 170: case 171: case 172: case 173: case 174: case 175: case 176: case 177: case 178: case 179: case 180: case 181: case 182: case 183: case 184: case 185: case 186: case 187: case 188: case 189: case 190: case 191: case 192: case 193: case 194: case 195: case 196: case 197: case 198: case 199: case 200: case 201: case 202: case 203: case 204: case 205: case 206: case 207: case 208: case 209: case 210: case 211: case 212: case 213: case 214: case 215: case 216: case 217: case 218: case 219: case 220: case 221: case 222: case 223: case 224: case 225: case 226: case 227: case 228: case 229: case 230: case 231: case 232: case 233: case 234: case 235: case 236: case 237: case 238: case 239: case 240: case 241: case 242: case 243: case 244: case 245: case 246: case 247: case 248: case 249: case 250: case 251: case 252: case 253: case 254: case 255: case 95: var j_51690 = (i_51565 + 1);
L9: do {
L10: while (true) {
if (!(ConstSet10[formatstr_51560[j_51690]] != undefined)) break L10;
j_51690 += 1;
}
} while(false);
var x_51709 = findNormalized_51521((formatstr_51560.slice((i_51565 + 1), ((j_51690 - 1))+1).concat(0)), a_51562);
if (!(0 <= x_51709)) Tmp11 = false; else {Tmp11 = (x_51709 < (a_51562 != null ? (a_51562.length-1) : -1)); }if (Tmp11) {
if (s_51559[s_51559_Idx] != null) { s_51559[s_51559_Idx] = (s_51559[s_51559_Idx].slice(0, -1)).concat(a_51562[(x_51709 + 1)]); } else { s_51559[s_51559_Idx] = a_51562[(x_51709 + 1)];};
}
else {
invalidFormatString_51538();
}

i_51565 = j_51690;

break;
default: 
invalidFormatString_51538();
break;
}
}
else {
if (s_51559[s_51559_Idx] != null) { addChar(s_51559[s_51559_Idx], formatstr_51560[i_51565]); } else { s_51559[s_51559_Idx] = [formatstr_51560[i_51565], 0]; };
i_51565 += 1;
}

}
} while(false);
}
function nsuFormatVarargs(formatstr_51754, a_51756) {

var result_51757 = [null];
result_51757[0] = nimCopy(null, mnewString(0), NTI138);
nsuAddf(result_51757, 0, formatstr_51754, a_51756);
return result_51757[0];
}
function gameDraw_167791() {

var Tmp4;
var Tmp8;
var Tmp9;
var Tmp15;
setCamera_147807();
cls_147538();
L1: do {
var star_168002 = {pos: {Field0: 0.0, Field1: 0.0}, brightness: 0.0};
var i_168115 = 0;
var L_168117 = (stars_162057[0] != null ? stars_162057[0].length : 0);
L2: do {
L3: while (true) {
if (!(i_168115 < L_168117)) break L3;
star_168002 = stars_162057[0][i_168115];
if ((star_168002.brightness <= 1.0000000000000000e+00)) {
Tmp4 = 1;
}
else {
Tmp4 = 2;
}

setColor_147374(Tmp4);
pset_147380((star_168002.pos.Field0|0), (star_168002.pos.Field1|0));
i_168115 += 1;
}
} while(false);
} while(false);
draw_162448(currentLevel_162046[0]);
setCamera_147807();
var happy_168003 = 0;
var sad_168004 = 0;
setColor_147374(3);
L5: do {
var obj_168013 = null;
var i_168122 = 0;
var L_168124 = (objects_162054[0] != null ? objects_162054[0].length : 0);
L6: do {
L7: while (true) {
if (!(i_168122 < L_168124)) break L7;
obj_168013 = objects_162054[0][i_168122];
if (isObj(obj_168013.m_type, NTI162924)) {
var alien_168015 = obj_168013;
if (!(alien_168015.happy)) {
sad_168004 += 1;
}
else {
happy_168003 += 1;
}

}

i_168122 += 1;
}
} while(false);
} while(false);
if (scanning_162063[0]) {
if ((Math.floor(frame_147171[0] % 4) < 2)) {
Tmp8 = 2;
}
else {
Tmp8 = 14;
}

setColor_147374(Tmp8);
printShadowR_154517(makeNimstrLit("scanning"), 126, 2, 1);
}
else {
var targetTension_168036 = (sad_168004 / (happy_168003 + sad_168004));
currentLevel_162046[0].tension = lerp_165185(currentLevel_162046[0].tension, targetTension_168036, 1.0000000000000001e-01);
var tensionPercent_168047 = ((currentLevel_162046[0].tension * 1.0000000000000000e+02)|0);
if ((tensionPercent_168047 <= 0)) {
if ((Math.floor(frame_147171[0] % 10) < 5)) {
Tmp9 = 11;
}
else {
Tmp9 = 10;
}

setColor_147374(Tmp9);
currentLevel_162046[0].tension = 0.0;
}
else {
if ((tensionPercent_168047 <= 50)) {
setColor_147374(8);
}
else {
setColor_147374(3);
}
}
printShadowR_154517(nsuFormatVarargs(makeNimstrLit("tension: $1%"), [cstrToNimstr((tensionPercent_168047)+"")]), 126, (2 - (currentLevel_162046[0].ship.altitude|0)), 1);
}

if (((currentLevel_162046[0].tension <= 0.0) && !(currentLevel_162046[0].failed))) {
setColor_147374(2);
printShadowC_154510(makeNimstrLit("Hostilities Ceased"), 64, (100 + (((currentLevel_162046[0].ship.altitude * currentLevel_162046[0].ship.altitude) * 5.0000000000000001e-03)|0)), 1);
printShadowC_154510(nsuFormatVarargs(makeNimstrLit("Moves: $1"), [cstrToNimstr((currentLevel_162046[0].moves)+"")]), 64, (110 + (((currentLevel_162046[0].ship.altitude * currentLevel_162046[0].ship.altitude) * 5.0000000000000001e-03)|0)), 1);
}
else {
if (currentLevel_162046[0].failed) {
setColor_147374(3);
printShadowC_154510(makeNimstrLit("Mission Failed!"), 64, 100, 1);
printShadowC_154510(makeNimstrLit("Species eradicated!"), 64, 110, 1);
}
}
if (scanning_162063[0]) {
var scanobj_168058 = objectAtPos_163499(cursor_162049[0]);
if (!((scanobj_168058 == null))) {
setColor_147374(14);
printShadow_154524(scanobj_168058.name, 2, 72, 1);
if (isObj(scanobj_168058.m_type, NTI162924)) {
if (scanobj_168058.happy) {
setColor_147374(11);
printShadowR_154517(makeNimstrLit("content"), 126, 72, 1);
}
else {
setColor_147374(3);
printShadowR_154517(makeNimstrLit("discontent"), 126, 72, 1);
}

}
else {
setColor_147374(1);
printShadowR_154517(makeNimstrLit("inanimate"), 126, 72, 1);
}

var y_168079 = 82;
setColor_147374(15);
L10: do {
var line_168080 = null;
var colontmp__168134 = null;
colontmp__168134 = scanobj_168058.description;
var first_168138 = 0;
var last_168140 = 0;
L11: do {
L12: while (true) {
if (!true) break L12;
L13: do {
L14: while (true) {
if (!!((ConstSet11[colontmp__168134[last_168140]] != undefined))) break L14;
last_168140 += 1;
}
} while(false);
line_168080 = (colontmp__168134.slice(first_168138, ((last_168140 - 1))+1).concat(0));
printShadow_154524(line_168080, 2, y_168079, 1);
y_168079 += 9;
if ((colontmp__168134[last_168140] == 10)) {
last_168140 += 1;
}
else {
if ((colontmp__168134[last_168140] == 13)) {
last_168140 += 1;
if ((colontmp__168134[last_168140] == 10)) {
last_168140 += 1;
}

}
else {
break L11;
}
}
first_168138 = last_168140;
}
} while(false);
} while(false);
}

}

setColor_147374(13);
if (scanning_162063[0]) {
printShadowR_154517(makeNimstrLit("[X] end scan"), 124, (120 + (currentLevel_162046[0].ship.altitude|0)), 1);
}
else {
if (!(confirmAbort_162076[0])) {
if ((cursorObject_162051[0] == null)) {
printShadowR_154517(makeNimstrLit("[Z] grab [X] info [C] abort"), 124, (120 + (currentLevel_162046[0].ship.altitude|0)), 1);
}
else {
printShadowR_154517(makeNimstrLit("[Z] drop          [C] abort"), 124, (120 + (currentLevel_162046[0].ship.altitude|0)), 1);
}

}
}
if (hasMouse_147777()) {
var colontmp__171827 = {Field0: 0, Field1: 0};
var mx_168107 = 0;
var my_168108 = 0;
nimCopy(colontmp__171827, mouse_147756(), NTI147758);
mx_168107 = colontmp__171827["Field0"];
my_168108 = colontmp__171827["Field1"];
if (mousebtn_147761(0)) {
Tmp15 = 1;
}
else {
Tmp15 = 0;
}

spr_149239(93, mx_168107, (my_168108 + Tmp15), 1, 1, false, false);
}

}
function menuUpdate_161057(dt_161059) {

var Tmp1;
var Tmp2;
var Tmp3;
var Tmp4;
var Tmp5;
var Tmp12;
var Tmp13;
var Tmp14;
BeforeRet: do {
if (confirmQuit_170459[0]) {
if (btnp_147747(9)) {
shutdown_149941();
break BeforeRet;
}

if (btnp_147747(4)) {
confirmQuit_170459[0] = false;
break BeforeRet;
}

break BeforeRet;
}
else {
if (btnp_147747(9)) {
confirmQuit_170459[0] = true;
break BeforeRet;
}
}
if ((0 < (messages_162081[0] != null ? messages_162081[0].length : 0))) {
if (((btn_147743(4) || btn_147743(6)) || mousebtn_147761(0))) {
if ((messages_162081[0][0].step < (messages_162081[0][0].text != null ? messages_162081[0][0].text.length-1 : 0))) {
messages_162081[0][0].step += 1;
if (!(nsuIsSpaceAsciiChar(messages_162081[0][0].text[messages_162081[0][0].step]))) {
sfx_149586(toInt_161018(13), -1);
}
else {
messages_162081[0][0].step += 1;
}

}

}

if (((btnp_147747(4) || btnp_147747(6)) || mousebtnp_147766(0))) {
if (((messages_162081[0][0].text != null ? messages_162081[0][0].text.length-1 : 0) <= messages_162081[0][0].step)) {
messages_162081[0][0].ttl = 0.0;
sfx_149586(toInt_161018(5), -1);
}

}

break BeforeRet;
}

var boost_170492 = (warpUnlocked_162078[0] && btn_147743(4));
if (boost_170492) {
Tmp1 = 5.0000000000000003e-02;
}
else {
Tmp1 = 1.0000000000000000e-02;
}

var move_170493 = Tmp1;
if (btn_147743(0)) {
menuShip_168161[0].angle = 0;
minuseq__59185(menuShip_168161[0].vel, "Field0", move_170493);
}

if (btn_147743(1)) {
menuShip_168161[0].angle = 2;
pluseq__51495(menuShip_168161[0].vel, "Field0", move_170493);
}

if (btn_147743(2)) {
menuShip_168161[0].angle = 1;
minuseq__59185(menuShip_168161[0].vel, "Field1", move_170493);
}

if (btn_147743(3)) {
menuShip_168161[0].angle = 3;
pluseq__51495(menuShip_168161[0].vel, "Field1", move_170493);
}

if (mousebtn_147761(0)) {
var colontmp__171822 = {Field0: 0, Field1: 0};
var tx_170534 = 0;
var ty_170535 = 0;
nimCopy(colontmp__171822, mouse_147756(), NTI147758);
tx_170534 = colontmp__171822["Field0"];
ty_170535 = colontmp__171822["Field1"];
var mp_170536 = vec2f_153032(tx_170534, ty_170535);
var diff_170552 = minus__162099(mp_170536, menuShip_168161[0].pos);
var dist_170562 = lengthSqr_170555(diff_170552);
var dir_170583 = normalize_170565(diff_170552);
if (!warpUnlocked_162078[0]) Tmp2 = false; else {if (btn_147743(4)) Tmp3 = true; else {Tmp3 = (1.0240000000000000e+03 < dist_170562); }Tmp2 = Tmp3; }boost_170492 = Tmp2;
if (boost_170492) {
Tmp4 = 5.0000000000000003e-02;
}
else {
Tmp4 = 1.0000000000000000e-02;
}

var move_170584 = Tmp4;
pluseq__167489(menuShip_168161[0].vel, star__162126(star__162126(dir_170583, move_170584), clamp_151076((dist_170562 * 5.0000000000000003e-02), 0.0, 1.0000000000000000e+00)));
if ((dir_170583.Field0 < -5.0000000000000000e-01)) {
menuShip_168161[0].angle = 0;
}
else {
if ((5.0000000000000000e-01 < dir_170583.Field0)) {
menuShip_168161[0].angle = 2;
}
else {
if ((dir_170583.Field1 < -5.0000000000000000e-01)) {
menuShip_168161[0].angle = 1;
}
else {
if ((5.0000000000000000e-01 < dir_170583.Field1)) {
menuShip_168161[0].angle = 3;
}
}}}
}

menuShip_168161[0].warping = boost_170492;
pluseq__167489(menuShip_168161[0].pos, menuShip_168161[0].vel);
stareq__167523(menuShip_168161[0].vel, 9.8999999999999999e-01);
if ((1.2800000000000000e+02 < menuShip_168161[0].pos.Field0)) {
minuseq__59185(menuShip_168161[0].pos, "Field0", 1.2800000000000000e+02);
if (!boost_170492) Tmp5 = false; else {Tmp5 = (2.0000000000000000e+00 < menuShip_168161[0].vel.Field0); }if (Tmp5) {
quadrant_168163[0] += 1;
if ((3 < quadrant_168163[0])) {
quadrant_168163[0] = 0;
}

setQuadrant_168176(quadrant_168163[0], true);
}

}

if ((menuShip_168161[0].pos.Field0 < 0.0)) {
pluseq__51495(menuShip_168161[0].pos, "Field0", 1.2800000000000000e+02);
if ((boost_170492 && (menuShip_168161[0].vel.Field0 < -2.0000000000000000e+00))) {
quadrant_168163[0] -= 1;
if ((quadrant_168163[0] < 0)) {
quadrant_168163[0] = 3;
}

setQuadrant_168176(quadrant_168163[0], true);
}

}

if ((Math.floor(nextLevelId_162036[0] / 8) < quadrant_168163[0])) {
pluseq__51495(shake_162059, 0, 5.0000000000000000e-01);
}

menuShip_168161[0].pos.Field1 = mod_143305(menuShip_168161[0].pos.Field1, 1.2800000000000000e+02);
L6: do {
var star_170733 = null;
var i_171262 = 0;
var L_171264 = (stars_162057[0] != null ? stars_162057[0].length : 0);
L7: do {
L8: while (true) {
if (!(i_171262 < L_171264)) break L8;
star_170733 = stars_162057[0][i_171262];
pluseq__51495(star_170733.pos, "Field0", ((Math.cos((frame_147171[0] / 1.0000000000000000e+02)) * dt_161059) + ((-(menuShip_168161[0].vel.Field0) * 1.0000000000000001e-01) * (star_170733.brightness + 1.0000000000000000e+00))));
pluseq__51495(star_170733.pos, "Field1", ((Math.sin((frame_147171[0] / 1.1000000000000000e+02)) * dt_161059) + ((-(menuShip_168161[0].vel.Field1) * 1.0000000000000001e-01) * (star_170733.brightness + 1.0000000000000000e+00))));
star_170733.pos.Field0 = mod_143305(star_170733.pos.Field0, 2.5600000000000000e+02);
star_170733.pos.Field1 = mod_143305(star_170733.pos.Field1, 2.5600000000000000e+02);
i_171262 += 1;
}
} while(false);
} while(false);
var oldClosestPlanet_170770 = closestPlanet_168169[0];
closestPlanet_168169[0] = null;
var nearestDistance_170771 = Infinity;
L9: do {
var planet_171003 = null;
var i_171275 = 0;
var L_171277 = (planets_168166[0] != null ? planets_168166[0].length : 0);
L10: do {
L11: while (true) {
if (!(i_171275 < L_171277)) break L11;
planet_171003 = planets_168166[0][i_171275];
pluseq__51495(planet_171003.pos, "Field0", ((Math.cos((frame_147171[0] / 1.0000000000000000e+02)) * dt_161059) + ((-(menuShip_168161[0].vel.Field0) * 1.0000000000000001e-01) * (planet_171003.z * 1.0000000000000000e+01))));
pluseq__51495(planet_171003.pos, "Field1", ((Math.sin((frame_147171[0] / 1.1000000000000000e+02)) * dt_161059) + ((-(menuShip_168161[0].vel.Field1) * 1.0000000000000001e-01) * (planet_171003.z * 1.0000000000000000e+01))));
planet_171003.pos.Field0 = mod_143305(planet_171003.pos.Field0, 1.2800000000000000e+02);
planet_171003.pos.Field1 = mod_143305(planet_171003.pos.Field1, 1.2800000000000000e+02);
if ((planet_171003.level <= (unlockedLevel_162040[0]|0))) {
var dist_171063 = length_170575(minus__162099(planet_171003.pos, menuShip_168161[0].pos));
if ((dist_171063 < nearestDistance_170771)) {
closestPlanet_168169[0] = planet_171003;
nearestDistance_170771 = dist_171063;
}

}

i_171275 += 1;
}
} while(false);
} while(false);
if (!!((closestPlanet_168169[0] == null))) Tmp13 = false; else {Tmp13 = (length_170575(minus__162099(closestPlanet_168169[0].pos, menuShip_168161[0].pos)) < 1.0000000000000000e+01); }if (!Tmp13) Tmp12 = false; else {Tmp12 = (length_170575(menuShip_168161[0].vel) < 4.0000000000000000e+00); }if (Tmp12) {
if ((btnp_147747(6) || mousebtnp_147766(2))) {
if ((0 <= closestPlanet_168169[0].level)) {
levelId_162034[0] = closestPlanet_168169[0].level;
fadeMusicOut_149606(250);
run_149916(gameInit_167598, gameUpdate_167730, gameDraw_167791);
}
else {
if (!!(warpUnlocked_162078[0])) Tmp14 = false; else {Tmp14 = (8.0000000000000000e+00 <= unlockedLevel_162040[0]); }if (Tmp14) {
warpUnlocked_162078[0] = true;
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Commander, we\'ve fitted your\x0Aship with a warp drive.\x0AYou can now travel to other\x0Aquadrants.\x0AUse [Z] to engage the\x0Awarp drive. Fly fast\x0Atowards the edges of the system\x0Ato warp."), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Commander, we\'ve fitted your\x0Aship with a warp drive.\x0AYou can now travel to other\x0Aquadrants.\x0AUse [Z] to engage the\x0Awarp drive. Fly fast\x0Atowards the edges of the system\x0Ato warp."), step: 0, ttl: 5.0000000000000000e+00}]; };
updateConfigValue_149639(makeNimstrLit("Unlocks"), makeNimstrLit("warp"), makeNimstrLit("true"));
saveConfig_149651();
nextLevelId_162036[0] = 7;
}
else {
var happyPlanets_171118 = 0;
var unhappyPlanets_171119 = 0;
L15: do {
var planet_171128 = {level: 0, pos: {Field0: 0.0, Field1: 0.0}, z: 0.0, size: 0, color: 0};
var i_171282 = 0;
var L_171284 = (planets_168166[0] != null ? planets_168166[0].length : 0);
L16: do {
L17: while (true) {
if (!(i_171282 < L_171284)) break L17;
planet_171128 = planets_168166[0][i_171282];
if ((0 <= planet_171128.level)) {
if ((0 < levelsCompleted_162044[0][planet_171128.level])) {
happyPlanets_171118 += 1;
}
else {
unhappyPlanets_171119 += 1;
}

}

i_171282 += 1;
}
} while(false);
} while(false);
var unrest_171147 = (((unhappyPlanets_171119 / (happyPlanets_171118 + unhappyPlanets_171119)) * 1.0000000000000000e+02)|0);
if ((unrest_171147 == 0)) {
if (messages_162081[0] != null) { messages_162081[0].push({text: makeNimstrLit("Alpha quadrant is secure\x0Athanks to you.\x0AHead to the Beta Quadrant!"), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: makeNimstrLit("Alpha quadrant is secure\x0Athanks to you.\x0AHead to the Beta Quadrant!"), step: 0, ttl: 5.0000000000000000e+00}]; };
}
else {
if (messages_162081[0] != null) { messages_162081[0].push({text: nsuFormatVarargs(makeNimstrLit("Thank you commander!\x0AUnrest in this quadrant\x0Ais now at $1 percent."), [cstrToNimstr((unrest_171147)+"")]), step: 0, ttl: 5.0000000000000000e+00}); } else { messages_162081[0] = [{text: nsuFormatVarargs(makeNimstrLit("Thank you commander!\x0AUnrest in this quadrant\x0Ais now at $1 percent."), [cstrToNimstr((unrest_171147)+"")]), step: 0, ttl: 5.0000000000000000e+00}]; };
}

}

}

}

var diff_171185 = minus__162099(closestPlanet_168169[0].pos, menuShip_168161[0].pos);
var dir_171195 = normalize_170565(diff_171185);
var dist_171204 = length_170575(diff_171185);
pluseq__167489(menuShip_168161[0].vel, star__162126(star__162126(dir_171195, Math.sqrt(dist_171204)), 1.0000000000000000e-03));
}

if ((0.0 < warpTimer_168171[0])) {
minuseq__59185(warpTimer_168171, 0, dt_161059);
}

} while (false); 
}
function introUpdate_171757(dt_171759) {

if ((btnp_147747(8) || btnp_147747(4))) {
if ((frame_147171[0] < 300)) {
frame_147171[0] = 300;
}
else {
run_149916(menuInit_161055, menuUpdate_161057, menuDraw_161060);
}

}

}
function blitStretch_149057(srcRect_149059, dstRect_149060, hflip_149061, vflip_149062) {

var Tmp8;
var Tmp9;
var Tmp10;
var Tmp11;
var Tmp12;
var sPitch_149063 = spritesheet_147144[0].width;
var dPitch_149064 = screenWidth_147083[0];
var dx_149065 = /**/[dstRect_149060.Field0];
var dy_149066 = /**/[dstRect_149060.Field1];
var dw_149067 = dstRect_149060.Field2;
var dh_149068 = dstRect_149060.Field3;
var sx_149069 = /**/[srcRect_149059.Field0];
var sy_149070 = /**/[srcRect_149059.Field1];
var sw_149071 = srcRect_149059.Field2;
var sh_149072 = srcRect_149059.Field3;
if (vflip_149062) {
dy_149066[0] = (dy_149066[0] + (dstRect_149060.Field3 - 1));
sy_149070[0] = (sy_149070[0] + (srcRect_149059.Field3 - 1));
}

L1: do {
var y_149082 = 0;
var colontmp__149212 = 0;
colontmp__149212 = (dstRect_149060.Field3 - 1);
var res_149215 = 0;
L2: do {
L3: while (true) {
if (!(res_149215 <= colontmp__149212)) break L3;
y_149082 = res_149215;
if (hflip_149061) {
sx_149069[0] = ((srcRect_149059.Field0 + srcRect_149059.Field2) - 1);
dx_149065[0] = ((dstRect_149060.Field0 + dstRect_149060.Field2) - 1);
}
else {
sx_149069[0] = srcRect_149059.Field0;
dx_149065[0] = dstRect_149060.Field0;
}

L4: do {
var x_149092 = 0;
var colontmp__149205 = 0;
colontmp__149205 = (dstRect_149060.Field2 - 1);
var res_149208 = 0;
L5: do {
L6: while (true) {
if (!(res_149208 <= colontmp__149205)) break L6;
x_149092 = res_149208;
L7: do {
if (((sx_149069[0] < 0.0) || (sy_149070[0] < 0.0))) Tmp9 = true; else {Tmp9 = ((spritesheet_147144[0].width - 1) < (sx_149069[0]|0)); }if (Tmp9) Tmp8 = true; else {Tmp8 = ((spritesheet_147144[0].height - 1) < (sy_149070[0]|0)); }if (Tmp8) {
break L7;
}

if (((dx_149065[0]|0) < clipMinX_147136[0])) Tmp12 = true; else {Tmp12 = ((dy_149066[0]|0) < clipMinY_147137[0]); }if (Tmp12) Tmp11 = true; else {Tmp11 = (nimMin(screenWidth_147083[0], clipMaxX_147139[0]) < (dx_149065[0]|0)); }if (Tmp11) Tmp10 = true; else {Tmp10 = (nimMin(screenHeight_147084[0], clipMaxY_147141[0]) < (dy_149066[0]|0)); }if (!(Tmp10)) {
var srcCol_149095 = spritesheet_147144[0].data[(((sy_149070[0]|0) * sPitch_149063) + (sx_149069[0]|0))];
if (!(paletteTransparent_147148[0][srcCol_149095])) {
swCanvas_147081[0][(((dy_149066[0]|0) * dPitch_149064) + (dx_149065[0]|0))] = paletteMapDraw_147152[0][srcCol_149095];
}

}

if (hflip_149061) {
minuseq__59185(sx_149069, 0, (1.0000000000000000e+00 * (sw_149071 / dw_149067)));
minuseq__59185(dx_149065, 0, 1.0000000000000000e+00);
}
else {
pluseq__51495(sx_149069, 0, (1.0000000000000000e+00 * (sw_149071 / dw_149067)));
pluseq__51495(dx_149065, 0, 1.0000000000000000e+00);
}

} while(false);
res_149208 += 1;
}
} while(false);
} while(false);
if (vflip_149062) {
minuseq__59185(sy_149070, 0, (1.0000000000000000e+00 * (sh_149072 / dh_149068)));
minuseq__59185(dy_149066, 0, 1.0000000000000000e+00);
}
else {
pluseq__51495(sy_149070, 0, (1.0000000000000000e+00 * (sh_149072 / dh_149068)));
pluseq__51495(dy_149066, 0, 1.0000000000000000e+00);
}

res_149215 += 1;
}
} while(false);
} while(false);
}
function sspr_149254(sx_149256, sy_149257, sw_149258, sh_149259, dx_149260, dy_149261, dw_149262, dh_149263, hflip_149264, vflip_149265) {

var Tmp1;
var Tmp2;
var src_149267 = nimCopy(null, {Field0: sx_149256, Field1: sy_149257, Field2: sw_149258, Field3: sh_149259}, NTI147028);
if ((0 <= dw_149262)) {
Tmp1 = dw_149262;
}
else {
Tmp1 = sw_149258;
}

var dw_149268 = Tmp1;
if ((0 <= dh_149263)) {
Tmp2 = dh_149263;
}
else {
Tmp2 = sh_149259;
}

var dh_149269 = Tmp2;
var dst_149271 = nimCopy(null, {Field0: (dx_149260 - cameraX_147125[0]), Field1: (dy_149261 - cameraY_147126[0]), Field2: dw_149268, Field3: dh_149269}, NTI147028);
blitStretch_149057(src_149267, dst_149271, hflip_149264, vflip_149265);
}
function pget_147393(x_147395, y_147396) {

var result_147397 = 0;
BeforeRet: do {
result_147397 = (swCanvas_147081[0][((y_147396 * screenWidth_147083[0]) + x_147395)]|0);
break BeforeRet;
} while (false); 
return result_147397;
}
function pset_147386(x_147388, y_147389, c_147390) {

var Tmp1;
var Tmp2;
var Tmp3;
BeforeRet: do {
var x_147391 = (x_147388 - cameraX_147125[0]);
var y_147392 = (y_147389 - cameraY_147126[0]);
if ((x_147391 < 0)) Tmp3 = true; else {Tmp3 = ((screenWidth_147083[0] - 1) < x_147391); }if (Tmp3) Tmp2 = true; else {Tmp2 = (y_147392 < 0); }if (Tmp2) Tmp1 = true; else {Tmp1 = ((screenHeight_147084[0] - 1) < y_147392); }if (Tmp1) {
break BeforeRet;
}

swCanvas_147081[0][((y_147392 * screenWidth_147083[0]) + x_147391)] = c_147390;
} while (false); 
}
function introDraw_171764() {

if ((frame_147171[0] < 300)) {
if ((frame_147171[0] == 60)) {
cls_147538();
sfx_149586(toInt_161018(0), -1);
sspr_149254(88, 104, 24, 24, 52, 52, 24, 24, false, false);
}
else {
if ((frame_147171[0] == 120)) {
sfx_149586(toInt_161018(0), -1);
setColor_147374(2);
printShadowC_154510(makeNimstrLit("ld38"), 64, 92, 1);
}
else {
if ((0 < drippiness_171763[0])) {
L1: do {
var i_171781 = 0;
var i_171818 = 0;
L2: do {
L3: while (true) {
if (!(i_171818 < drippiness_171763[0])) break L3;
i_171781 = i_171818;
var x_171789 = rnd_155167(128);
var y_171797 = rnd_155167(128);
var c_171798 = pget_147393(x_171789, y_171797);
if (((c_171798 == 14) || (c_171798 == 13))) {
if (!((pget_147393(x_171789, (y_171797 + 1)) == 2))) {
pset_147386(x_171789, (y_171797 + 1), c_171798);
drippiness_171763[0] -= 1;
}

}

i_171818 += 1;
}
} while(false);
} while(false);
}
}}
}
else {
cls_147538();
palt_147342(0, true);
sspr_149254(0, 88, 83, 8, 23, 60, 83, 8, false, false);
if ((400 <= frame_147171[0])) {
setColor_147374(2);
printShadowC_154510(makeNimstrLit("the ludum frontier"), 64, 90, 1);
}

if ((frame_147171[0] == 600)) {
run_149916(menuInit_161055, menuUpdate_161057, menuDraw_161060);
}

}

}
run_149916(introInit_171755, introUpdate_171757, introDraw_171764);
function setElements_151116(t_151119, ax_151120, ay_151121, bx_151122, by_151123, tx_151124, ty_151125) {

t_151119.ax = ax_151120;
t_151119.ay = ay_151121;
t_151119.bx = bx_151122;
t_151119.by = by_151123;
t_151119.tx = tx_151124;
t_151119.ty = ty_151125;
}
function matrix2d_151042(ax_151044, ay_151045, bx_151046, by_151047, tx_151048, ty_151049) {

var result_151134 = [{ax: 0.0, ay: 0.0, bx: 0.0, by: 0.0, tx: 0.0, ty: 0.0}];
setElements_151116(result_151134[0], ax_151044, ay_151045, bx_151046, by_151047, tx_151048, ty_151049);
return result_151134[0];
}
function point2d_151054(x_151056, y_151057) {

var result_151918 = {x: 0.0, y: 0.0};
result_151918.x = x_151056;
result_151918.y = y_151057;
return result_151918;
}
function vector2d_151050(x_151052, y_151053) {

var result_151319 = {x: 0.0, y: 0.0};
result_151319.x = x_151052;
result_151319.y = y_151053;
return result_151319;
}
function sysFatal_18852(message_18858) {

var e_18860 = null;
e_18860 = {m_type: NTI3482, parent: null, name: null, message: null, trace: null};
e_18860.message = nimCopy(null, message_18858, NTI138);
raiseException(e_18860, "NilAccessError");
}
function chckNilDisp(p_18849, p_18849_Idx) {

if ((p_18849_Idx == 0)) {
sysFatal_18852(makeNimstrLit("cannot dispatch; dispatcher is nil"));
}

}
function draw_161225(self_161227) {

if (self_161227.eaten) {
spr_149239(98, (self_161227.pos.Field0 * 16), (self_161227.pos.Field1 * 16), 2, 2, false, false);
}
else {
spr_149239(96, (self_161227.pos.Field0 * 16), (self_161227.pos.Field1 * 16), 2, 2, false, false);
}

}
function draw_161083(self_161085) {

spr_149239((68 + (self_161085.rockKind * 2)), (self_161085.pos.Field0 * 16), (self_161085.pos.Field1 * 16), 2, 2, false, false);
}
function draw_161417(self_161419) {

spr_149239(64, (self_161419.pos.Field0 * 16), (self_161419.pos.Field1 * 16), 2, 2, false, false);
}
function draw_165118(self_165120) {

var Tmp1;
var Tmp2;
var viewPos_165121 = getViewPos_162088(self_165120);
if ((self_165120 == cursorObject_162051[0])) {
spr_149239(100, viewPos_165121.Field0, (viewPos_165121.Field1 + 8), 2, 2, false, false);
}

if (!scanning_162063[0]) Tmp1 = false; else {Tmp1 = eqeq__163605(cursor_162049[0], self_165120.pos); }if (Tmp1) {
if ((Math.floor(frame_147171[0] % 10) < 5)) {
Tmp2 = 15;
}
else {
Tmp2 = 2;
}

pal_147319(0, Tmp2);
}
else {
pal_147319(0, 0);
}

if ((self_165120.kind == 8)) {
if (self_165120.multiplied) {
spr_149239(74, viewPos_165121.Field0, viewPos_165121.Field1, 2, 2, false, false);
}
else {
spr_149239(72, (viewPos_165121.Field0 + toPint_150050((Math.cos(((frame_147171[0] / 3.0000000000000000e+01) + (self_165120.pos.Field0 * 2.1000000000000001e+00))) * 3.0000000000000000e+00))), (viewPos_165121.Field1 + toPint_150050((Math.sin(((frame_147171[0] / 4.0000000000000000e+01) + (self_165120.pos.Field1 * 2.1000000000000001e+00))) * 2.0000000000000000e+00))), 2, 2, false, false);
}

}
else {
if (self_165120.happy) {
spr_149239(((self_165120.kind|0) * 2), viewPos_165121.Field0, viewPos_165121.Field1, 2, 2, false, false);
}
else {
spr_149239((32 + ((self_165120.kind|0) * 2)), (viewPos_165121.Field0 + toPint_150050((Math.cos(((frame_147171[0] / 3.0000000000000000e+01) + (self_165120.pos.Field0 * 2.1000000000000001e+00))) * 2.0000000000000000e+00))), viewPos_165121.Field1, 2, 2, false, false);
}

}

pal_147319(0, 0);
}
function draw_162186(self_162188) {

var pos_162189 = getViewPos_162088(self_162188);
spr_149239(228, pos_162189.Field0, (pos_162189.Field1 - toPint_150050(self_162188.altitude)), 2, 2, false, false);
}
function draw_162181(self_162183) {

var pos_162184 = getViewPos_162088(self_162183);
spr_149239(192, pos_162184.Field0, (pos_162184.Field1 - toPint_150050(self_162183.altitude)), 4, 4, false, false);
}
function draw_161062(self_161064) {

}
function draw_161066(self_161064) {

chckNilDisp(self_161064);
if (isObj(self_161064.m_type, NTI161219)) {
draw_161225(self_161064);
}
else {
if (isObj(self_161064.m_type, NTI161077)) {
draw_161083(self_161064);
}
else {
if (isObj(self_161064.m_type, NTI161413)) {
draw_161417(self_161064);
}
else {
if (isObj(self_161064.m_type, NTI162924)) {
draw_165118(self_161064);
}
else {
if (isObj(self_161064.m_type, NTI161633)) {
draw_162186(self_161064);
}
else {
if (isObj(self_161064.m_type, NTI161625)) {
draw_162181(self_161064);
}
else {
if (isObj(self_161064.m_type, NTI161039)) {
draw_161062(self_161064);
}
}}}}}}
}
function update_164516(self_164518, dt_164519) {

if (!(eqeq__163605(self_164518.lastPos, self_164518.pos))) {
pluseq__51495(self_164518, "alpha", (dt_164519 * 8.0000000000000000e+00));
if ((Math.floor(frame_147171[0] % 2) == 0)) {
add_164062(particles_162074[0], {kind: 2, pos: plus__162140(vec2f_153048(getViewPos_162088(self_164518)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), vel: rndVec_154065(5.0000000000000000e-01), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: false}, false);
}

if ((1.0000000000000000e+00 <= self_164518.alpha)) {
nimCopy(self_164518.lastPos, self_164518.pos, NTI153025);
self_164518.alpha = 0.0;
}

}

}
function update_165168(self_165170, dt_165171) {

var Tmp1;
var Tmp2;
if ((((currentLevel_162046[0].success || currentLevel_162046[0].failed) || currentLevel_162046[0].aborted) && (currentLevel_162046[0].timeout <= 0.0))) {
if ((self_165170.altitude == 0.0)) {
sfx_149586(toInt_161018(4), 3);
fadeMusicOut_149606(3000);
}

pluseq__51495(shake_162059, 0, 5.0000000000000000e-01);
self_165170.altitude = lerp_165185(self_165170.altitude, 1.2800000000000000e+02, 1.0000000000000000e-02);
if (!(self_165170.altitude < 1.0000000000000000e+01)) Tmp1 = false; else {Tmp1 = (1.0000000000000000e+00 < self_165170.altitude); }if (Tmp1) {
add_164062(particles_162074[0], {kind: 2, pos: plus__162140(vec2f_153048(star__162457(self_165170.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), vel: rndVec_154065(1.0000000000000000e+00), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: false}, false);
}

if (((self_165170.altitude|0) == 100)) {
sfx_149586(toInt_161018(9), 3);
self_165170.altitude = 1.0100000000000000e+02;
}

}
else {
if ((0.0 < self_165170.altitude)) {
pluseq__51495(shake_162059, 0, 5.0000000000000000e-01);
self_165170.altitude = lerp_165185(self_165170.altitude, 0.0, 5.0000000000000003e-02);
if (!(self_165170.altitude < 1.0000000000000000e+01)) Tmp2 = false; else {Tmp2 = (1.0000000000000000e+00 < self_165170.altitude); }if (Tmp2) {
add_164062(particles_162074[0], {kind: 2, pos: plus__162140(vec2f_153048(star__162457(self_165170.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), vel: rndVec_154065(1.0000000000000000e+00), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: false}, false);
}

if ((self_165170.altitude < 1.0000000000000000e+00)) {
self_165170.altitude = 0.0;
sfx_149586(toInt_161018(0), 2);
music_149591(1);
}

}

if ((self_165170.altitude == 0.0)) {
update_164516(self_165170, dt_165171);
}

}

}
function find_163872(a_163877, item_163879) {

var result_163880 = 0;
BeforeRet: do {
L1: do {
var i_163905 = null;
var i_163928 = 0;
L2: do {
L3: while (true) {
if (!(i_163928 < (a_163877 != null ? a_163877.length : 0))) break L3;
i_163905 = a_163877[i_163928];
if ((i_163905 == item_163879)) {
break BeforeRet;
}

result_163880 += 1;
i_163928 += 1;
}
} while(false);
} while(false);
result_163880 = -1;
} while (false); 
return result_163880;
}
function contains_163862(a_163867, item_163869) {

var result_163870 = false;
BeforeRet: do {
result_163870 = (0 <= find_163872(a_163867, item_163869));
break BeforeRet;
} while (false); 
return result_163870;
}
function isConnectedToCrystal_163839(self_163841, seen_163844, seen_163844_Idx) {

var Tmp2;
var Tmp3;
var Tmp4;
var Tmp5;
var result_163845 = false;
BeforeRet: do {
if (seen_163844[seen_163844_Idx] != null) { seen_163844[seen_163844_Idx].push(self_163841); } else { seen_163844[seen_163844_Idx] = [self_163841]; };
L1: do {
var obj_163856 = null;
var colontmp__163940 = {Field0: 0, Field1: 0};
colontmp__163940 = self_163841.pos;
var left_163942 = objectAtPos_163499(plus__162166(colontmp__163940, vec2i_153037(-1, 0)));
if (!((left_163942 == null))) {
obj_163856 = left_163942;
if (isObj(obj_163856.m_type, NTI161413)) {
result_163845 = true;
break BeforeRet;
}

if (isObj(obj_163856.m_type, NTI162924)) {
var alien_163859 = obj_163856;
if (!(contains_163862(seen_163844[seen_163844_Idx], obj_163856))) {
if (!(alien_163859.kind == 3)) Tmp2 = false; else {Tmp2 = isConnectedToCrystal_163839(obj_163856, seen_163844, seen_163844_Idx); }if (Tmp2) {
result_163845 = true;
break BeforeRet;
}

}

}

}

var right_163944 = objectAtPos_163499(plus__162166(colontmp__163940, vec2i_153037(1, 0)));
if (!((right_163944 == null))) {
obj_163856 = right_163944;
if (isObj(obj_163856.m_type, NTI161413)) {
result_163845 = true;
break BeforeRet;
}

if (isObj(obj_163856.m_type, NTI162924)) {
var alien_163946 = obj_163856;
if (!(contains_163862(seen_163844[seen_163844_Idx], obj_163856))) {
if (!(alien_163946.kind == 3)) Tmp3 = false; else {Tmp3 = isConnectedToCrystal_163839(obj_163856, seen_163844, seen_163844_Idx); }if (Tmp3) {
result_163845 = true;
break BeforeRet;
}

}

}

}

var up_163948 = objectAtPos_163499(plus__162166(colontmp__163940, vec2i_153037(0, -1)));
if (!((up_163948 == null))) {
obj_163856 = up_163948;
if (isObj(obj_163856.m_type, NTI161413)) {
result_163845 = true;
break BeforeRet;
}

if (isObj(obj_163856.m_type, NTI162924)) {
var alien_163950 = obj_163856;
if (!(contains_163862(seen_163844[seen_163844_Idx], obj_163856))) {
if (!(alien_163950.kind == 3)) Tmp4 = false; else {Tmp4 = isConnectedToCrystal_163839(obj_163856, seen_163844, seen_163844_Idx); }if (Tmp4) {
result_163845 = true;
break BeforeRet;
}

}

}

}

var down_163952 = objectAtPos_163499(plus__162166(colontmp__163940, vec2i_153037(0, 1)));
if (!((down_163952 == null))) {
obj_163856 = down_163952;
if (isObj(obj_163856.m_type, NTI161413)) {
result_163845 = true;
break BeforeRet;
}

if (isObj(obj_163856.m_type, NTI162924)) {
var alien_163954 = obj_163856;
if (!(contains_163862(seen_163844[seen_163844_Idx], obj_163856))) {
if (!(alien_163954.kind == 3)) Tmp5 = false; else {Tmp5 = isConnectedToCrystal_163839(obj_163856, seen_163844, seen_163844_Idx); }if (Tmp5) {
result_163845 = true;
break BeforeRet;
}

}

}

}

} while(false);
} while (false); 
return result_163845;
}
function hasAdjacentFreeSpace_163735(pos_163737) {

var Tmp1;
var Tmp2;
var result_163738 = false;
BeforeRet: do {
if (!(0 < pos_163737.Field0)) Tmp1 = false; else {Tmp1 = (objectAtPos_163499(plus__162166(pos_163737, vec2i_153037(-1, 0))) == null); }if (Tmp1) {
result_163738 = true;
break BeforeRet;
}

if (((pos_163737.Field0 < (currentLevel_162046[0].dimensions.Field0 - 1)) && (objectAtPos_163499(plus__162166(pos_163737, vec2i_153037(1, 0))) == null))) {
result_163738 = true;
break BeforeRet;
}

if (!(0 < pos_163737.Field1)) Tmp2 = false; else {Tmp2 = (objectAtPos_163499(plus__162166(pos_163737, vec2i_153037(0, -1))) == null); }if (Tmp2) {
result_163738 = true;
break BeforeRet;
}

if (((pos_163737.Field1 < (currentLevel_162046[0].dimensions.Field1 - 1)) && (objectAtPos_163499(plus__162166(pos_163737, vec2i_153037(0, 1))) == null))) {
result_163738 = true;
break BeforeRet;
}

result_163738 = false;
break BeforeRet;
} while (false); 
return result_163738;
}
function isHappy_163955(self_163957) {

var Tmp2;
var Tmp3;
var Tmp4;
var Tmp5;
var Tmp10;
var Tmp14;
var Tmp15;
var Tmp19;
var Tmp20;
var Tmp24;
var Tmp25;
var Tmp29;
var Tmp31;
var Tmp32;
var Tmp33;
var Tmp34;
var Tmp51;
var Tmp52;
var Tmp53;
var Tmp54;
var Tmp58;
var Tmp59;
var Tmp60;
var Tmp61;
var result_163958 = false;
BeforeRet: do {
switch (self_163957.kind) {
case 0: L1: do {
var obj_163959 = null;
var colontmp__164376 = {Field0: 0, Field1: 0};
colontmp__164376 = self_163957.pos;
var left_164378 = objectAtPos_163499(plus__162166(colontmp__164376, vec2i_153037(-1, 0)));
if (!((left_164378 == null))) {
obj_163959 = left_164378;
if (!isObj(obj_163959.m_type, NTI161219)) Tmp2 = false; else {Tmp2 = !(obj_163959.eaten); }if (Tmp2) {
result_163958 = true;
break BeforeRet;
}

}

var right_164380 = objectAtPos_163499(plus__162166(colontmp__164376, vec2i_153037(1, 0)));
if (!((right_164380 == null))) {
obj_163959 = right_164380;
if (!isObj(obj_163959.m_type, NTI161219)) Tmp3 = false; else {Tmp3 = !(obj_163959.eaten); }if (Tmp3) {
result_163958 = true;
break BeforeRet;
}

}

var up_164382 = objectAtPos_163499(plus__162166(colontmp__164376, vec2i_153037(0, -1)));
if (!((up_164382 == null))) {
obj_163959 = up_164382;
if (!isObj(obj_163959.m_type, NTI161219)) Tmp4 = false; else {Tmp4 = !(obj_163959.eaten); }if (Tmp4) {
result_163958 = true;
break BeforeRet;
}

}

var down_164384 = objectAtPos_163499(plus__162166(colontmp__164376, vec2i_153037(0, 1)));
if (!((down_164384 == null))) {
obj_163959 = down_164384;
if (!isObj(obj_163959.m_type, NTI161219)) Tmp5 = false; else {Tmp5 = !(obj_163959.eaten); }if (Tmp5) {
result_163958 = true;
break BeforeRet;
}

}

} while(false);

break;
case 1: var adjacentAliens_163961 = 0;
L6: do {
var obj_163962 = null;
var colontmp__164387 = {Field0: 0, Field1: 0};
colontmp__164387 = self_163957.pos;
var left_164389 = objectAtPos_163499(plus__162166(colontmp__164387, vec2i_153037(-1, 0)));
if (!((left_164389 == null))) {
obj_163962 = left_164389;
if (isObj(obj_163962.m_type, NTI162924)) {
var alien_163964 = obj_163962;
if (!((alien_163964.kind == 1))) {
adjacentAliens_163961 += 1;
}

}

}

var right_164391 = objectAtPos_163499(plus__162166(colontmp__164387, vec2i_153037(1, 0)));
if (!((right_164391 == null))) {
obj_163962 = right_164391;
if (isObj(obj_163962.m_type, NTI162924)) {
var alien_164393 = obj_163962;
if (!((alien_164393.kind == 1))) {
adjacentAliens_163961 += 1;
}

}

}

var up_164395 = objectAtPos_163499(plus__162166(colontmp__164387, vec2i_153037(0, -1)));
if (!((up_164395 == null))) {
obj_163962 = up_164395;
if (isObj(obj_163962.m_type, NTI162924)) {
var alien_164397 = obj_163962;
if (!((alien_164397.kind == 1))) {
adjacentAliens_163961 += 1;
}

}

}

var down_164399 = objectAtPos_163499(plus__162166(colontmp__164387, vec2i_153037(0, 1)));
if (!((down_164399 == null))) {
obj_163962 = down_164399;
if (isObj(obj_163962.m_type, NTI162924)) {
var alien_164401 = obj_163962;
if (!((alien_164401.kind == 1))) {
adjacentAliens_163961 += 1;
}

}

}

} while(false);
if ((2 < adjacentAliens_163961)) {
result_163958 = true;
break BeforeRet;
}


break;
case 2: L7: do {
var obj_163982 = null;
var colontmp__164404 = {Field0: 0, Field1: 0};
colontmp__164404 = self_163957.pos;
var left_164406 = objectAtPos_163499(plus__162166(colontmp__164404, vec2i_153037(-1, 0)));
if (!((left_164406 == null))) {
obj_163982 = left_164406;
if (isObj(obj_163982.m_type, NTI161077)) {
result_163958 = true;
break BeforeRet;
}

}

var right_164408 = objectAtPos_163499(plus__162166(colontmp__164404, vec2i_153037(1, 0)));
if (!((right_164408 == null))) {
obj_163982 = right_164408;
if (isObj(obj_163982.m_type, NTI161077)) {
result_163958 = true;
break BeforeRet;
}

}

var up_164410 = objectAtPos_163499(plus__162166(colontmp__164404, vec2i_153037(0, -1)));
if (!((up_164410 == null))) {
obj_163982 = up_164410;
if (isObj(obj_163982.m_type, NTI161077)) {
result_163958 = true;
break BeforeRet;
}

}

var down_164412 = objectAtPos_163499(plus__162166(colontmp__164404, vec2i_153037(0, 1)));
if (!((down_164412 == null))) {
obj_163982 = down_164412;
if (isObj(obj_163982.m_type, NTI161077)) {
result_163958 = true;
break BeforeRet;
}

}

} while(false);

break;
case 3: L8: do {
var obj_163984 = null;
var colontmp__164415 = {Field0: 0, Field1: 0};
colontmp__164415 = self_163957.pos;
var left_164417 = objectAtPos_163499(plus__162166(colontmp__164415, vec2i_153037(-1, 0)));
if (!((left_164417 == null))) {
obj_163984 = left_164417;
if (isObj(obj_163984.m_type, NTI162924)) {
if ((obj_163984.kind == 8)) {
result_163958 = false;
break BeforeRet;
}

}

}

var right_164419 = objectAtPos_163499(plus__162166(colontmp__164415, vec2i_153037(1, 0)));
if (!((right_164419 == null))) {
obj_163984 = right_164419;
if (isObj(obj_163984.m_type, NTI162924)) {
if ((obj_163984.kind == 8)) {
result_163958 = false;
break BeforeRet;
}

}

}

var up_164421 = objectAtPos_163499(plus__162166(colontmp__164415, vec2i_153037(0, -1)));
if (!((up_164421 == null))) {
obj_163984 = up_164421;
if (isObj(obj_163984.m_type, NTI162924)) {
if ((obj_163984.kind == 8)) {
result_163958 = false;
break BeforeRet;
}

}

}

var down_164423 = objectAtPos_163499(plus__162166(colontmp__164415, vec2i_153037(0, 1)));
if (!((down_164423 == null))) {
obj_163984 = down_164423;
if (isObj(obj_163984.m_type, NTI162924)) {
if ((obj_163984.kind == 8)) {
result_163958 = false;
break BeforeRet;
}

}

}

} while(false);
var seen_164020 = /**/[newSeq_163328(0)];
if (isConnectedToCrystal_163839(self_163957, seen_164020, 0)) {
result_163958 = true;
break BeforeRet;
}


break;
case 4: var happy_164022 = false;
L9: do {
var obj_164023 = null;
var colontmp__164435 = {Field0: 0, Field1: 0};
colontmp__164435 = self_163957.pos;
var left_164437 = objectAtPos_163499(plus__162166(colontmp__164435, vec2i_153037(-1, 0)));
if (!((left_164437 == null))) {
obj_164023 = left_164437;
if (!isObj(obj_164023.m_type, NTI161219)) Tmp10 = false; else {Tmp10 = !(obj_164023.eaten); }if (Tmp10) {
sfx_149586(toInt_161018(10), -1);
obj_164023.eaten = true;
L11: do {
var i_164034 = 0;
var res_164430 = 0;
L12: do {
L13: while (true) {
if (!(res_164430 <= 10)) break L13;
i_164034 = res_164430;
add_164062(particles_162074[0], {kind: 2, pos: plus__162140(vec2f_153048(star__162457(obj_164023.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), vel: rndVec_154065(1.0000000000000000e+00), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: true}, false);
res_164430 += 1;
}
} while(false);
} while(false);
}
else {
if (!isObj(obj_164023.m_type, NTI162924)) Tmp14 = false; else {Tmp14 = (obj_164023.kind == 4); }if (Tmp14) {
happy_164022 = true;
}
}
}

var right_164439 = objectAtPos_163499(plus__162166(colontmp__164435, vec2i_153037(1, 0)));
if (!((right_164439 == null))) {
obj_164023 = right_164439;
if (!isObj(obj_164023.m_type, NTI161219)) Tmp15 = false; else {Tmp15 = !(obj_164023.eaten); }if (Tmp15) {
sfx_149586(toInt_161018(10), -1);
obj_164023.eaten = true;
L16: do {
var i_164441 = 0;
var res_164443 = 0;
L17: do {
L18: while (true) {
if (!(res_164443 <= 10)) break L18;
i_164441 = res_164443;
add_164062(particles_162074[0], {kind: 2, pos: plus__162140(vec2f_153048(star__162457(obj_164023.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), vel: rndVec_154065(1.0000000000000000e+00), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: true}, false);
res_164443 += 1;
}
} while(false);
} while(false);
}
else {
if (!isObj(obj_164023.m_type, NTI162924)) Tmp19 = false; else {Tmp19 = (obj_164023.kind == 4); }if (Tmp19) {
happy_164022 = true;
}
}
}

var up_164445 = objectAtPos_163499(plus__162166(colontmp__164435, vec2i_153037(0, -1)));
if (!((up_164445 == null))) {
obj_164023 = up_164445;
if (!isObj(obj_164023.m_type, NTI161219)) Tmp20 = false; else {Tmp20 = !(obj_164023.eaten); }if (Tmp20) {
sfx_149586(toInt_161018(10), -1);
obj_164023.eaten = true;
L21: do {
var i_164447 = 0;
var res_164449 = 0;
L22: do {
L23: while (true) {
if (!(res_164449 <= 10)) break L23;
i_164447 = res_164449;
add_164062(particles_162074[0], {kind: 2, pos: plus__162140(vec2f_153048(star__162457(obj_164023.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), vel: rndVec_154065(1.0000000000000000e+00), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: true}, false);
res_164449 += 1;
}
} while(false);
} while(false);
}
else {
if (!isObj(obj_164023.m_type, NTI162924)) Tmp24 = false; else {Tmp24 = (obj_164023.kind == 4); }if (Tmp24) {
happy_164022 = true;
}
}
}

var down_164451 = objectAtPos_163499(plus__162166(colontmp__164435, vec2i_153037(0, 1)));
if (!((down_164451 == null))) {
obj_164023 = down_164451;
if (!isObj(obj_164023.m_type, NTI161219)) Tmp25 = false; else {Tmp25 = !(obj_164023.eaten); }if (Tmp25) {
sfx_149586(toInt_161018(10), -1);
obj_164023.eaten = true;
L26: do {
var i_164453 = 0;
var res_164455 = 0;
L27: do {
L28: while (true) {
if (!(res_164455 <= 10)) break L28;
i_164453 = res_164455;
add_164062(particles_162074[0], {kind: 2, pos: plus__162140(vec2f_153048(star__162457(obj_164023.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), vel: rndVec_154065(1.0000000000000000e+00), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: true}, false);
res_164455 += 1;
}
} while(false);
} while(false);
}
else {
if (!isObj(obj_164023.m_type, NTI162924)) Tmp29 = false; else {Tmp29 = (obj_164023.kind == 4); }if (Tmp29) {
happy_164022 = true;
}
}
}

} while(false);
result_163958 = happy_164022;
break BeforeRet;

break;
case 5: if (!(self_163957.fed)) {
L30: do {
var obj_164093 = null;
var colontmp__164458 = {Field0: 0, Field1: 0};
colontmp__164458 = self_163957.pos;
var left_164460 = objectAtPos_163499(plus__162166(colontmp__164458, vec2i_153037(-1, 0)));
if (!((left_164460 == null))) {
obj_164093 = left_164460;
if (!isObj(obj_164093.m_type, NTI162924)) Tmp31 = false; else {Tmp31 = (obj_164093.kind == 8); }if (Tmp31) {
obj_164093.killed = true;
if ((obj_164093 == cursorObject_162051[0])) {
drop_162444(currentLevel_162046[0]);
}

self_163957.fed = true;
break L30;
}

}

var right_164462 = objectAtPos_163499(plus__162166(colontmp__164458, vec2i_153037(1, 0)));
if (!((right_164462 == null))) {
obj_164093 = right_164462;
if (!isObj(obj_164093.m_type, NTI162924)) Tmp32 = false; else {Tmp32 = (obj_164093.kind == 8); }if (Tmp32) {
obj_164093.killed = true;
if ((obj_164093 == cursorObject_162051[0])) {
drop_162444(currentLevel_162046[0]);
}

self_163957.fed = true;
break L30;
}

}

var up_164464 = objectAtPos_163499(plus__162166(colontmp__164458, vec2i_153037(0, -1)));
if (!((up_164464 == null))) {
obj_164093 = up_164464;
if (!isObj(obj_164093.m_type, NTI162924)) Tmp33 = false; else {Tmp33 = (obj_164093.kind == 8); }if (Tmp33) {
obj_164093.killed = true;
if ((obj_164093 == cursorObject_162051[0])) {
drop_162444(currentLevel_162046[0]);
}

self_163957.fed = true;
break L30;
}

}

var down_164466 = objectAtPos_163499(plus__162166(colontmp__164458, vec2i_153037(0, 1)));
if (!((down_164466 == null))) {
obj_164093 = down_164466;
if (!isObj(obj_164093.m_type, NTI162924)) Tmp34 = false; else {Tmp34 = (obj_164093.kind == 8); }if (Tmp34) {
obj_164093.killed = true;
if ((obj_164093 == cursorObject_162051[0])) {
drop_162444(currentLevel_162046[0]);
}

self_163957.fed = true;
break L30;
}

}

} while(false);
}

result_163958 = self_163957.fed;
break BeforeRet;

break;
case 6: if (hasAdjacentFreeSpace_163735(self_163957.pos)) {
result_163958 = true;
break BeforeRet;
}


break;
case 7: if (!(self_163957.happy)) {
L35: do {
var obj_164114 = null;
var colontmp__164477 = {Field0: 0, Field1: 0};
colontmp__164477 = self_163957.pos;
var left_164479 = objectAtPos_163499(plus__162166(colontmp__164477, vec2i_153037(-1, 0)));
if (!((left_164479 == null))) {
obj_164114 = left_164479;
if (isObj(obj_164114.m_type, NTI162924)) {
if ((obj_164114.kind == 8)) {
L36: do {
var i_164133 = 0;
var res_164473 = 0;
L37: do {
L38: while (true) {
if (!(res_164473 <= 10)) break L38;
i_164133 = res_164473;
add_164062(particles_162074[0], {kind: 3, pos: lerp_162509(plus__162140(vec2f_153048(getViewPos_162088(self_163957)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), plus__162140(vec2f_153048(star__162457(obj_164114.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), 5.0000000000000000e-01), vel: rndVec_154065(2.0000000000000000e+00), ttl: 2.5000000000000000e-01, maxttl: 2.5000000000000000e-01, above: true}, false);
res_164473 += 1;
}
} while(false);
} while(false);
obj_164114.killed = true;
if ((obj_164114 == cursorObject_162051[0])) {
drop_162444(currentLevel_162046[0]);
}

}

}

}

var right_164481 = objectAtPos_163499(plus__162166(colontmp__164477, vec2i_153037(1, 0)));
if (!((right_164481 == null))) {
obj_164114 = right_164481;
if (isObj(obj_164114.m_type, NTI162924)) {
if ((obj_164114.kind == 8)) {
L39: do {
var i_164483 = 0;
var res_164485 = 0;
L40: do {
L41: while (true) {
if (!(res_164485 <= 10)) break L41;
i_164483 = res_164485;
add_164062(particles_162074[0], {kind: 3, pos: lerp_162509(plus__162140(vec2f_153048(getViewPos_162088(self_163957)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), plus__162140(vec2f_153048(star__162457(obj_164114.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), 5.0000000000000000e-01), vel: rndVec_154065(2.0000000000000000e+00), ttl: 2.5000000000000000e-01, maxttl: 2.5000000000000000e-01, above: true}, false);
res_164485 += 1;
}
} while(false);
} while(false);
obj_164114.killed = true;
if ((obj_164114 == cursorObject_162051[0])) {
drop_162444(currentLevel_162046[0]);
}

}

}

}

var up_164487 = objectAtPos_163499(plus__162166(colontmp__164477, vec2i_153037(0, -1)));
if (!((up_164487 == null))) {
obj_164114 = up_164487;
if (isObj(obj_164114.m_type, NTI162924)) {
if ((obj_164114.kind == 8)) {
L42: do {
var i_164489 = 0;
var res_164491 = 0;
L43: do {
L44: while (true) {
if (!(res_164491 <= 10)) break L44;
i_164489 = res_164491;
add_164062(particles_162074[0], {kind: 3, pos: lerp_162509(plus__162140(vec2f_153048(getViewPos_162088(self_163957)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), plus__162140(vec2f_153048(star__162457(obj_164114.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), 5.0000000000000000e-01), vel: rndVec_154065(2.0000000000000000e+00), ttl: 2.5000000000000000e-01, maxttl: 2.5000000000000000e-01, above: true}, false);
res_164491 += 1;
}
} while(false);
} while(false);
obj_164114.killed = true;
if ((obj_164114 == cursorObject_162051[0])) {
drop_162444(currentLevel_162046[0]);
}

}

}

}

var down_164493 = objectAtPos_163499(plus__162166(colontmp__164477, vec2i_153037(0, 1)));
if (!((down_164493 == null))) {
obj_164114 = down_164493;
if (isObj(obj_164114.m_type, NTI162924)) {
if ((obj_164114.kind == 8)) {
L45: do {
var i_164495 = 0;
var res_164497 = 0;
L46: do {
L47: while (true) {
if (!(res_164497 <= 10)) break L47;
i_164495 = res_164497;
add_164062(particles_162074[0], {kind: 3, pos: lerp_162509(plus__162140(vec2f_153048(getViewPos_162088(self_163957)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), plus__162140(vec2f_153048(star__162457(obj_164114.pos, 16)), vec2f_153032(8.0000000000000000e+00, 8.0000000000000000e+00)), 5.0000000000000000e-01), vel: rndVec_154065(2.0000000000000000e+00), ttl: 2.5000000000000000e-01, maxttl: 2.5000000000000000e-01, above: true}, false);
res_164497 += 1;
}
} while(false);
} while(false);
obj_164114.killed = true;
if ((obj_164114 == cursorObject_162051[0])) {
drop_162444(currentLevel_162046[0]);
}

}

}

}

} while(false);
}

var tooClose_164208 = false;
var aligned_164209 = false;
L48: do {
var x_164219 = 0;
var colontmp__164502 = 0;
colontmp__164502 = currentLevel_162046[0].dimensions.Field0;
var i_164505 = 0;
L49: do {
L50: while (true) {
if (!(i_164505 < colontmp__164502)) break L50;
x_164219 = i_164505;
var obj_164220 = objectAtPos_163499(vec2i_153037(x_164219, self_163957.pos.Field1));
if (!!((obj_164220 == null))) Tmp53 = false; else {Tmp53 = !((obj_164220 == self_163957)); }if (!Tmp53) Tmp52 = false; else {Tmp52 = isObj(obj_164220.m_type, NTI162924); }if (!Tmp52) Tmp51 = false; else {Tmp51 = (obj_164220.kind == 7); }if (Tmp51) {
if (!((self_163957.pos.Field0 - 1) <= x_164219)) Tmp54 = false; else {Tmp54 = (x_164219 <= (self_163957.pos.Field0 + 1)); }if (Tmp54) {
if (obj_164220.happy) {
obj_164220.happy = false;
add_164062(particles_162074[0], {kind: 1, pos: plus__162140(vec2f_153048(star__162457(obj_164220.pos, 16)), vec2f_153032(8.0000000000000000e+00, 0.0)), vel: vec2f_153032(0.0, -2.5000000000000000e-01), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: true}, false);
}

tooClose_164208 = true;
}

aligned_164209 = true;
}

i_164505 += 1;
}
} while(false);
} while(false);
L55: do {
var y_164301 = 0;
var colontmp__164511 = 0;
colontmp__164511 = currentLevel_162046[0].dimensions.Field1;
var i_164514 = 0;
L56: do {
L57: while (true) {
if (!(i_164514 < colontmp__164511)) break L57;
y_164301 = i_164514;
var obj_164302 = objectAtPos_163499(vec2i_153037(self_163957.pos.Field0, y_164301));
if (!!((obj_164302 == null))) Tmp60 = false; else {Tmp60 = !((obj_164302 == self_163957)); }if (!Tmp60) Tmp59 = false; else {Tmp59 = isObj(obj_164302.m_type, NTI162924); }if (!Tmp59) Tmp58 = false; else {Tmp58 = (obj_164302.kind == 7); }if (Tmp58) {
if (!((self_163957.pos.Field1 - 1) <= y_164301)) Tmp61 = false; else {Tmp61 = (y_164301 <= (self_163957.pos.Field1 + 1)); }if (Tmp61) {
if (obj_164302.happy) {
obj_164302.happy = false;
add_164062(particles_162074[0], {kind: 1, pos: plus__162140(vec2f_153048(star__162457(obj_164302.pos, 16)), vec2f_153032(8.0000000000000000e+00, 0.0)), vel: vec2f_153032(0.0, -2.5000000000000000e-01), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: true}, false);
}

tooClose_164208 = true;
}

aligned_164209 = true;
}

i_164514 += 1;
}
} while(false);
} while(false);
if ((!(tooClose_164208) && aligned_164209)) {
result_163958 = true;
break BeforeRet;
}


break;
case 8: result_163958 = self_163957.multiplied;
break BeforeRet;

break;
default: 
break;
}
result_163958 = false;
break BeforeRet;
} while (false); 
return result_163958;
}
function update_164567(self_164569, dt_164570) {

var Tmp1;
var Tmp3;
var Tmp4;
var Tmp5;
var Tmp6;
var Tmp7;
var Tmp8;
var Tmp9;
var Tmp10;
var Tmp11;
var Tmp12;
var Tmp13;
var Tmp14;
var Tmp15;
var Tmp16;
var Tmp17;
var Tmp18;
var Tmp19;
var Tmp20;
var Tmp21;
var Tmp22;
var Tmp23;
var Tmp24;
var Tmp25;
var Tmp26;
var Tmp27;
update_164516(self_164569, dt_164570);
if (!(self_164569.kind == 8)) Tmp1 = false; else {Tmp1 = (Math.floor(frame_147171[0] % 15) == 0); }if (Tmp1) {
L2: do {
var obj_164580 = null;
var colontmp__165104 = {Field0: 0, Field1: 0};
colontmp__165104 = self_164569.pos;
var left_165106 = objectAtPos_163499(plus__162166(colontmp__165104, vec2i_153037(-1, 0)));
if (!((left_165106 == null))) {
obj_164580 = left_165106;
if (!isObj(obj_164580.m_type, NTI162924)) Tmp3 = false; else {Tmp3 = (obj_164580.kind == 8); }if (Tmp3) {
self_164569.multiplied = true;
if (!(0 < self_164569.pos.Field0)) Tmp4 = false; else {Tmp4 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(-1, 0))) == null); }if (Tmp4) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))]; };
}
else {
if (!(self_164569.pos.Field0 < (currentLevel_162046[0].dimensions.Field0 - 1))) Tmp5 = false; else {Tmp5 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(1, 0))) == null); }if (Tmp5) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))]; };
}
else {
if (!(0 < self_164569.pos.Field1)) Tmp6 = false; else {Tmp6 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, -1))) == null); }if (Tmp6) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))]; };
}
else {
if (!(self_164569.pos.Field1 < (currentLevel_162046[0].dimensions.Field1 - 1))) Tmp7 = false; else {Tmp7 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, 1))) == null); }if (Tmp7) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))]; };
}
}}}
}

}

var right_165108 = objectAtPos_163499(plus__162166(colontmp__165104, vec2i_153037(1, 0)));
if (!((right_165108 == null))) {
obj_164580 = right_165108;
if (!isObj(obj_164580.m_type, NTI162924)) Tmp8 = false; else {Tmp8 = (obj_164580.kind == 8); }if (Tmp8) {
self_164569.multiplied = true;
if (!(0 < self_164569.pos.Field0)) Tmp9 = false; else {Tmp9 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(-1, 0))) == null); }if (Tmp9) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))]; };
}
else {
if (!(self_164569.pos.Field0 < (currentLevel_162046[0].dimensions.Field0 - 1))) Tmp10 = false; else {Tmp10 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(1, 0))) == null); }if (Tmp10) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))]; };
}
else {
if (!(0 < self_164569.pos.Field1)) Tmp11 = false; else {Tmp11 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, -1))) == null); }if (Tmp11) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))]; };
}
else {
if (!(self_164569.pos.Field1 < (currentLevel_162046[0].dimensions.Field1 - 1))) Tmp12 = false; else {Tmp12 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, 1))) == null); }if (Tmp12) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))]; };
}
}}}
}

}

var up_165110 = objectAtPos_163499(plus__162166(colontmp__165104, vec2i_153037(0, -1)));
if (!((up_165110 == null))) {
obj_164580 = up_165110;
if (!isObj(obj_164580.m_type, NTI162924)) Tmp13 = false; else {Tmp13 = (obj_164580.kind == 8); }if (Tmp13) {
self_164569.multiplied = true;
if (!(0 < self_164569.pos.Field0)) Tmp14 = false; else {Tmp14 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(-1, 0))) == null); }if (Tmp14) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))]; };
}
else {
if (!(self_164569.pos.Field0 < (currentLevel_162046[0].dimensions.Field0 - 1))) Tmp15 = false; else {Tmp15 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(1, 0))) == null); }if (Tmp15) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))]; };
}
else {
if (!(0 < self_164569.pos.Field1)) Tmp16 = false; else {Tmp16 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, -1))) == null); }if (Tmp16) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))]; };
}
else {
if (!(self_164569.pos.Field1 < (currentLevel_162046[0].dimensions.Field1 - 1))) Tmp17 = false; else {Tmp17 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, 1))) == null); }if (Tmp17) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))]; };
}
}}}
}

}

var down_165112 = objectAtPos_163499(plus__162166(colontmp__165104, vec2i_153037(0, 1)));
if (!((down_165112 == null))) {
obj_164580 = down_165112;
if (!isObj(obj_164580.m_type, NTI162924)) Tmp18 = false; else {Tmp18 = (obj_164580.kind == 8); }if (Tmp18) {
self_164569.multiplied = true;
if (!(0 < self_164569.pos.Field0)) Tmp19 = false; else {Tmp19 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(-1, 0))) == null); }if (Tmp19) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))]; };
}
else {
if (!(self_164569.pos.Field0 < (currentLevel_162046[0].dimensions.Field0 - 1))) Tmp20 = false; else {Tmp20 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(1, 0))) == null); }if (Tmp20) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))]; };
}
else {
if (!(0 < self_164569.pos.Field1)) Tmp21 = false; else {Tmp21 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, -1))) == null); }if (Tmp21) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))]; };
}
else {
if (!(self_164569.pos.Field1 < (currentLevel_162046[0].dimensions.Field1 - 1))) Tmp22 = false; else {Tmp22 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, 1))) == null); }if (Tmp22) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))]; };
}
}}}
}

}

} while(false);
if (self_164569.multiplied) {
if (!(0 < self_164569.pos.Field0)) Tmp23 = false; else {Tmp23 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(-1, 0))) == null); }if (Tmp23) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(-1, 0)))]; };
}
else {
if (!(self_164569.pos.Field0 < (currentLevel_162046[0].dimensions.Field0 - 1))) Tmp24 = false; else {Tmp24 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(1, 0))) == null); }if (Tmp24) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(1, 0)))]; };
}
else {
if (!(0 < self_164569.pos.Field1)) Tmp25 = false; else {Tmp25 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, -1))) == null); }if (Tmp25) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, -1)))]; };
}
else {
if (!(self_164569.pos.Field1 < (currentLevel_162046[0].dimensions.Field1 - 1))) Tmp26 = false; else {Tmp26 = (objectAtPos_163499(plus__162166(self_164569.pos, vec2i_153037(0, 1))) == null); }if (Tmp26) {
if (objects_162054[0] != null) { objects_162054[0].push(newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))); } else { objects_162054[0] = [newAlien_162936(8, plus__162166(self_164569.pos, vec2i_153037(0, 1)))]; };
}
}}}
}

}

if (isHappy_163955(self_164569)) {
if (!(self_164569.happy)) {
add_164062(particles_162074[0], {kind: 0, pos: plus__162140(vec2f_153048(star__162457(self_164569.pos, 16)), vec2f_153032(8.0000000000000000e+00, 0.0)), vel: vec2f_153032(0.0, -2.5000000000000000e-01), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: true}, false);
sfx_149586(toInt_161018(5), 1);
}

self_164569.happy = true;
}
else {
if (self_164569.happy) {
add_164062(particles_162074[0], {kind: 1, pos: plus__162140(vec2f_153048(star__162457(self_164569.pos, 16)), vec2f_153032(8.0000000000000000e+00, 0.0)), vel: vec2f_153032(0.0, -2.5000000000000000e-01), ttl: 5.0000000000000000e-01, maxttl: 5.0000000000000000e-01, above: true}, false);
sfx_149586(toInt_161018(6), 1);
}

self_164569.happy = false;
}

if (!((currentLevel_162046[0].tension <= 0.0) && !(currentLevel_162046[0].failed))) Tmp27 = false; else {Tmp27 = (1.8999999999999999e+00 <= currentLevel_162046[0].timeout); }if (Tmp27) {
add_164062(particles_162074[0], {kind: 0, pos: plus__162140(vec2f_153048(star__162457(self_164569.pos, 16)), vec2f_153032(8.0000000000000000e+00, 0.0)), vel: vec2f_153032((rnd_147791(5.0000000000000000e-01) - 2.5000000000000000e-01), (-2.5000000000000000e-01 - rnd_147791(5.0000000000000000e-01))), ttl: 4.0000000000000000e+00, maxttl: 4.0000000000000000e+00, above: true}, false);
}

}
function update_161068(self_161070, dt_161071) {

}
function update_161073(self_161070, dt_161071) {

chckNilDisp(self_161070);
if (isObj(self_161070.m_type, NTI161625)) {
update_165168(self_161070, dt_161071);
}
else {
if (isObj(self_161070.m_type, NTI162924)) {
update_164567(self_161070, dt_161071);
}
else {
if (isObj(self_161070.m_type, NTI161613)) {
update_164516(self_161070, dt_161071);
}
else {
if (isObj(self_161070.m_type, NTI161039)) {
update_161068(self_161070, dt_161071);
}
}}}
}
function merge_165425(a_165431, b_165435, lo_165437, m_165439, hi_165441, cmp_165448, order_165450) {

BeforeRet: do {
if ((star__43008(cmp_165448(a_165431[m_165439], a_165431[(m_165439 + 1)]), order_165450) <= 0)) {
break BeforeRet;
}

var j_165451 = lo_165437;
var bb_165801 = 0;
L1: do {
L2: while (true) {
if (!(j_165451 <= m_165439)) break L2;
b_165435[bb_165801] = a_165431[j_165451];
bb_165801 += 1;
j_165451 += 1;
}
} while(false);
var i_166019 = 0;
var k_166020 = lo_165437;
L3: do {
L4: while (true) {
if (!((k_166020 < j_165451) && (j_165451 <= hi_165441))) break L4;
if ((star__43008(cmp_165448(b_165435[i_166019], a_165431[j_165451]), order_165450) <= 0)) {
a_165431[k_166020] = b_165435[i_166019];
i_166019 += 1;
}
else {
a_165431[k_166020] = a_165431[j_165451];
j_165451 += 1;
}

k_166020 += 1;
}
} while(false);
L5: do {
L6: while (true) {
if (!(k_166020 < j_165451)) break L6;
a_165431[k_166020] = b_165435[i_166019];
k_166020 += 1;
i_166019 += 1;
}
} while(false);
} while (false); 
}
function sort_165385(a_165391, cmp_165398, order_165400) {

var n_165407 = (a_165391 != null ? a_165391.length : 0);
var b_165409 = null;
b_165409 = new Array(Math.floor(n_165407 / 2)); for (var i=0;i<Math.floor(n_165407 / 2);++i) {b_165409[i]=null;}var s_165420 = 1;
L1: do {
L2: while (true) {
if (!(s_165420 < n_165407)) break L2;
var m_165421 = ((n_165407 - 1) - s_165420);
L3: do {
L4: while (true) {
if (!(0 <= m_165421)) break L4;
merge_165425(a_165391, b_165409, nimMax(((m_165421 - s_165420) + 1), 0), m_165421, (m_165421 + s_165420), cmp_165398, order_165400);
m_165421 -= (s_165420 * 2);
}
} while(false);
s_165420 = (s_165420 * 2);
}
} while(false);
}
function move_165329(self_165331, target_165332) {

var Tmp1;
var Tmp2;
function colonanonymous__165374(a_165376, b_165377) {

var result_165378 = 0;
BeforeRet: do {
result_165378 = (a_165376.pos.Field1 - b_165377.pos.Field1);
break BeforeRet;
} while (false); 
return result_165378;
}
BeforeRet: do {
if (!(eqeq__163605(self_165331.pos, self_165331.lastPos))) {
break BeforeRet;
}

if (((target_165332.Field0 < 0) || (target_165332.Field1 < 0))) Tmp2 = true; else {Tmp2 = ((currentLevel_162046[0].dimensions.Field0 - 1) < target_165332.Field0); }if (Tmp2) Tmp1 = true; else {Tmp1 = ((currentLevel_162046[0].dimensions.Field1 - 1) < target_165332.Field1); }if (Tmp1) {
pluseq__51495(shake_162059, 0, 1.0000000000000000e+00);
sfx_149586(toInt_161018(12), 2);
break BeforeRet;
}

if ((objectAtPos_163499(target_165332) == null)) {
nimCopy(self_165331.pos, target_165332, NTI153025);
sfx_149586(toInt_161018(1), 2);
self_165331.alpha = 0.0;
}
else {
sfx_149586(toInt_161018(12), 2);
pluseq__51495(shake_162059, 0, 1.0000000000000000e+00);
}

sort_165385(objects_162054[0], colonanonymous__165374, 1);
} while (false); 
}
function move_166835(self_166837, target_166838) {

BeforeRet: do {
if ((0.0 < self_166837.altitude)) {
break BeforeRet;
}

move_165329(self_166837, target_166838);
} while (false); 
}
function move_165302(self_165304, target_165305) {

BeforeRet: do {
pluseq__51495(shake_162059, 0, 1.0000000000000000e+00);
sfx_149586(toInt_161018(12), 2);
if (moveBuffer_162084[0] != null) { moveBuffer_162084[0].push(vec2i_153037(0, 0)); } else { moveBuffer_162084[0] = [vec2i_153037(0, 0)]; };
break BeforeRet;
} while (false); 
}
function move_165307(self_165304, target_165305) {

chckNilDisp(self_165304);
if (isObj(self_165304.m_type, NTI161625)) {
move_166835(self_165304, target_165305);
}
else {
if (isObj(self_165304.m_type, NTI161613)) {
move_165329(self_165304, target_165305);
}
else {
if (isObj(self_165304.m_type, NTI161039)) {
move_165302(self_165304, target_165305);
}
}}
}
